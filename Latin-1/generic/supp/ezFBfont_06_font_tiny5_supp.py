'''
    ezFBfont_06_font_tiny5_supp : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original font_tiny5.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(CC) Gissio 2022-2023 Creative Commons Zero v1.0 Universal"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT Exported by Fony v1.4.7
'''
# Code generated by bdf2dict.py
# Font: font_tiny5
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/font_tiny5.bdf', './supp-char.set', 'True']
# Date: 2024-06-11 17:34:04

version = '0.33'
name = 'font_tiny5'
family = 'None'
weight = 'None'
size = None

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 161

def max_ch():
    return 255

_g = {
 161:[b'\x80\x00\x80\x80\x80\x00',b'2'],
 162:[b'@`\x80`@\x00',b'4'],
 163:[b' P\xe0@\xf0\x00',b'5'],
 164:[b'\x00\x90``\x90\x00',b'5'],
 165:[b'\xa0\xa0@\xe0@\x00',b'4'],
 166:[b'\x80\x80\x00\x80\x80\x00',b'2'],
 167:[b'`\xc0\xa0`\xc0\x00',b'4'],
 168:[b'\xa0\x00\x00\x00\x00\x00',b'4'],
 169:[b'`\x80\x80`\x00\x00',b'4'],
 170:[b'`\xa0`\x00\x00\x00',b'4'],
 171:[b'\x00P\xa0P\x00\x00',b'5'],
 172:[b'\x00\x00\xe0 \x00\x00',b'4'],
 174:[b'\xc0\xa0\xc0\xa0\x00\x00',b'4'],
 175:[b'\xe0\x00\x00\x00\x00\x00',b'4'],
 176:[b'@\xa0@\x00\x00\x00',b'4'],
 177:[b'@\xe0@\x00\xe0\x00',b'4'],
 178:[b'\xc0 @\xe0\x00\x00',b'4'],
 179:[b'\xe0@ \xc0\x00\x00',b'4'],
 180:[b'@\x80\x00\x00\x00\x00',b'3'],
 181:[b'\x00\x00\xa0\xa0\xe0\x80',b'4'],
 182:[b'p\xd0PPP\x00',b'5'],
 183:[b'\x00\x00\x80\x00\x00\x00',b'2'],
 184:[b'\x00\x00\x00\x00@\x80',b'3'],
 185:[b'@\xc0@@\x00\x00',b'3'],
 186:[b'@\xa0@\x00\x00\x00',b'4'],
 187:[b'\x00\xa0P\xa0\x00\x00',b'5'],
 188:[b'@\xc4L\\\x04\x00',b'7'],
 189:[b'@\xd8DH\x1c\x00',b'7'],
 190:[b'\xe0D,\xdc\x04\x00',b'7'],
 191:[b'@\x00@\x80`\x00',b'4'],
 192:[b'`\x90\xf0\x90\x90\x00',b'5'],
 193:[b'`\x90\xf0\x90\x90\x00',b'5'],
 194:[b'`\x90\xf0\x90\x90\x00',b'5'],
 195:[b'\xa0`\x90\xf0\x90\x00',b'5'],
 196:[b'`\x90\xf0\x90\x90\x00',b'5'],
 197:[b'\x90`\x90\xf0\x90\x00',b'5'],
 198:[b'x\xa0\xf8\xa0\xb8\x00',b'6'],
 199:[b'`\x90\x80\x90`@',b'5'],
 200:[b'\xf0\x80\xe0\x80\xf0\x00',b'5'],
 201:[b'\xf0\x80\xe0\x80\xf0\x00',b'5'],
 202:[b'\xf0\x80\xe0\x80\xf0\x00',b'5'],
 203:[b'\xf0\x80\xe0\x80\xf0\x00',b'5'],
 204:[b'@@@@@\x00',b'4'],
 205:[b'\x80\x80\x80\x80\x80\x00',b'2'],
 206:[b'\x80\x80\x80\x80\x80\x00',b'2'],
 207:[b'@@@@@\x00',b'4'],
 208:[b'\xe0\x90\xd0\x90\xe0\x00',b'5'],
 209:[b'\x90\xd0\xb0\x90\x90\x00',b'5'],
 210:[b'`\x90\x90\x90`\x00',b'5'],
 211:[b'`\x90\x90\x90`\x00',b'5'],
 212:[b'`\x90\x90\x90`\x00',b'5'],
 213:[b'\xa0`\x90\x90`\x00',b'5'],
 214:[b'`\x90\x90\x90`\x00',b'5'],
 215:[b'\x00\xa0@\xa0\x00\x00',b'4'],
 216:[b'`\xb0\xd0\x90`\x00',b'5'],
 217:[b'\x90\x90\x90\x90`\x00',b'5'],
 218:[b'\x90\x90\x90\x90`\x00',b'5'],
 219:[b'\x00\x90\x90\x90`\x00',b'5'],
 220:[b'\x00\x90\x90\x90`\x00',b'5'],
 221:[b'@\xa0\xa0@@\x00',b'4'],
 222:[b'\x80\xe0\x90\xe0\x80\x00',b'5'],
 223:[b'@\xa0\xc0\xa0\xc0\x80',b'4'],
 224:[b'@`\xa0\xa0`\x00',b'4'],
 225:[b'@`\xa0\xa0`\x00',b'4'],
 226:[b'\x00`\xa0\xa0`\x00',b'4'],
 227:[b'\xc0`\xa0\xa0`\x00',b'4'],
 228:[b'\x00`\xa0\xa0`\x00',b'4'],
 229:[b'\xa0`\xa0\xa0`\x00',b'4'],
 230:[b'\x00p\xb8\xa0x\x00',b'6'],
 231:[b'\x00`\x80\x80`@',b'4'],
 232:[b'\x80@\xe0\x80`\x00',b'4'],
 233:[b' @\xe0\x80`\x00',b'4'],
 234:[b'\x00@\xe0\x80`\x00',b'4'],
 235:[b'\x00@\xe0\x80`\x00',b'4'],
 236:[b'@\x80\x80\x80\x80\x00',b'2'],
 237:[b'\x80\x00\x80\x80\x80\x00',b'2'],
 238:[b'\x00\x80\x80\x80\x80\x00',b'2'],
 239:[b'\x00@@@@\x00',b'4'],
 240:[b'@ `\xa0@\x00',b'4'],
 241:[b'\x00\xc0\xa0\xa0\xa0\x00',b'4'],
 242:[b'\x80@\xa0\xa0@\x00',b'4'],
 243:[b' @\xa0\xa0@\x00',b'4'],
 244:[b'\x00@\xa0\xa0@\x00',b'4'],
 245:[b'\xc0@\xa0\xa0@\x00',b'4'],
 246:[b'\x00@\xa0\xa0@\x00',b'4'],
 247:[b'@\x00\xe0\x00@\x00',b'4'],
 248:[b'\x00@\xe0\xa0@\x00',b'4'],
 249:[b'@\xa0\xa0\xa0`\x00',b'4'],
 250:[b'@\xa0\xa0\xa0`\x00',b'4'],
 251:[b'\x00\xa0\xa0\xa0`\x00',b'4'],
 252:[b'\x00\xa0\xa0\xa0`\x00',b'4'],
 253:[b'@\xa0\xa0\xa0@\x80',b'4'],
 254:[b'\x80\xc0\xa0\xa0\xc0\x80',b'4'],
 255:[b'\x00\xa0\xa0\xa0@\x80',b'4'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 6, int(_g[c][1])

