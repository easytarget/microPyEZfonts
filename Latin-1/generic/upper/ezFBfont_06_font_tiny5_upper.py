'''
    ezFBfont_06_font_tiny5_upper : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original font_tiny5.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: font_tiny5
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/font_tiny5.bdf', '_', './upper-char.set']
# Date: 2024-06-18 20:27:18
'''
    Original Copyright, Comments and Notices from source:

    COPYRIGHT Exported by Fony v1.4.7

    COMMENT "(CC) Gissio 2022-2023 Creative Commons Zero v1.0 Universal"
'''
version = '0.33'
name = 'font_tiny5'
family = 'generic'
weight = 'none'
size = None

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x02',
  33:b'\x80\x80\x80\x00\x80\x00\x02',
  34:b'\xa0\xa0\x00\x00\x00\x00\x04',
  35:b'P\xf8P\xf8P\x00\x06',
  36:b'@`\xc0 \xc0@\x04',
  37:b'\x90 @\x90\x00\x00\x05',
  38:b'@\xa0@\xa0P\x00\x05',
  39:b'\x80\x80\x00\x00\x00\x00\x02',
  40:b'@\x80\x80\x80@\x00\x03',
  41:b'\x80@@@\x80\x00\x03',
  42:b'@\xe0@\xa0\x00\x00\x04',
  43:b'\x00@\xe0@\x00\x00\x04',
  44:b'\x00\x00\x00\x00@\x80\x03',
  45:b'\x00\x00\xe0\x00\x00\x00\x04',
  46:b'\x00\x00\x00\x00\x80\x00\x02',
  47:b'@@\x80\x80\x80\x00\x03',
  48:b'@\xa0\xa0\xa0@\x00\x04',
  49:b'@\xc0@@@\x00\x04',
  50:b'\xc0 @\x80\xe0\x00\x04',
  51:b'\xc0 @ \xc0\x00\x04',
  52:b' `\xa0\xe0 \x00\x04',
  53:b'\xe0\x80\xc0 \xc0\x00\x04',
  54:b'`\x80\xc0\xa0@\x00\x04',
  55:b'\xe0 @@@\x00\x04',
  56:b'@\xa0@\xa0@\x00\x04',
  57:b'@\xa0` \xc0\x00\x04',
  58:b'\x00\x80\x00\x00\x80\x00\x02',
  59:b'\x00@\x00\x00@\x80\x03',
  60:b' @\x80@ \x00\x04',
  61:b'\x00\xe0\x00\xe0\x00\x00\x04',
  62:b'\x80@ @\x80\x00\x04',
  63:b'\xc0 @\x00@\x00\x04',
  64:b'`\x90\xb0\x80`\x00\x05',
  65:b'`\x90\xf0\x90\x90\x00\x05',
  66:b'\xe0\x90\xe0\x90\xe0\x00\x05',
  67:b'`\x90\x80\x90`\x00\x05',
  68:b'\xe0\x90\x90\x90\xe0\x00\x05',
  69:b'\xf0\x80\xe0\x80\xf0\x00\x05',
  70:b'\xf0\x80\xe0\x80\x80\x00\x05',
  71:b'p\x80\xb0\x90p\x00\x05',
  72:b'\x90\x90\xf0\x90\x90\x00\x05',
  73:b'\x80\x80\x80\x80\x80\x00\x02',
  74:b'   \xa0@\x00\x04',
  75:b'\x90\xa0\xc0\xa0\x90\x00\x05',
  76:b'\x80\x80\x80\x80\xe0\x00\x04',
  77:b'\x88\xd8\xa8\x88\x88\x00\x06',
  78:b'\x90\xd0\xb0\x90\x90\x00\x05',
  79:b'`\x90\x90\x90`\x00\x05',
  80:b'\xe0\x90\xe0\x80\x80\x00\x05',
  81:b'`\x90\x90\xa0P\x00\x05',
  82:b'\xe0\x90\xe0\x90\x90\x00\x05',
  83:b'p\x80`\x10\xe0\x00\x05',
  84:b'\xe0@@@@\x00\x04',
  85:b'\x90\x90\x90\x90`\x00\x05',
  86:b'\xa0\xa0\xa0@@\x00\x04',
  87:b'\xa8\xa8\xa8PP\x00\x06',
  88:b'\xa0\xa0@\xa0\xa0\x00\x04',
  89:b'\xa0\xa0@@@\x00\x04',
  90:b'\xe0 @\x80\xe0\x00\x04',
  91:b'\xc0\x80\x80\x80\xc0\x00\x03',
  92:b'\x80\x80@@@\x00\x03',
  93:b'\xc0@@@\xc0\x00\x03',
  94:b'@\xa0\x00\x00\x00\x00\x04',
  95:b'\x00\x00\x00\x00\xe0\x00\x04',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 6, int(_g[c][-1])
