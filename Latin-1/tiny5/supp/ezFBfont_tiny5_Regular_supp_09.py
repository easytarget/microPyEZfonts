'''
    ezFBfont_tiny5_Regular_supp_09 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original tiny5_Regular.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: tiny5_Regular
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/tiny5-Regular.bdf', '_', './supp-char.set']
# Date: 2024-11-28 12:31:58
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Copyright 2024 The Tiny5 Project Authors (https://github.com/Gissio/font_tiny5)"
'''
version = '0.33'
name = '-tiny5-regular-r-regular--9-9-75-75-c-80-iso10646-1'
family = 'tiny5'
weight = 'regular'
size = None

def height():
    return 9

def baseline():
    return 8

def max_width():
    return 10

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 161

def max_ch():
    return 255

_g = {
  161:b'\x00\x00\x00\x80\x00\x80\x80\x80\x00\x02',
  162:b'\x00\x00\x00@`\x80`@\x00\x04',
  163:b'\x00\x00\x00 P\xe0@\xf0\x00\x05',
  164:b'\x00\x00\x00\x00\x90``\x90\x00\x05',
  165:b'\x00\x00\x00\xa0\xa0@\xe0@\x00\x04',
  166:b'\x00\x00\x00\x80\x80\x00\x80\x80\x00\x02',
  167:b'\x00\x00\x00`\xc0\xa0`\xc0\x00\x04',
  168:b'\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x04',
  169:b'\x00\x00\x00`\x80\x80`\x00\x00\x04',
  170:b'\x00\x00\x00`\xa0\xa0`\x00\x00\x04',
  171:b'\x00\x00\x00\x00P\xa0P\x00\x00\x05',
  172:b'\x00\x00\x00\x00\x00\xe0 \x00\x00\x04',
  174:b'\x00\x00\x00\xc0\xa0\xc0\xa0\x00\x00\x04',
  175:b'\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x04',
  176:b'\x00\x00\x00@\xa0@\x00\x00\x00\x04',
  177:b'\x00\x00\x00@\xe0@\x00\xe0\x00\x04',
  178:b'\x00\x00\x00\xc0 @\xe0\x00\x00\x04',
  179:b'\x00\x00\x00\xe0@ \xc0\x00\x00\x04',
  180:b'\x00\x00\x00@\x80\x00\x00\x00\x00\x03',
  181:b'\x00\x00\x00\x00\xa0\xa0\xa0\xe0\x80\x04',
  182:b'\x00\x00\x00`\xe0`  \x00\x04',
  183:b'\x00\x00\x00\x00\x00\x80\x00\x00\x00\x02',
  184:b'\x00\x00\x00\x00\x00\x00\x00@\x80\x03',
  185:b'\x00\x00\x00@\xc0@@\x00\x00\x03',
  186:b'\x00\x00\x00@\xa0\xa0@\x00\x00\x04',
  187:b'\x00\x00\x00\x00\xa0P\xa0\x00\x00\x05',
  188:b'\x00\x00\x00\x00\x00\x00H\x00\xc9\x00S\x00W\x00\x01\x00\x00\x00\t',
  189:b'\x00\x00\x00\x00\x00\x00H\x00\xcb\x00P\x80Q\x00\x03\x80\x00\x00\n',
  190:b'\x00\x00\x00\x00\x00\x00\xe4\x00D\x80)\x80\xcb\x80\x00\x80\x00\x00\n',
  191:b'\x00\x00\x00@\x00@\x80`\x00\x04',
  192:b'@ \x00`\x90\xf0\x90\x90\x00\x05',
  193:b' @\x00`\x90\xf0\x90\x90\x00\x05',
  194:b'`\x90\x00`\x90\xf0\x90\x90\x00\x05',
  195:b'\x00`\x00`\x90\xf0\x90\x90\x00\x05',
  196:b'\x00\x90\x00`\x90\xf0\x90\x90\x00\x05',
  197:b' P `\x90\xf0\x90\x90\x00\x05',
  198:b'\x00\x00\x00x\xa0\xf8\xa0\xb8\x00\x06',
  199:b'\x00\x00\x00`\x90\x80\x90` \x05',
  200:b'@ \x00\xf0\x80\xe0\x80\xf0\x00\x05',
  201:b' @\x00\xf0\x80\xe0\x80\xf0\x00\x05',
  202:b'`\x90\x00\xf0\x80\xe0\x80\xf0\x00\x05',
  203:b'\x00\x90\x00\xf0\x80\xe0\x80\xf0\x00\x05',
  204:b'\x80@\x00@@@@@\x00\x02',
  205:b'@\x80\x00\x80\x80\x80\x80\x80\x00\x02',
  206:b'@\xa0\x00@@@@@\x00\x03',
  207:b'\x00\xa0\x00@@@@@\x00\x03',
  208:b'\x00\x00\x00\xe0\x90\xd0\x90\xe0\x00\x05',
  209:b'\x00`\x00\x90\xd0\xb0\x90\x90\x00\x05',
  210:b'@ \x00`\x90\x90\x90`\x00\x05',
  211:b' @\x00`\x90\x90\x90`\x00\x05',
  212:b'`\x90\x00`\x90\x90\x90`\x00\x05',
  213:b'\x00`\x00`\x90\x90\x90`\x00\x05',
  214:b'\x00\x90\x00`\x90\x90\x90`\x00\x05',
  215:b'\x00\x00\x00\x00\xa0@\xa0\x00\x00\x04',
  216:b'\x00\x00\x00`\xb0\xd0\x90`\x00\x05',
  217:b'@ \x00\x90\x90\x90\x90`\x00\x05',
  218:b' @\x00\x90\x90\x90\x90`\x00\x05',
  219:b'`\x90\x00\x90\x90\x90\x90`\x00\x05',
  220:b'\x00\x90\x00\x90\x90\x90\x90`\x00\x05',
  221:b' @\x00\xa0\xa0@@@\x00\x04',
  222:b'\x00\x00\x00\x80\xe0\x90\xe0\x80\x00\x05',
  223:b'\x00\x00\x00`\x90\xa0\x90\xa0\x00\x05',
  224:b'\x00\x80@\x00`\xa0\xa0`\x00\x04',
  225:b'\x00 @\x00`\xa0\xa0`\x00\x04',
  226:b'\x00@\xa0\x00`\xa0\xa0`\x00\x04',
  227:b'\x00\x00`\x00`\xa0\xa0`\x00\x04',
  228:b'\x00\x00\xa0\x00`\xa0\xa0`\x00\x04',
  229:b'\x00@\xa0@`\xa0\xa0`\x00\x04',
  230:b'\x00\x00\x00\x00p\xb8\xa0x\x00\x06',
  231:b'\x00\x00\x00\x00`\x80\x80`@\x04',
  232:b'\x00\x80@\x00@\xe0\x80`\x00\x04',
  233:b'\x00 @\x00@\xe0\x80`\x00\x04',
  234:b'\x00@\xa0\x00@\xe0\x80`\x00\x04',
  235:b'\x00\x00\xa0\x00@\xe0\x80`\x00\x04',
  236:b'\x00\x80@\x00@@@@\x00\x02',
  237:b'\x00@\x80\x00\x80\x80\x80\x80\x00\x02',
  238:b'\x00@\xa0\x00@@@@\x00\x03',
  239:b'\x00\x00\xa0\x00@@@@\x00\x03',
  240:b'\x00\x00\x00@ `\xa0@\x00\x04',
  241:b'\x00\x00\xc0\x00\xc0\xa0\xa0\xa0\x00\x04',
  242:b'\x00\x80@\x00@\xa0\xa0@\x00\x04',
  243:b'\x00 @\x00@\xa0\xa0@\x00\x04',
  244:b'\x00@\xa0\x00@\xa0\xa0@\x00\x04',
  245:b'\x00\x00`\x00@\xa0\xa0@\x00\x04',
  246:b'\x00\x00\xa0\x00@\xa0\xa0@\x00\x04',
  247:b'\x00\x00\x00@\x00\xe0\x00@\x00\x04',
  248:b'\x00\x00\x00\x00@\xe0\xa0@\x00\x04',
  249:b'\x00\x80@\x00\xa0\xa0\xa0`\x00\x04',
  250:b'\x00 @\x00\xa0\xa0\xa0`\x00\x04',
  251:b'\x00@\xa0\x00\xa0\xa0\xa0`\x00\x04',
  252:b'\x00\x00\xa0\x00\xa0\xa0\xa0`\x00\x04',
  253:b'\x00 @\x00\xa0\xa0\xa0@\x80\x04',
  254:b'\x00\x00\x00\x80\xc0\xa0\xa0\xc0\x80\x04',
  255:b'\x00\x00\xa0\x00\xa0\xa0\xa0@\x80\x04',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 9, int(_g[c][-1])
