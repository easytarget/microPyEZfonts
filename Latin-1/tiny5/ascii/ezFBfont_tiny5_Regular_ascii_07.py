'''
    ezFBfont_tiny5_Regular_ascii_07 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original tiny5_Regular.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: tiny5_Regular
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/tiny5-Regular.bdf', '_', './ascii-char.set']
# Date: 2024-11-28 12:31:58
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Copyright 2024 The Tiny5 Project Authors (https://github.com/Gissio/font_tiny5)"
'''
version = '0.33'
name = '-tiny5-regular-r-regular--9-9-75-75-c-80-iso10646-1'
family = 'tiny5'
weight = 'regular'
size = None

def height():
    return 7

def baseline():
    return 6

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 33

def max_ch():
    return 126

_g = {
  33:b'\x00\x80\x80\x80\x00\x80\x00\x02',
  34:b'\x00\xa0\xa0\x00\x00\x00\x00\x04',
  35:b'\x00P\xf8P\xf8P\x00\x06',
  36:b'\x00@`\xc0 \xc0@\x04',
  37:b'\x00\x90 @\x90\x00\x00\x05',
  38:b'\x00@\xa0@\xa0P\x00\x05',
  39:b'\x00\x80\x80\x00\x00\x00\x00\x02',
  40:b'\x00@\x80\x80\x80@\x00\x03',
  41:b'\x00\x80@@@\x80\x00\x03',
  42:b'\x00@\xe0@\xa0\x00\x00\x04',
  43:b'\x00\x00@\xe0@\x00\x00\x04',
  44:b'\x00\x00\x00\x00\x00@\x80\x03',
  45:b'\x00\x00\x00\xe0\x00\x00\x00\x04',
  46:b'\x00\x00\x00\x00\x00\x80\x00\x02',
  47:b'\x00@@\x80\x80\x80\x00\x03',
  48:b'\x00@\xa0\xa0\xa0@\x00\x04',
  49:b'\x00@\xc0@@@\x00\x04',
  50:b'\x00\xc0 @\x80\xe0\x00\x04',
  51:b'\x00\xc0 @ \xc0\x00\x04',
  52:b'\x00 `\xa0\xe0 \x00\x04',
  53:b'\x00\xe0\x80\xc0 \xc0\x00\x04',
  54:b'\x00`\x80\xc0\xa0@\x00\x04',
  55:b'\x00\xe0 @@@\x00\x04',
  56:b'\x00@\xa0@\xa0@\x00\x04',
  57:b'\x00@\xa0` \xc0\x00\x04',
  58:b'\x00\x00\x80\x00\x00\x80\x00\x02',
  59:b'\x00\x00@\x00\x00@\x80\x03',
  60:b'\x00 @\x80@ \x00\x04',
  61:b'\x00\x00\xe0\x00\xe0\x00\x00\x04',
  62:b'\x00\x80@ @\x80\x00\x04',
  63:b'\x00\xc0 @\x00@\x00\x04',
  64:b'\x00`\x90\xb0\x80`\x00\x05',
  65:b'\x00`\x90\xf0\x90\x90\x00\x05',
  66:b'\x00\xe0\x90\xe0\x90\xe0\x00\x05',
  67:b'\x00`\x90\x80\x90`\x00\x05',
  68:b'\x00\xe0\x90\x90\x90\xe0\x00\x05',
  69:b'\x00\xf0\x80\xe0\x80\xf0\x00\x05',
  70:b'\x00\xf0\x80\xe0\x80\x80\x00\x05',
  71:b'\x00p\x80\xb0\x90p\x00\x05',
  72:b'\x00\x90\x90\xf0\x90\x90\x00\x05',
  73:b'\x00\x80\x80\x80\x80\x80\x00\x02',
  74:b'\x00   \xa0@\x00\x04',
  75:b'\x00\x90\xa0\xc0\xa0\x90\x00\x05',
  76:b'\x00\x80\x80\x80\x80\xe0\x00\x04',
  77:b'\x00\x88\xd8\xa8\x88\x88\x00\x06',
  78:b'\x00\x90\xd0\xb0\x90\x90\x00\x05',
  79:b'\x00`\x90\x90\x90`\x00\x05',
  80:b'\x00\xe0\x90\xe0\x80\x80\x00\x05',
  81:b'\x00`\x90\x90\xa0P\x00\x05',
  82:b'\x00\xe0\x90\xe0\x90\x90\x00\x05',
  83:b'\x00p\x80`\x10\xe0\x00\x05',
  84:b'\x00\xe0@@@@\x00\x04',
  85:b'\x00\x90\x90\x90\x90`\x00\x05',
  86:b'\x00\xa0\xa0\xa0@@\x00\x04',
  87:b'\x00\xa8\xa8\xa8PP\x00\x06',
  88:b'\x00\xa0\xa0@\xa0\xa0\x00\x04',
  89:b'\x00\xa0\xa0@@@\x00\x04',
  90:b'\x00\xe0 @\x80\xe0\x00\x04',
  91:b'\x00\xc0\x80\x80\x80\xc0\x00\x03',
  92:b'\x00\x80\x80@@@\x00\x03',
  93:b'\x00\xc0@@@\xc0\x00\x03',
  94:b'\x00@\xa0\x00\x00\x00\x00\x04',
  95:b'\x00\x00\x00\x00\x00\xe0\x00\x04',
  96:b'\x00\x80@\x00\x00\x00\x00\x03',
  97:b'\x00\x00`\xa0\xa0`\x00\x04',
  98:b'\x00\x80\xc0\xa0\xa0\xc0\x00\x04',
  99:b'\x00\x00`\x80\x80`\x00\x04',
  100:b'\x00 `\xa0\xa0`\x00\x04',
  101:b'\x00\x00@\xe0\x80`\x00\x04',
  102:b'\x00@\x80\xc0\x80\x80\x00\x03',
  103:b'\x00\x00`\xa0\xa0`\xc0\x04',
  104:b'\x00\x80\xc0\xa0\xa0\xa0\x00\x04',
  105:b'\x80\x00\x80\x80\x80\x80\x00\x02',
  106:b'\x80\x00\x80\x80\x80\x80\x80\x02',
  107:b'\x00\x80\xa0\xc0\xa0\xa0\x00\x04',
  108:b'\x00\x80\x80\x80\x80\x80\x00\x02',
  109:b'\x00\x00\xf0\xa8\xa8\xa8\x00\x06',
  110:b'\x00\x00\xc0\xa0\xa0\xa0\x00\x04',
  111:b'\x00\x00@\xa0\xa0@\x00\x04',
  112:b'\x00\x00\xc0\xa0\xa0\xc0\x80\x04',
  113:b'\x00\x00`\xa0\xa0` \x04',
  114:b'\x00\x00\xc0\x80\x80\x80\x00\x03',
  115:b'\x00\x00`\xc0 \xc0\x00\x04',
  116:b'\x00\x80\xc0\x80\x80@\x00\x03',
  117:b'\x00\x00\xa0\xa0\xa0`\x00\x04',
  118:b'\x00\x00\xa0\xa0@@\x00\x04',
  119:b'\x00\x00\xa8\xa8PP\x00\x06',
  120:b'\x00\x00\xa0@@\xa0\x00\x04',
  121:b'\x00\x00\xa0\xa0\xa0@\x80\x04',
  122:b'\x00\x00\xe0@\x80\xe0\x00\x04',
  123:b'\x00`@\x80@`\x00\x04',
  124:b'\x00\x80\x80\x80\x80\x80\x00\x02',
  125:b'\x00\xc0@ @\xc0\x00\x04',
  126:b'\x00\x00\x00\xc0\x00\x00\x00\x03',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 7, int(_g[c][-1])
