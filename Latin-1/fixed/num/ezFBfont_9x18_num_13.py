'''
    ezFBfont_9x18_num_13 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 9x18.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 9x18
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/9x18.bdf', '_', './num-char.set']
# Date: 2024-07-31 14:56:59
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Public domain font.  Share and enjoy."
'''
version = '0.33'
name = '-misc-fixed-medium-r-normal--18-120-100-100-c-90-iso10646-1'
family = 'fixed'
weight = 'medium'
size = 18

def height():
    return 13

def baseline():
    return 11

def max_width():
    return 9

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 176

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  37:b'\x00\x00!\x00R\x00R\x00$\x00\x08\x00\x08\x00\x12\x00%\x00%\x00B\x00\x00\x00\x00\x00',
  40:b'\x04\x00\x08\x00\x08\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x08\x00\x08\x00\x04\x00\x00\x00',
  41:b'\x10\x00\x08\x00\x08\x00\x04\x00\x04\x00\x04\x00\x04\x00\x04\x00\x04\x00\x08\x00\x08\x00\x10\x00\x00\x00',
  42:b'\x00\x00\x08\x00I\x00*\x00\x1c\x00*\x00I\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  43:b'\x00\x00\x00\x00\x00\x00\x08\x00\x08\x00\x08\x00\x7f\x00\x08\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x00',
  44:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x0c\x00\x04\x00\x08\x00',
  45:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  46:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x0c\x00\x00\x00\x00\x00',
  47:b'\x00\x00\x01\x00\x02\x00\x02\x00\x04\x00\x08\x00\x08\x00\x10\x00 \x00 \x00@\x00\x00\x00\x00\x00',
  48:b'\x00\x00\x1c\x00"\x00A\x00A\x00A\x00A\x00A\x00A\x00"\x00\x1c\x00\x00\x00\x00\x00',
  49:b'\x00\x00\x08\x00\x18\x00(\x00H\x00\x08\x00\x08\x00\x08\x00\x08\x00\x08\x00\x7f\x00\x00\x00\x00\x00',
  50:b'\x00\x00\x1c\x00"\x00A\x00\x01\x00\x02\x00\x04\x00\x08\x00\x10\x00 \x00\x7f\x00\x00\x00\x00\x00',
  51:b'\x00\x00\x7f\x00\x01\x00\x02\x00\x04\x00\x0c\x00\x02\x00\x01\x00\x01\x00B\x00<\x00\x00\x00\x00\x00',
  52:b'\x00\x00\x02\x00\x06\x00\n\x00\x12\x00"\x00B\x00\x7f\x00\x02\x00\x02\x00\x02\x00\x00\x00\x00\x00',
  53:b'\x00\x00\x7f\x00@\x00@\x00@\x00|\x00\x02\x00\x01\x00\x01\x00B\x00<\x00\x00\x00\x00\x00',
  54:b'\x00\x00\x1e\x00 \x00@\x00@\x00\\\x00b\x00A\x00A\x00"\x00\x1c\x00\x00\x00\x00\x00',
  55:b'\x00\x00\x7f\x00\x01\x00\x02\x00\x02\x00\x04\x00\x04\x00\x08\x00\x08\x00\x08\x00\x08\x00\x00\x00\x00\x00',
  56:b'\x00\x00\x1c\x00"\x00A\x00"\x00\x1c\x00"\x00A\x00A\x00"\x00\x1c\x00\x00\x00\x00\x00',
  57:b'\x00\x00\x1c\x00"\x00A\x00A\x00#\x00\x1d\x00\x01\x00\x01\x00\x02\x00<\x00\x00\x00\x00\x00',
  58:b'\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x0c\x00\x00\x00\x00\x00',
  176:b'\x00\x00\x0c\x00\x12\x00\x12\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 13, 9
