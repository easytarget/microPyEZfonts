'''
    ezFBfont_14_7x14B_ascii : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 7x14B.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: 7x14B
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/7x14B.bdf', '_', './ascii-char.set']
# Date: 2024-06-12 20:07:04

version = '0.33'
name = '-Misc-Fixed-Bold-R-Normal--14-130-75-75-C-70-ISO10646-1'
family = 'fixed'
weight = 'bold'
size = 14

def height():
    return 14

def baseline():
    return 12

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 126

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x00\x000000000\x0000\x00\x00'],
 34:[b'\x00llll\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00\x00xxx\xfcxx\xfcxxx\x00\x00'],
 36:[b'\x00\x000x\xb4\xb4p84\xb4\xb4x0\x00'],
 37:[b'\x00\x00l\xdc\xd8p\x10 8l\xec\xd8\x00\x00'],
 38:[b'\x00\x008lll8l\xdc\xd8\xd8l\x00\x00'],
 39:[b'\x000000\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x00\x0c\x1800`````00\x18\x0c'],
 41:[b'\x00`0\x18\x18\x0c\x0c\x0c\x0c\x0c\x18\x180`'],
 42:[b'\x00\x00\xb4\xb4x0x\xb4\xb4\x00\x00\x00\x00\x00'],
 43:[b'\x00\x00\x00\x00000\xfc000\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x008\x18\x180'],
 45:[b'\x00\x00\x00\x00\x00\x00\x00\xfc\x00\x00\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0000\x00\x00'],
 47:[b'\x00\x0c\x0c\x0c\x18\x18000``\xc0\xc0\xc0'],
 48:[b'\x00\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 49:[b'\x00\x000p\xf0000000\xfc\x00\x00'],
 50:[b'\x00\x00x\xcc\xcc\x0c\x18\x180`\xc0\xfc\x00\x00'],
 51:[b'\x00\x00x\xcc\xcc\x0c8\x0c\x0c\xcc\xccx\x00\x00'],
 52:[b'\x00\x00\x08\x18\x188x\xd8\xd8\xfc\x18\x18\x00\x00'],
 53:[b'\x00\x00\xfc\xc0\xc0\xf8\xcc\x0c\x0c\xcc\xccx\x00\x00'],
 54:[b'\x00\x008l\xcc\xc0\xf8\xcc\xcc\xcc\xccx\x00\x00'],
 55:[b'\x00\x00\xfc\xcc\xd8\x18000000\x00\x00'],
 56:[b'\x00\x00x\xcc\xcc\xccxx\xcc\xcc\xccx\x00\x00'],
 57:[b'\x00\x00x\xcc\xcc\xcc\xcc|\x0c\xcc\xd8p\x00\x00'],
 58:[b'\x00\x00\x00\x0000\x00\x00\x0000\x00\x00\x00'],
 59:[b'\x00\x00\x00\x00\x18\x18\x00\x00\x008\x18\x180\x00'],
 60:[b'\x00\x00\x00\x0c\x180`\xc0`0\x18\x0c\x00\x00'],
 61:[b'\x00\x00\x00\x00\x00\x00\xfc\x00\x00\xfc\x00\x00\x00\x00'],
 62:[b'\x00\x00\x00\xc0`0\x18\x0c\x180`\xc0\x00\x00'],
 63:[b'\x00\x00x\xcc\xcc\x18000\x0000\x00\x00'],
 64:[b'\x00\x008l\xdc\xf4\xf4\xf4\xf4\xdc`<\x00\x00'],
 65:[b'\x00\x00x\xfc\xcc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 66:[b'\x00\x00\xf8\xcc\xcc\xc8\xf8\xcc\xcc\xcc\xcc\xf8\x00\x00'],
 67:[b'\x00\x00x\xcc\xcc\xc0\xc0\xc0\xc0\xcc\xccx\x00\x00'],
 68:[b'\x00\x00\xf0\xd8\xcc\xcc\xcc\xcc\xcc\xcc\xd8\xf0\x00\x00'],
 69:[b'\x00\x00\xfc\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xc0\xfc\x00\x00'],
 70:[b'\x00\x00\xfc\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xc0\xc0\x00\x00'],
 71:[b'\x00\x00x\xcc\xcc\xc0\xc0\xdc\xcc\xcc\xccx\x00\x00'],
 72:[b'\x00\x00\xcc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\xcc\xcc\x00\x00'],
 73:[b'\x00\x00\xfc00000000\xfc\x00\x00'],
 74:[b'\x00\x00\x0c\x0c\x0c\x0c\x0c\x0c\x0c\xcc\xd8p\x00\x00'],
 75:[b'\x00\x00\xcc\xd8\xf0\xe0\xe0\xf0\xf0\xd8\xcc\xcc\x00\x00'],
 76:[b'\x00\x00\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xfc\x00\x00'],
 77:[b'\x00\x00\x84\xcc\xcc\xfc\xfc\xcc\xcc\xcc\xcc\xcc\x00\x00'],
 78:[b'\x00\x00\xcc\xcc\xec\xec\xec\xdc\xdc\xdc\xcc\xcc\x00\x00'],
 79:[b'\x00\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 80:[b'\x00\x00\xf8\xcc\xcc\xcc\xcc\xf8\xc0\xc0\xc0\xc0\x00\x00'],
 81:[b'\x00\x00x\xcc\xcc\xcc\xcc\xcc\xec\xdc\xccx\x0c\x04'],
 82:[b'\x00\x00\xf8\xcc\xcc\xcc\xf8\xd8\xcc\xcc\xcc\xcc\x00\x00'],
 83:[b'\x00\x00x\xcc\xcc`00\x18\xcc\xccx\x00\x00'],
 84:[b'\x00\x00\xfc000000000\x00\x00'],
 85:[b'\x00\x00\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 86:[b'\x00\x00\xcc\xcc\xcc\xcc\xcc\xcc\xccxx0\x00\x00'],
 87:[b'\x00\x00\xcc\xcc\xcc\xcc\xcc\xfc\xfc\xfc\xfcH\x00\x00'],
 88:[b'\x00\x00\xcc\xccxx00xx\xcc\xcc\x00\x00'],
 89:[b'\x00\x00\xcc\xcc\xccxx00000\x00\x00'],
 90:[b'\x00\x00\xfc\x0c\x18\x1800``\xc0\xfc\x00\x00'],
 91:[b'\x00|```````````|'],
 92:[b'\x00\xc0\xc0\xc0``000\x18\x18\x0c\x0c\x0c'],
 93:[b'\x00|\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c|'],
 94:[b'0x\xcc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\xfc'],
 96:[b'\x00`0\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 97:[b'\x00\x00\x00\x00\x00x\xcc\x1cl\xcc\xcc|\x00\x00'],
 98:[b'\x00\x00\xc0\xc0\xc0\xf8\xcc\xcc\xcc\xcc\xcc\xf8\x00\x00'],
 99:[b'\x00\x00\x00\x00\x00x\xcc\xc0\xc0\xc0\xccx\x00\x00'],
 100:[b'\x00\x00\x0c\x0c\x0c|\xcc\xcc\xcc\xcc\xcc|\x00\x00'],
 101:[b'\x00\x00\x00\x00\x00x\xcc\xcc\xfc\xc0\xccx\x00\x00'],
 102:[b'\x00\x00\x18<00\xfc00000\x00\x00'],
 103:[b'\x00\x00\x00\x00\x00t\xdc\xd8\xd8p@\xf8\xccx'],
 104:[b'\x00\x00\xc0\xc0\xc0\xf8\xcc\xcc\xcc\xcc\xcc\xcc\x00\x00'],
 105:[b'\x00\x0000\x000000000\x00\x00'],
 106:[b'\x00\x00\x0c\x0c\x00\x0c\x0c\x0c\x0c\x0c\x0c\x0cl8'],
 107:[b'\x00\x00\xc0\xc0\xc0\xc8\xd8\xf0\xf0\xd8\xcc\xc4\x00\x00'],
 108:[b'\x00\x000000000000\x00\x00'],
 109:[b'\x00\x00\x00\x00\x00\xd8\xfc\xfc\xfc\xfc\xfc\xcc\x00\x00'],
 110:[b'\x00\x00\x00\x00\x00\xf8\xcc\xcc\xcc\xcc\xcc\xcc\x00\x00'],
 111:[b'\x00\x00\x00\x00\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 112:[b'\x00\x00\x00\x00\x00\xf8\xcc\xcc\xcc\xcc\xcc\xf8\xc0\xc0'],
 113:[b'\x00\x00\x00\x00\x00|\xcc\xcc\xcc\xcc\xcc|\x0c\x0c'],
 114:[b'\x00\x00\x00\x00\x00\xf8\xcc\xcc\xc0\xc0\xc0\xc0\x00\x00'],
 115:[b'\x00\x00\x00\x00\x00x\xcc`0\x18\xccx\x00\x00'],
 116:[b'\x00\x00000\xfc00000\x1c\x00\x00'],
 117:[b'\x00\x00\x00\x00\x00\xcc\xcc\xcc\xcc\xcc\xcc|\x00\x00'],
 118:[b'\x00\x00\x00\x00\x00\xcc\xcc\xccxx00\x00\x00'],
 119:[b'\x00\x00\x00\x00\x00\xcc\xcc\xfc\xfc\xfc\xfcH\x00\x00'],
 120:[b'\x00\x00\x00\x00\x00\xcc\xccx0x\xcc\xcc\x00\x00'],
 121:[b'\x00\x00\x00\x00\x00\xcc\xccll88\x18\xd8p'],
 122:[b'\x00\x00\x00\x00\x00\xfc\x0c\x180`\xc0\xfc\x00\x00'],
 123:[b'\x00\x1c00000`00000\x1c'],
 124:[b'\x000000000000000'],
 125:[b'\x00p\x18\x18\x18\x18\x18\x0c\x18\x18\x18\x18\x18p'],
 126:[b'\x00D\xf4\xbc\x88\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 14, 7

