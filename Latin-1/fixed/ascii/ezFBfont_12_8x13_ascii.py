'''
    ezFBfont_12_8x13_ascii : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 8x13.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 8x13
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/8x13.bdf', '_', './ascii-char.set']
# Date: 2024-06-18 20:26:58
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Public domain font.  Share and enjoy."
'''
version = '0.33'
name = '-misc-fixed-medium-r-normal--13-120-75-75-c-80-iso10646-1'
family = 'fixed'
weight = 'medium'
size = 13

def height():
    return 12

def baseline():
    return 10

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 126

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  33:b'\x00\x10\x10\x10\x10\x10\x10\x10\x00\x10\x00\x00',
  34:b'\x00$$$\x00\x00\x00\x00\x00\x00\x00\x00',
  35:b'\x00\x00$$~$~$$\x00\x00\x00',
  36:b'\x00\x10<PP8\x14\x14x\x10\x00\x00',
  37:b'\x00"R$\x08\x08\x10$*D\x00\x00',
  38:b'\x00\x00\x000HH0JD:\x00\x00',
  39:b'\x00\x10\x10\x10\x00\x00\x00\x00\x00\x00\x00\x00',
  40:b'\x00\x04\x08\x08\x10\x10\x10\x08\x08\x04\x00\x00',
  41:b'\x00 \x10\x10\x08\x08\x08\x10\x10 \x00\x00',
  42:b'\x00$\x18~\x18$\x00\x00\x00\x00\x00\x00',
  43:b'\x00\x00\x00\x10\x10|\x10\x10\x00\x00\x00\x00',
  44:b'\x00\x00\x00\x00\x00\x00\x00\x0080@\x00',
  45:b'\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00',
  46:b'\x00\x00\x00\x00\x00\x00\x00\x00\x108\x10\x00',
  47:b'\x00\x02\x02\x04\x08\x10 @\x80\x80\x00\x00',
  48:b'\x00\x18$BBBBB$\x18\x00\x00',
  49:b'\x00\x100P\x10\x10\x10\x10\x10|\x00\x00',
  50:b'\x00<BB\x02\x04\x18 @~\x00\x00',
  51:b'\x00~\x02\x04\x08\x1c\x02\x02B<\x00\x00',
  52:b'\x00\x04\x0c\x14$DD~\x04\x04\x00\x00',
  53:b'\x00~@@\\b\x02\x02B<\x00\x00',
  54:b'\x00\x1c @@\\bBB<\x00\x00',
  55:b'\x00~\x02\x04\x08\x08\x10\x10  \x00\x00',
  56:b'\x00<BBB<BBB<\x00\x00',
  57:b'\x00<BBF:\x02\x02\x048\x00\x00',
  58:b'\x00\x00\x00\x108\x10\x00\x00\x108\x10\x00',
  59:b'\x00\x00\x00\x108\x10\x00\x0080@\x00',
  60:b'\x00\x02\x04\x08\x10 \x10\x08\x04\x02\x00\x00',
  61:b'\x00\x00\x00\x00~\x00\x00~\x00\x00\x00\x00',
  62:b'\x00@ \x10\x08\x04\x08\x10 @\x00\x00',
  63:b'\x00<BB\x02\x04\x08\x08\x00\x08\x00\x00',
  64:b'\x00<BBNRVJ@<\x00\x00',
  65:b'\x00\x18$BBB~BBB\x00\x00',
  66:b'\x00xDBDxDBDx\x00\x00',
  67:b'\x00<B@@@@@B<\x00\x00',
  68:b'\x00xDBBBBBDx\x00\x00',
  69:b'\x00~@@@x@@@~\x00\x00',
  70:b'\x00~@@@x@@@@\x00\x00',
  71:b'\x00<B@@@NBF:\x00\x00',
  72:b'\x00BBBB~BBBB\x00\x00',
  73:b'\x00|\x10\x10\x10\x10\x10\x10\x10|\x00\x00',
  74:b'\x00\x1f\x04\x04\x04\x04\x04\x04D8\x00\x00',
  75:b'\x00BDHP`PHDB\x00\x00',
  76:b'\x00@@@@@@@@~\x00\x00',
  77:b'\x00\x82\x82\xc6\xaa\x92\x92\x82\x82\x82\x00\x00',
  78:b'\x00BBbRJFBBB\x00\x00',
  79:b'\x00<BBBBBBB<\x00\x00',
  80:b'\x00|BBB|@@@@\x00\x00',
  81:b'\x00<BBBBBRJ<\x02\x00',
  82:b'\x00|BBB|PHDB\x00\x00',
  83:b'\x00<B@@<\x02\x02B<\x00\x00',
  84:b'\x00\xfe\x10\x10\x10\x10\x10\x10\x10\x10\x00\x00',
  85:b'\x00BBBBBBBB<\x00\x00',
  86:b'\x00\x82\x82DDD(((\x10\x00\x00',
  87:b'\x00\x82\x82\x82\x82\x92\x92\x92\xaaD\x00\x00',
  88:b'\x00\x82\x82D(\x10(D\x82\x82\x00\x00',
  89:b'\x00\x82\x82D(\x10\x10\x10\x10\x10\x00\x00',
  90:b'\x00~\x02\x04\x08\x10 @@~\x00\x00',
  91:b'\x00<       <\x00\x00',
  92:b'\x00\x80\x80@ \x10\x08\x04\x02\x02\x00\x00',
  93:b'\x00x\x08\x08\x08\x08\x08\x08\x08x\x00\x00',
  94:b'\x00\x10(D\x00\x00\x00\x00\x00\x00\x00\x00',
  95:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x00',
  96:b'\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  97:b'\x00\x00\x00\x00<\x02>BF:\x00\x00',
  98:b'\x00@@@\\bBBb\\\x00\x00',
  99:b'\x00\x00\x00\x00<B@@B<\x00\x00',
  100:b'\x00\x02\x02\x02:FBBF:\x00\x00',
  101:b'\x00\x00\x00\x00<B~@B<\x00\x00',
  102:b'\x00\x1c"  |    \x00\x00',
  103:b'\x00\x00\x00\x00:DD8@<B<',
  104:b'\x00@@@\\bBBBB\x00\x00',
  105:b'\x00\x00\x10\x000\x10\x10\x10\x10|\x00\x00',
  106:b'\x00\x00\x04\x00\x0c\x04\x04\x04\x04DD8',
  107:b'\x00@@@DHpHDB\x00\x00',
  108:b'\x000\x10\x10\x10\x10\x10\x10\x10|\x00\x00',
  109:b'\x00\x00\x00\x00\xec\x92\x92\x92\x92\x82\x00\x00',
  110:b'\x00\x00\x00\x00\\bBBBB\x00\x00',
  111:b'\x00\x00\x00\x00<BBBB<\x00\x00',
  112:b'\x00\x00\x00\x00\\bBb\\@@@',
  113:b'\x00\x00\x00\x00:FBF:\x02\x02\x02',
  114:b'\x00\x00\x00\x00\\"    \x00\x00',
  115:b'\x00\x00\x00\x00<B0\x0cB<\x00\x00',
  116:b'\x00\x00  |   "\x1c\x00\x00',
  117:b'\x00\x00\x00\x00DDDDD:\x00\x00',
  118:b'\x00\x00\x00\x00DDD((\x10\x00\x00',
  119:b'\x00\x00\x00\x00\x82\x82\x92\x92\xaaD\x00\x00',
  120:b'\x00\x00\x00\x00B$\x18\x18$B\x00\x00',
  121:b'\x00\x00\x00\x00BBBF:\x02B<',
  122:b'\x00\x00\x00\x00~\x04\x08\x10 ~\x00\x00',
  123:b'\x00\x0e\x10\x10\x080\x08\x10\x10\x0e\x00\x00',
  124:b'\x00\x10\x10\x10\x10\x10\x10\x10\x10\x10\x00\x00',
  125:b'\x00p\x08\x08\x10\x0c\x10\x08\x08p\x00\x00',
  126:b'\x00$TH\x00\x00\x00\x00\x00\x00\x00\x00',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 12, 8
