'''
    ezFBfont_12_6x13_supp : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 6x13.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: 6x13
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/6x13.bdf', './supp-char.set', 'True']
# Date: 2024-06-11 17:32:45

version = '0.33'
name = '-Misc-Fixed-Medium-R-SemiCondensed--13-120-75-75-C-60-ISO10646-1'
family = 'fixed'
weight = 'medium'
size = 13

def height():
    return 12

def baseline():
    return 10

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
 160:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 161:[b'\x00 \x00       \x00\x00'],
 162:[b'\x00 p\xa8\xa0\xa0\xa8p \x00\x00\x00'],
 163:[b'\x000H@@\xe0@@H\xb0\x00\x00'],
 164:[b'\x00\x00\x00\x88pPPp\x88\x00\x00\x00'],
 165:[b'\x00\x88\x88PP\xf8 \xf8  \x00\x00'],
 166:[b'\x00    \x00    \x00\x00'],
 167:[b'0H@0HH0\x08H0\x00\x00'],
 168:[b'PP\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 169:[b'p\x88\xa8\xd8\xc8\xd8\xa8\x88p\x00\x00\x00'],
 170:[b'\x00p\x08x\x88x\x00\xf8\x00\x00\x00\x00'],
 171:[b'\x00\x00\x00(P\xa0\xa0P(\x00\x00\x00'],
 172:[b'\x00\x00\x00\x00\x00\xf8\x08\x08\x00\x00\x00\x00'],
 173:[b'\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00'],
 174:[b'p\x88\xe8\xd8\xd8\xe8\xd8\x88p\x00\x00\x00'],
 175:[b'\x00\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 176:[b'\x000HH0\x00\x00\x00\x00\x00\x00\x00'],
 177:[b'\x00\x00  \xf8  \x00\xf8\x00\x00\x00'],
 178:[b'@\xa0 @\xe0\x00\x00\x00\x00\x00\x00\x00'],
 179:[b'@\xa0@ \xc0\x00\x00\x00\x00\x00\x00\x00'],
 180:[b'\x10 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 181:[b'\x00\x00\x00\x00\x88\x88\x88\x88\x98\xe8\x80\x80'],
 182:[b'\x00x\xe8\xe8\xe8\xe8h(((\x00\x00'],
 183:[b'\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00'],
 184:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10 '],
 185:[b'@\xc0@@\xe0\x00\x00\x00\x00\x00\x00\x00'],
 186:[b'\x00p\x88\x88\x88p\x00\xf8\x00\x00\x00\x00'],
 187:[b'\x00\x00\x00\xa0P((P\xa0\x00\x00\x00'],
 188:[b'@\xc0@@\xe0\x08\x18(8\x08\x00\x00'],
 189:[b'@\xc0@@\xe0\x10(\x08\x108\x00\x00'],
 190:[b'@\xa0@ \xa0H\x18(8\x08\x00\x00'],
 191:[b'\x00 \x00  @\x80\x88\x88p\x00\x00'],
 192:[b'@ \x00 P\x88\x88\xf8\x88\x88\x00\x00'],
 193:[b'\x10 \x00 P\x88\x88\xf8\x88\x88\x00\x00'],
 194:[b'0H\x00 P\x88\x88\xf8\x88\x88\x00\x00'],
 195:[b'(P\x00 P\x88\x88\xf8\x88\x88\x00\x00'],
 196:[b'PP\x00 P\x88\x88\xf8\x88\x88\x00\x00'],
 197:[b' P  P\x88\x88\xf8\x88\x88\x00\x00'],
 198:[b'\x00X\xa0\xa0\xa0\xb0\xe0\xa0\xa0\xb8\x00\x00'],
 199:[b'\x00p\x88\x80\x80\x80\x80\x80\x88p @'],
 200:[b'@ \x00\xf8\x80\x80\xf0\x80\x80\xf8\x00\x00'],
 201:[b'\x10 \x00\xf8\x80\x80\xf0\x80\x80\xf8\x00\x00'],
 202:[b'0H\x00\xf8\x80\x80\xf0\x80\x80\xf8\x00\x00'],
 203:[b'PP\x00\xf8\x80\x80\xf0\x80\x80\xf8\x00\x00'],
 204:[b'@ \x00p     p\x00\x00'],
 205:[b'\x10 \x00p     p\x00\x00'],
 206:[b'0H\x00p     p\x00\x00'],
 207:[b'PP\x00p     p\x00\x00'],
 208:[b'\x00\xf0HHH\xe8HHH\xf0\x00\x00'],
 209:[b'(P\x00\x88\x88\xc8\xa8\x98\x88\x88\x00\x00'],
 210:[b'@ \x00p\x88\x88\x88\x88\x88p\x00\x00'],
 211:[b'\x10 \x00p\x88\x88\x88\x88\x88p\x00\x00'],
 212:[b'0H\x00p\x88\x88\x88\x88\x88p\x00\x00'],
 213:[b'(P\x00p\x88\x88\x88\x88\x88p\x00\x00'],
 214:[b'PP\x00p\x88\x88\x88\x88\x88p\x00\x00'],
 215:[b'\x00\x00\x00\x00\x88P P\x88\x00\x00\x00'],
 216:[b'\x08p\x98\x98\xa8\xa8\xa8\xc8\xc8p\x80\x00'],
 217:[b'@ \x00\x88\x88\x88\x88\x88\x88p\x00\x00'],
 218:[b'\x10 \x00\x88\x88\x88\x88\x88\x88p\x00\x00'],
 219:[b'0H\x00\x88\x88\x88\x88\x88\x88p\x00\x00'],
 220:[b'PP\x00\x88\x88\x88\x88\x88\x88p\x00\x00'],
 221:[b'\x10 \x00\x88\x88P    \x00\x00'],
 222:[b'\x00\x80\xf0\x88\x88\x88\xf0\x80\x80\x80\x00\x00'],
 223:[b'\x00`\x90\x90\xa0\xa0\x90\x88\x88\xb0\x00\x00'],
 224:[b'\x00@ \x00p\x08x\x88\x98h\x00\x00'],
 225:[b'\x00\x10 \x00p\x08x\x88\x98h\x00\x00'],
 226:[b'\x000H\x00p\x08x\x88\x98h\x00\x00'],
 227:[b'\x00(P\x00p\x08x\x88\x98h\x00\x00'],
 228:[b'\x00PP\x00p\x08x\x88\x98h\x00\x00'],
 229:[b'0H0\x00p\x08x\x88\x98h\x00\x00'],
 230:[b'\x00\x00\x00\x00p(p\xa0\xa8P\x00\x00'],
 231:[b'\x00\x00\x00\x00p\x88\x80\x80\x88p @'],
 232:[b'\x00@ \x00p\x88\xf8\x80\x88p\x00\x00'],
 233:[b'\x00\x10 \x00p\x88\xf8\x80\x88p\x00\x00'],
 234:[b'\x000H\x00p\x88\xf8\x80\x88p\x00\x00'],
 235:[b'\x00PP\x00p\x88\xf8\x80\x88p\x00\x00'],
 236:[b'\x00@ \x00`    p\x00\x00'],
 237:[b'\x00\x10 \x00`    p\x00\x00'],
 238:[b'\x000H\x00`    p\x00\x00'],
 239:[b'\x00PP\x00`    p\x00\x00'],
 240:[b'P `\x10p\x88\x88\x88\x88p\x00\x00'],
 241:[b'\x00(P\x00\xb0\xc8\x88\x88\x88\x88\x00\x00'],
 242:[b'\x00@ \x00p\x88\x88\x88\x88p\x00\x00'],
 243:[b'\x00\x10 \x00p\x88\x88\x88\x88p\x00\x00'],
 244:[b'\x000H\x00p\x88\x88\x88\x88p\x00\x00'],
 245:[b'\x00(P\x00p\x88\x88\x88\x88p\x00\x00'],
 246:[b'\x00PP\x00p\x88\x88\x88\x88p\x00\x00'],
 247:[b'\x00\x00  \x00\xf8\x00  \x00\x00\x00'],
 248:[b'\x00\x00\x00\x08p\x98\xa8\xa8\xc8p\x80\x00'],
 249:[b'\x00@ \x00\x88\x88\x88\x88\x98h\x00\x00'],
 250:[b'\x00\x10 \x00\x88\x88\x88\x88\x98h\x00\x00'],
 251:[b'\x000H\x00\x88\x88\x88\x88\x98h\x00\x00'],
 252:[b'\x00PP\x00\x88\x88\x88\x88\x98h\x00\x00'],
 253:[b'\x00\x10 \x00\x88\x88\x88\x98h\x08\x88p'],
 254:[b'\x00\x00\x80\x80\xb0\xc8\x88\x88\xc8\xb0\x80\x80'],
 255:[b'\x00PP\x00\x88\x88\x88\x98h\x08\x88p'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 12, 6

