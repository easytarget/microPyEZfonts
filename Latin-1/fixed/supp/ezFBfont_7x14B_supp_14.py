'''
    ezFBfont_7x14B_supp_14 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 7x14B.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 7x14B
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/7x14B.bdf', '_', './supp-char.set']
# Date: 2024-07-31 14:56:52
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Public domain font.  Share and enjoy."
'''
version = '0.33'
name = '-misc-fixed-bold-r-normal--14-130-75-75-c-70-iso10646-1'
family = 'fixed'
weight = 'bold'
size = 14

def height():
    return 14

def baseline():
    return 12

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
  160:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  161:b'\x00\x0000\x000000000\x00\x00',
  162:b'\x00\x00\x00\x000|\xb4\xb0\xb0\xb0\xb4|0\x00',
  163:b'\x00\x00\x008l``\xf0``\xf8l\x00\x00',
  164:b'\x00\x00\x00\x00\xccxhXx\xcc\x00\x00\x00\x00',
  165:b'\x00\x00\x84\xccx\xfc00\xfc000\x00\x00',
  166:b'\x00\x000000\x00\x000000\x00\x00',
  167:b'\x00x\xcc`0x\xccx0\x18\xccx\x00\x00',
  168:b'\x00ll\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  169:b'\x00x\xcc\xfc\xec\xec\xec\xec\xec\xfc\xccx\x00\x00',
  170:b'\x008l<ll<\x00|\x00\x00\x00\x00\x00',
  171:b'\x00\x00\x00\x00\x00\x1c<x\xf0x<\x1c\x00\x00',
  172:b'\x00\x00\x00\x00\x00\x00\x00\xfc\xfc\x0c\x0c\x0c\x00\x00',
  173:b'\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00',
  174:b'\x00x\xcc\xfc\xec\xec\xfc\xec\xec\xec\xccx\x00\x00',
  175:b'\x00|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  176:b'\x008ll8\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  177:b'\x00\x00\x00\x00\x00\x0000\xfc00\xfc\x00\x00',
  178:b'\x008l\x0c\x180`|\x00\x00\x00\x00\x00\x00',
  179:b'\x008l\x0c8\x0cl8\x00\x00\x00\x00\x00\x00',
  180:b'\x00\x180`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  181:b'\x00\x00\x00\x00\x00\x00\xcc\xcc\xcc\xcc\xdc\xfc\xc0\xc0',
  182:b'\x00\x00|\xec\xec\xec\xecl,,,,,<',
  183:b'\x00\x00\x00\x00\x0000\x00\x00\x00\x00\x00\x00\x00',
  184:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x180',
  185:b'\x00\x000p0000\x00\x00\x00\x00\x00\x00',
  186:b'\x00\x008ll8\x00|\x00\x00\x00\x00\x00\x00',
  187:b'\x00\x00\x00\x00\x00\xe0p8\x1c8p\xe0\x00\x00',
  188:b'\x00\x00d\xechxx4l\\\xdc\x8c\x00\x00',
  189:b'\x00\x00d\xechxx8tL\xd8\x9c\x00\x00',
  190:b'\x00\x00\xc4l\xe8x\xf0<l\xdc\x9c\x0c\x00\x00',
  191:b'\x00\x00\x00``\x00`````\xcc\xccx',
  192:b'`0\x00x\xfc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00',
  193:b'\x180\x00x\xfc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00',
  194:b'0x\x00x\xfc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00',
  195:b'h\xb0\x00x\xfc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00',
  196:b'\xcc\xcc\x00x\xfc\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00',
  197:b'0H0\x00x\xfc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00',
  198:b'\x00\x00~\xd8\xd8\xd8\xdc\xf8\xd8\xd8\xd8\xde\x00\x00',
  199:b'\x00\x00x\xcc\xcc\xc0\xc0\xc0\xc0\xcc\xccx0`',
  200:b'`0\x00\xfc\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xfc\x00\x00',
  201:b'\x180\x00\xfc\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xfc\x00\x00',
  202:b'0x\x00\xfc\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xfc\x00\x00',
  203:b'\xcc\xcc\x00\xfc\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xfc\x00\x00',
  204:b'`0\x00\xfc0000000\xfc\x00\x00',
  205:b'\x180\x00\xfc0000000\xfc\x00\x00',
  206:b'0x\x00\xfc0000000\xfc\x00\x00',
  207:b'\xcc\xcc\x00\xfc0000000\xfc\x00\x00',
  208:b'\x00\x00xlff\xfeffflx\x00\x00',
  209:b'h\xb0\x00\xcc\xec\xec\xec\xdc\xdc\xdc\xcc\xcc\x00\x00',
  210:b'`0\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  211:b'\x180\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  212:b'0x\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  213:b'h\xb0\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  214:b'\xcc\xcc\x00x\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  215:b'\x00\x00\x00\x00\x00\xc6l88l\xc6\x82\x00\x00',
  216:b'\x04\x04x\xdc\xdc\xdc\xdc\xec\xec\xec\xecx\x80\x80',
  217:b'`0\x00\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  218:b'\x180\x00\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  219:b'0x\x00\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  220:b'\xcc\xcc\x00\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00',
  221:b'\x180\x00\xcc\xcc\xccxxx000\x00\x00',
  222:b'\x00\x00\xc0\xc0\xf8\xcc\xcc\xcc\xcc\xf8\xc0\xc0\x00\x00',
  223:b'\x00\x008lllxllll\xf8\x00\x00',
  224:b'\x00\x00`0\x00x\xcc<l\xcc\xcc|\x00\x00',
  225:b'\x00\x00\x180\x00x\xcc<l\xcc\xcc|\x00\x00',
  226:b'\x00\x000x\x00x\xcc<l\xcc\xcc|\x00\x00',
  227:b'\x00\x00h\xb0\x00x\xcc<l\xcc\xcc|\x00\x00',
  228:b'\x00\x00\xcc\xcc\x00x\xcc<l\xcc\xcc|\x00\x00',
  229:b'\x000H0\x00x\xcc<l\xcc\xcc|\x00\x00',
  230:b'\x00\x00\x00\x00\x00|\xda:^\xd8\xde|\x00\x00',
  231:b'\x00\x00\x00\x00\x00x\xcc\xc0\xc0\xc0\xccx0`',
  232:b'\x00\x00`0\x00x\xcc\xcc\xfc\xc0\xccx\x00\x00',
  233:b'\x00\x00\x180\x00x\xcc\xcc\xfc\xc0\xccx\x00\x00',
  234:b'\x00\x000x\x00x\xcc\xcc\xfc\xc0\xccx\x00\x00',
  235:b'\x00\x00\xcc\xcc\x00x\xcc\xcc\xfc\xc0\xccx\x00\x00',
  236:b'\x00\x000\x18\x00\x18\x18\x18\x18\x18\x18\x18\x00\x00',
  237:b'\x00\x00\x180\x000000000\x00\x00',
  238:b'\x00\x000x\x000000000\x00\x00',
  239:b'\x00\x00\xcc\xcc\x000000000\x00\x00',
  240:b'\x00\xd8p\xf0\x98\x0c|\xcc\xcc\xcc\xccx\x00\x00',
  241:b'\x00\x00h\xb0\x00\xf8\xcc\xcc\xcc\xcc\xcc\xcc\x00\x00',
  242:b'\x00\x00`0\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00',
  243:b'\x00\x00\x180\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00',
  244:b'\x00\x000x\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00',
  245:b'\x00\x00h\xb0\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00',
  246:b'\x00\x00\xcc\xcc\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00',
  247:b'\x00\x00\x00\x0000\x00\xfc\xfc\x0000\x00\x00',
  248:b'\x00\x00\x00\x04\x08x\xdc\xdc\xec\xec\xccx\x80\x80',
  249:b'\x00\x00`0\x00\xcc\xcc\xcc\xcc\xcc\xcc|\x00\x00',
  250:b'\x00\x00\x180\x00\xcc\xcc\xcc\xcc\xcc\xcc|\x00\x00',
  251:b'\x00\x000x\x00\xcc\xcc\xcc\xcc\xcc\xcc|\x00\x00',
  252:b'\x00\x00\xcc\xcc\x00\xcc\xcc\xcc\xcc\xcc\xcc|\x00\x00',
  253:b'\x00\x00\x180\x00\xcc\xcc\xccx880\xf0`',
  254:b'\x00\x00\xc0\xc0\xc0\xf8\xcc\xcc\xcc\xcc\xcc\xf8\xc0\xc0',
  255:b'\x00\x00\xcc\xcc\x00\xcc\xcc\xccx880\xf0`',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 14, 7
