'''
    ezFBfont_7x13_supp_12 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 7x13.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 7x13
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/7x13.bdf', '_', './supp-char.set']
# Date: 2024-07-31 14:56:48
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Public domain font.  Share and enjoy."
'''
version = '0.33'
name = '-misc-fixed-medium-r-normal--13-120-75-75-c-70-iso10646-1'
family = 'fixed'
weight = 'medium'
size = 13

def height():
    return 12

def baseline():
    return 10

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
  160:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  161:b'\x00\x10\x00\x10\x10\x10\x10\x10\x10\x10\x00\x00',
  162:b'\x00\x108TPPT8\x10\x00\x00\x00',
  163:b'\x008D@@\xe0@@D\xb8\x00\x00',
  164:b'\x00\x00\x00\x84xHHx\x84\x00\x00\x00',
  165:b'\x00\x88\x88PP\xf8 \xf8  \x00\x00',
  166:b'\x00\x10\x10\x10\x10\x00\x10\x10\x10\x10\x00\x00',
  167:b'0H@0HH0\x08H0\x00\x00',
  168:b'\x00HH\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  169:b'\x00x\x84\xb4\xa4\xa4\xa4\xb4\x84x\x00\x00',
  170:b'\x008\x04<D<\x00|\x00\x00\x00\x00',
  171:b'\x00\x00\x14(P\xa0P(\x14\x00\x00\x00',
  172:b'\x00\x00\x00\x00\x00|\x04\x04\x00\x00\x00\x00',
  173:b'\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00',
  174:b'\x00x\x84\xb4\xac\xac\xb4\xac\x84x\x00\x00',
  175:b'\x00|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  176:b'\x000HH0\x00\x00\x00\x00\x00\x00\x00',
  177:b'\x00\x00\x10\x10|\x10\x10\x00|\x00\x00\x00',
  178:b' P\x10 @p\x00\x00\x00\x00\x00\x00',
  179:b'p\x10 \x10P \x00\x00\x00\x00\x00\x00',
  180:b'\x10 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  181:b'\x00\x00\x00\x00\x84\x84\x84\x84\xcc\xb4\x80\x00',
  182:b'\x00|\xe8\xe8\xe8h((((\x00\x00',
  183:b'\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00',
  184:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10 ',
  185:b' `   p\x00\x00\x00\x00\x00\x00',
  186:b'\x000HH0\x00x\x00\x00\x00\x00\x00',
  187:b'\x00\x00\xa0P(\x14(P\xa0\x00\x00\x00',
  188:b'@\xc0@@D\xec\x14\x14\x1c\x04\x00\x00',
  189:b'@\xc0@@H\xf4\x04\x08\x10\x1c\x00\x00',
  190:b'\xe0 @ \xa4L\x14\x14\x1c\x04\x00\x00',
  191:b'\x00 \x00  @\x80\x84\x84x\x00\x00',
  192:b' \x10\x000H\x84\x84\xfc\x84\x84\x00\x00',
  193:b'\x10 \x000H\x84\x84\xfc\x84\x84\x00\x00',
  194:b'0H\x000H\x84\x84\xfc\x84\x84\x00\x00',
  195:b'd\x98\x000H\x84\x84\xfc\x84\x84\x00\x00',
  196:b'HH\x000H\x84\x84\xfc\x84\x84\x00\x00',
  197:b'0H00H\x84\x84\xfc\x84\x84\x00\x00',
  198:b'\x00\\\xa0\xa0\xa0\xb8\xe0\xa0\xa0\xbc\x00\x00',
  199:b'\x00x\x84\x80\x80\x80\x80\x80\x84x\x10 ',
  200:b' \x10\x00\xfc\x80\x80\xf0\x80\x80\xfc\x00\x00',
  201:b'\x10 \x00\xfc\x80\x80\xf0\x80\x80\xfc\x00\x00',
  202:b'0H\x00\xfc\x80\x80\xf0\x80\x80\xfc\x00\x00',
  203:b'HH\x00\xfc\x80\x80\xf0\x80\x80\xfc\x00\x00',
  204:b' \x10\x00|\x10\x10\x10\x10\x10|\x00\x00',
  205:b'\x10 \x00|\x10\x10\x10\x10\x10|\x00\x00',
  206:b'\x10(\x00|\x10\x10\x10\x10\x10|\x00\x00',
  207:b'DD\x00|\x10\x10\x10\x10\x10|\x00\x00',
  208:b'\x00\xf8DDD\xe4DDD\xf8\x00\x00',
  209:b'd\x98\x00\x84\xc4\xa4\xa4\x94\x8c\x84\x00\x00',
  210:b' \x10\x00x\x84\x84\x84\x84\x84x\x00\x00',
  211:b'\x10 \x00x\x84\x84\x84\x84\x84x\x00\x00',
  212:b'0H\x00x\x84\x84\x84\x84\x84x\x00\x00',
  213:b'd\x98\x00x\x84\x84\x84\x84\x84x\x00\x00',
  214:b'HH\x00x\x84\x84\x84\x84\x84x\x00\x00',
  215:b'\x00\x00\x00\x84H00H\x84\x00\x00\x00',
  216:b'\x04x\x8c\x94\x94\xa4\xa4\xa4\xc4x\x80\x00',
  217:b' \x10\x00\x84\x84\x84\x84\x84\x84x\x00\x00',
  218:b'\x10 \x00\x84\x84\x84\x84\x84\x84x\x00\x00',
  219:b'0H\x00\x84\x84\x84\x84\x84\x84x\x00\x00',
  220:b'HH\x00\x84\x84\x84\x84\x84\x84x\x00\x00',
  221:b'\x08\x10\x00DD(\x10\x10\x10\x10\x00\x00',
  222:b'\x00\x80\xf8\x84\x84\x84\xf8\x80\x80\x80\x00\x00',
  223:b'\x000HHPPHDDX\x00\x00',
  224:b'\x00 \x10\x00x\x04|\x84\x8ct\x00\x00',
  225:b'\x00\x10 \x00x\x04|\x84\x8ct\x00\x00',
  226:b'\x000H\x00x\x04|\x84\x8ct\x00\x00',
  227:b'\x00d\x98\x00x\x04|\x84\x8ct\x00\x00',
  228:b'\x00HH\x00x\x04|\x84\x8ct\x00\x00',
  229:b'0H0\x00x\x04|\x84\x8ct\x00\x00',
  230:b'\x00\x00\x00\x00h\x14|\x90\x94h\x00\x00',
  231:b'\x00\x00\x00\x00x\x84\x80\x80\x84x\x10 ',
  232:b'\x00 \x10\x00x\x84\xfc\x80\x84x\x00\x00',
  233:b'\x00\x10 \x00x\x84\xfc\x80\x84x\x00\x00',
  234:b'\x000H\x00x\x84\xfc\x80\x84x\x00\x00',
  235:b'\x00HH\x00x\x84\xfc\x80\x84x\x00\x00',
  236:b'\x00 \x10\x000\x10\x10\x10\x10|\x00\x00',
  237:b'\x00\x10 \x000\x10\x10\x10\x10|\x00\x00',
  238:b'\x000H\x000\x10\x10\x10\x10|\x00\x00',
  239:b'\x00HH\x000\x10\x10\x10\x10|\x00\x00',
  240:b'H0P\x08x\x84\x84\x84\x84x\x00\x00',
  241:b'\x00d\x98\x00\xb8\xc4\x84\x84\x84\x84\x00\x00',
  242:b'\x00 \x10\x00x\x84\x84\x84\x84x\x00\x00',
  243:b'\x00\x10 \x00x\x84\x84\x84\x84x\x00\x00',
  244:b'\x000H\x00x\x84\x84\x84\x84x\x00\x00',
  245:b'\x00d\x98\x00x\x84\x84\x84\x84x\x00\x00',
  246:b'\x00HH\x00x\x84\x84\x84\x84x\x00\x00',
  247:b'\x00\x00\x10\x10\x00|\x00\x10\x10\x00\x00\x00',
  248:b'\x00\x00\x00\x04x\x8c\x94\xa4\xc4x\x80\x00',
  249:b'\x00 \x10\x00\x84\x84\x84\x84\x8ct\x00\x00',
  250:b'\x00\x10 \x00\x84\x84\x84\x84\x8ct\x00\x00',
  251:b'\x000H\x00\x84\x84\x84\x84\x8ct\x00\x00',
  252:b'\x00HH\x00\x84\x84\x84\x84\x8ct\x00\x00',
  253:b'\x00\x10 \x00\x84\x84\x84\x8ct\x04\x84x',
  254:b'\x00\x00\x80\x80\xb8\xc4\x84\x84\xc4\xb8\x80\x80',
  255:b'\x00HH\x00\x84\x84\x84\x8ct\x04\x84x',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 12, 7
