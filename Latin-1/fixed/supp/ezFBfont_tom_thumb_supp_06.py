'''
    ezFBfont_tom_thumb_supp_06 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original tom_thumb.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: tom_thumb
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/tom-thumb.bdf', '_', './supp-char.set']
# Date: 2024-07-31 14:57:48
'''
    Original Copyright, Comments and Notices from source:

    COMMENT """""MIT"""""
'''
version = '0.33'
name = '-raccoon-fixed4x6-medium-r-normal--6-60-75-75-p-40-iso10646-1'
family = 'fixed'
weight = 'medium'
size = 6

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 3

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 161

def max_ch():
    return 255

_g = {
  161:b'@\x00@@@\x00',
  162:b'@\xe0\x80\xe0@\x00',
  163:b'`@\xe0@\xe0\x00',
  164:b'\xa0@\xe0@\xa0\x00',
  165:b'\xa0\xa0@\xe0@\x00',
  166:b'@@\x00@@\x00',
  167:b'`@\xa0@\xc0\x00',
  168:b'\xa0\x00\x00\x00\x00\x00',
  169:b'`\x80`\x00\x00\x00',
  170:b'`\xa0\xe0\x00\xe0\x00',
  171:b'@\x80@\x00\x00\x00',
  172:b'\x00\xe0 \x00\x00\x00',
  173:b'\x00\x00\xc0\x00\x00\x00',
  174:b'\xc0\xc0\xa0\x00\x00\x00',
  175:b'\xe0\x00\x00\x00\x00\x00',
  176:b'@\xa0@\x00\x00\x00',
  177:b'@\xe0@\x00\xe0\x00',
  178:b'\xc0@`\x00\x00\x00',
  179:b'\xe0`\xe0\x00\x00\x00',
  180:b' @\x00\x00\x00\x00',
  181:b'\xa0\xa0\xa0\xc0\x80\x00',
  182:b'`\xa0```\x00',
  183:b'\x00\xe0\xe0\xe0\x00\x00',
  184:b'\x00\x00@ \xc0\x00',
  185:b'@@@\x00\x00\x00',
  186:b'@\xa0@\x00\xe0\x00',
  187:b'@ @\x00\x00\x00',
  188:b'\x80\x80\x00` \x00',
  189:b'\x80\x80\x00\xc0`\x00',
  190:b'\xc0\xc0\x00` \x00',
  191:b'@\x00@\x80\xe0\x00',
  192:b'@ @\xe0\xa0\x00',
  193:b'@\x80@\xe0\xa0\x00',
  194:b'\xe0\x00@\xe0\xa0\x00',
  195:b'`\xc0@\xe0\xa0\x00',
  196:b'\xa0@\xa0\xe0\xa0\x00',
  197:b'\xc0\xc0\xa0\xe0\xa0\x00',
  198:b'`\xc0\xe0\xc0\xe0\x00',
  199:b'`\x80\x80` @',
  200:b'@ \xe0\xc0\xe0\x00',
  201:b'@\x80\xe0\xc0\xe0\x00',
  202:b'\xe0\x00\xe0\xc0\xe0\x00',
  203:b'\xa0\x00\xe0\xc0\xe0\x00',
  204:b'@ \xe0@\xe0\x00',
  205:b'@\x80\xe0@\xe0\x00',
  206:b'\xe0\x00\xe0@\xe0\x00',
  207:b'\xa0\x00\xe0@\xe0\x00',
  208:b'\xc0\xa0\xe0\xa0\xc0\x00',
  209:b'\xc0`\xa0\xe0\xa0\x00',
  210:b'@ \xe0\xa0\xe0\x00',
  211:b'@\x80\xe0\xa0\xe0\x00',
  212:b'\xe0\x00\xe0\xa0\xe0\x00',
  213:b'\xc0`\xe0\xa0\xe0\x00',
  214:b'\xa0\x00\xe0\xa0\xe0\x00',
  215:b'\x00\xa0@\xa0\x00\x00',
  216:b'`\xa0\xe0\xa0\xc0\x00',
  217:b'\x80@\xa0\xa0\xe0\x00',
  218:b' @\xa0\xa0\xe0\x00',
  219:b'\xe0\x00\xa0\xa0\xe0\x00',
  220:b'\xa0\x00\xa0\xa0\xe0\x00',
  221:b' @\xa0\xe0@\x00',
  222:b'\x80\xe0\xa0\xe0\x80\x00',
  223:b'`\xa0\xc0\xa0\xc0\x80',
  224:b'@ `\xa0\xe0\x00',
  225:b'@\x80`\xa0\xe0\x00',
  226:b'\xe0\x00`\xa0\xe0\x00',
  227:b'`\xc0`\xa0\xe0\x00',
  228:b'\xa0\x00`\xa0\xe0\x00',
  229:b'```\xa0\xe0\x00',
  230:b'\x00`\xe0\xe0\xc0\x00',
  231:b'\x00`\x80` @',
  232:b'@ `\xe0`\x00',
  233:b'@\x80`\xe0`\x00',
  234:b'\xe0\x00`\xe0`\x00',
  235:b'\xa0\x00`\xe0`\x00',
  236:b'@ @@@\x00',
  237:b'@\x80@@@\x00',
  238:b'\xe0\x00@@@\x00',
  239:b'\xa0\x00@@@\x00',
  240:b'`\xc0`\xa0`\x00',
  241:b'\xc0`\xc0\xa0\xa0\x00',
  242:b'@ @\xa0@\x00',
  243:b'@\x80@\xa0@\x00',
  244:b'\xe0\x00@\xa0@\x00',
  245:b'\xc0`@\xa0@\x00',
  246:b'\xa0\x00@\xa0@\x00',
  247:b'@\x00\xe0\x00@\x00',
  248:b'\x00`\xe0\xa0\xc0\x00',
  249:b'\x80@\xa0\xa0`\x00',
  250:b' @\xa0\xa0`\x00',
  251:b'\xe0\x00\xa0\xa0`\x00',
  252:b'\xa0\x00\xa0\xa0`\x00',
  253:b' @\xa0` @',
  254:b'\x00\x80\xc0\xa0\xc0\x80',
  255:b'\xa0\x00\xa0` @',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 6, 3
