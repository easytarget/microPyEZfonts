'''
    ezFBfont_12_8x13O_supp : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 8x13O.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: 8x13O
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/8x13O.bdf', '_', './supp-char.set']
# Date: 2024-06-12 20:07:14

version = '0.33'
name = '-Misc-Fixed-Medium-O-Normal--13-120-75-75-C-80-ISO10646-1'
family = 'fixed'
weight = 'medium'
size = 13

def height():
    return 12

def baseline():
    return 10

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
 160:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 161:[b'\x00\x08\x00\x08\x08\x08\x10\x10\x10\x10\x00\x00'],
 162:[b'\x00\x08\x1c*(PT8\x10\x00\x00\x00'],
 163:[b'\x00\x0e\x11\x108\x10  b\xdc\x00\x00'],
 164:[b'\x00\x00\x00B<$Hx\x84\x00\x00\x00'],
 165:[b'\x00\x82\x82D(|\x10\xf8  \x00\x00'],
 166:[b'\x00\x08\x08\x08\x08\x00\x10\x10\x10\x10\x00\x00'],
 167:[b'\x18$ \x18$H0\x08H0\x00\x00'],
 168:[b'$$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 169:[b'\x00\x1c"IU\xa2\xaa\x92D8\x00\x00'],
 170:[b'\x00\x1c\x02<D<\x00|\x00\x00\x00\x00'],
 171:[b'\x00\x00\x12$H\x90\x90H$\x00\x00\x00'],
 172:[b'\x00\x00\x00\x00\x00~\x02\x04\x04\x00\x00\x00'],
 173:[b'\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00'],
 174:[b'\x00\x1c"YU\xaa\xb2\xaaD8\x00\x00'],
 175:[b'\x00~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 176:[b'\x00\x18$$\x18\x00\x00\x00\x00\x00\x00\x00'],
 177:[b'\x00\x00\x08\x08>\x10\x10\x00|\x00\x00\x00'],
 178:[b'\x18$\x048@x\x00\x00\x00\x00\x00\x00'],
 179:[b'8\x04\x18\x08H0\x00\x00\x00\x00\x00\x00'],
 180:[b'\x08\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 181:[b'\x00\x00\x00\x00BBB\x84\xcc\xb4\x80\x00'],
 182:[b'\x00>ttt4((((\x00\x00'],
 183:[b'\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00'],
 184:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x18'],
 185:[b'\x08\x18\x08\x10\x108\x00\x00\x00\x00\x00\x00'],
 186:[b'\x00\x0c\x12$\x18\x00x\x00\x00\x00\x00\x00'],
 187:[b'\x00\x00H$\x12\x12$H\x90\x00\x00\x00'],
 188:[b'\x100\x10 "v\n\x14\x1e\x04\x00\x00'],
 189:[b' ` @L\xf2\x04\x18 <\x00\x00'],
 190:[b'8\x04\x18\x08J6\n\x14\x1e\x04\x00\x00'],
 191:[b'\x00\x08\x00\x08\x08\x10 BD8\x00\x00'],
 192:[b'\x10\x08\x00\x18$BB|\x84\x84\x00\x00'],
 193:[b'\x08\x10\x00\x18$BB|\x84\x84\x00\x00'],
 194:[b'\x18$\x00\x18$BB|\x84\x84\x00\x00'],
 195:[b'2L\x00\x18$BB|\x84\x84\x00\x00'],
 196:[b'$$\x00\x18$BB|\x84\x84\x00\x00'],
 197:[b'\x18$\x18\x18$BB|\x84\x84\x00\x00'],
 198:[b'\x007HHHNp\x90\x90\x9e\x00\x00'],
 199:[b'\x00<B@@@\x80\x80\x84x\x10 '],
 200:[b'\x10\x08\x00~@@p\x80\x80\xfc\x00\x00'],
 201:[b'\x08\x10\x00~@@p\x80\x80\xfc\x00\x00'],
 202:[b'\x18$\x00~@@p\x80\x80\xfc\x00\x00'],
 203:[b'$$\x00~@@p\x80\x80\xfc\x00\x00'],
 204:[b'\x10\x08\x00>\x08\x08\x10\x10\x10|\x00\x00'],
 205:[b'\x04\x08\x00>\x08\x08\x10\x10\x10|\x00\x00'],
 206:[b'\x0c\x12\x00>\x08\x08\x10\x10\x10|\x00\x00'],
 207:[b'""\x00>\x08\x08\x10\x10\x10|\x00\x00'],
 208:[b'\x00xDBB\xe2D\x84\x88\xf0\x00\x00'],
 209:[b'2L\x00AaQ\x92\x8a\x86\x82\x00\x00'],
 210:[b'\x10\x08\x00>AA\x82\x82\x82|\x00\x00'],
 211:[b'\x04\x08\x00>AA\x82\x82\x82|\x00\x00'],
 212:[b'\x0c\x12\x00>AA\x82\x82\x82|\x00\x00'],
 213:[b'2L\x00>AA\x82\x82\x82|\x00\x00'],
 214:[b'""\x00>AA\x82\x82\x82|\x00\x00'],
 215:[b'\x00\x00\x00B$\x180H\x84\x00\x00\x00'],
 216:[b'\x02<FJJR\xa4\xa4\xc4x\x80\x00'],
 217:[b' \x10\x00BBB\x84\x84\x84x\x00\x00'],
 218:[b'\x08\x10\x00BBB\x84\x84\x84x\x00\x00'],
 219:[b'\x18$\x00BBB\x84\x84\x84x\x00\x00'],
 220:[b'$$\x00BBB\x84\x84\x84x\x00\x00'],
 221:[b'\x08\x10\x00DD(0   \x00\x00'],
 222:[b'\x00@|BBB|\x80\x80\x80\x00\x00'],
 223:[b'\x00\x1c""$(DBB\\\x00\x00'],
 224:[b'\x00\x10\x08\x00<\x02|\x84\x8ct\x00\x00'],
 225:[b'\x00\x04\x08\x00<\x02|\x84\x8ct\x00\x00'],
 226:[b'\x00\x18$\x00<\x02|\x84\x8ct\x00\x00'],
 227:[b'\x002L\x00<\x02|\x84\x8ct\x00\x00'],
 228:[b'\x00$$\x00<\x02|\x84\x8ct\x00\x00'],
 229:[b'\x18$\x18\x00<\x02|\x84\x8ct\x00\x00'],
 230:[b'\x00\x00\x00\x006\t~\x90\x92l\x00\x00'],
 231:[b'\x00\x00\x00\x00<B\x80\x80\x84x\x10 '],
 232:[b'\x00\x10\x08\x00<B|\x80\x84x\x00\x00'],
 233:[b'\x00\x08\x10\x00<B|\x80\x84x\x00\x00'],
 234:[b'\x00\x18$\x00<B|\x80\x84x\x00\x00'],
 235:[b'\x00$$\x00<B|\x80\x84x\x00\x00'],
 236:[b'\x00\x10\x08\x00\x18\x08\x08\x10\x10|\x00\x00'],
 237:[b'\x00\x08\x10\x00\x18\x08\x08\x10\x10|\x00\x00'],
 238:[b'\x00\x18$\x00\x18\x08\x08\x10\x10|\x00\x00'],
 239:[b'\x00$$\x00\x18\x08\x08\x10\x10|\x00\x00'],
 240:[b'$\x18(\x04<BB\x84\x84x\x00\x00'],
 241:[b'\x002L\x00\\bB\x84\x84\x84\x00\x00'],
 242:[b'\x00 \x10\x00<BB\x84\x84x\x00\x00'],
 243:[b'\x00\x08\x10\x00<BB\x84\x84x\x00\x00'],
 244:[b'\x00\x18$\x00<BB\x84\x84x\x00\x00'],
 245:[b'\x002L\x00<BB\x84\x84x\x00\x00'],
 246:[b'\x00$$\x00<BB\x84\x84x\x00\x00'],
 247:[b'\x00\x00\x08\x08\x00~\x00\x10\x10\x00\x00\x00'],
 248:[b'\x00\x00\x00\x02<FZ\xa4\xc4x\x80\x00'],
 249:[b'\x00\x10\x08\x00"""DD:\x00\x00'],
 250:[b'\x00\x04\x08\x00"""DD:\x00\x00'],
 251:[b'\x00\x0c\x12\x00"""DD:\x00\x00'],
 252:[b'\x00\x14\x14\x00"""DD:\x00\x00'],
 253:[b'\x00\x08\x10\x00BB\x84\x8ct\x04\x84x'],
 254:[b'\x00\x00@@\\bB\x84\xc4\xb8\x80\x80'],
 255:[b'\x00$$\x00BB\x84\x8ct\x04\x84x'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 12, 8

