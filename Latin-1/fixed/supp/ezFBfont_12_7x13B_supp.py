'''
    ezFBfont_12_7x13B_supp : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 7x13B.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: 7x13B
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/7x13B.bdf', './supp-char.set', 'True']
# Date: 2024-06-11 17:32:59

version = '0.33'
name = '-Misc-Fixed-Bold-R-Normal--13-120-75-75-C-70-ISO10646-1'
family = 'fixed'
weight = 'bold'
size = 13

def height():
    return 12

def baseline():
    return 10

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
 160:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 161:[b'00\x000000000\x00\x00'],
 162:[b'\x00\x10|\xd4\xd0\xd0\xd4|\x10\x00\x00\x00'],
 163:[b'\x008l``\xf8``l\xb8\x00\x00'],
 164:[b'\x00\x00\x00\xcc\xfcHH\xfc\xcc\x00\x00\x00'],
 165:[b'\x00\xcc\xccxx\xfc0\xfc00\x00\x00'],
 166:[b'0000\x00\x000000\x00\x00'],
 167:[b'x\xcc\xc0x\xcc\xccx\x0c\xccx\x00\x00'],
 168:[b'll\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 169:[b'x\xcc\x84\xb4\xe4\xe4\xb4\x84\xccx\x00\x00'],
 170:[b'\x00x\x0c|L|\x00|\x00\x00\x00\x00'],
 171:[b'\x00\x004h\xd0\xa0\xd0h4\x00\x00\x00'],
 172:[b'\x00\x00\x00\x00\x00\xfc\x0c\x0c\x0c\x00\x00\x00'],
 173:[b'\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00'],
 174:[b'x\xcc\x84\xbc\xac\xbc\xb4\xac\xccx\x00\x00'],
 175:[b'|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 176:[b'\x00x\xcc\xccx\x00\x00\x00\x00\x00\x00\x00'],
 177:[b'\x00\x0000\xfc00\x00\xfc\x00\x00\x00'],
 178:[b'\xe0\xb00`\xc0\xf0\x00\x00\x00\x00\x00\x00'],
 179:[b'\xe0\xb0`0\xb0\xe0\x00\x00\x00\x00\x00\x00'],
 180:[b'\x180`\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 181:[b'\x00\x00\x00\x00\xcc\xcc\xcc\xcc\xcc\xfc\x80\x00'],
 182:[b'\x00|\xfc\xf4\xf4\xf4t444\x00\x00'],
 183:[b'\x00\x00\x00\x0000\x00\x00\x00\x00\x00\x00'],
 184:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000`'],
 185:[b'`\xe0```\xf0\x00\x00\x00\x00\x00\x00'],
 186:[b'8|D|8\x00|\x00\x00\x00\x00\x00'],
 187:[b'\x00\x00\xb0X,\x14,X\xb0\x00\x00\x00'],
 188:[b'`\xe0``d\xfc\x1c4<\x0c\x00\x00'],
 189:[b'`\xe0``x\xec\x0c\x180<\x00\x00'],
 190:[b'\xe0\xb0`0\xb4\xec\x1c4<\x0c\x00\x00'],
 191:[b'00\x0000`\xc0\xcc\xccx\x00\x00'],
 192:[b'`0\x000x\xcc\xcc\xfc\xcc\xcc\x00\x00'],
 193:[b'\x180\x000x\xcc\xcc\xfc\xcc\xcc\x00\x00'],
 194:[b'8l\x000x\xcc\xcc\xfc\xcc\xcc\x00\x00'],
 195:[b'4X\x000x\xcc\xcc\xfc\xcc\xcc\x00\x00'],
 196:[b'\xcc\xcc\x000x\xcc\xcc\xfc\xcc\xcc\x00\x00'],
 197:[b'xHx0x\xcc\xcc\xfc\xcc\xcc\x00\x00'],
 198:[b'\x00|\xf8\xd8\xd8\xdc\xf8\xd8\xd8\xdc\x00\x00'],
 199:[b'\x00x\xcc\xc0\xc0\xc0\xc0\xc0\xccx0`'],
 200:[b'`0\x00\xfc\xc0\xc0\xf0\xc0\xc0\xfc\x00\x00'],
 201:[b'\x180\x00\xfc\xc0\xc0\xf0\xc0\xc0\xfc\x00\x00'],
 202:[b'8l\x00\xfc\xc0\xc0\xf0\xc0\xc0\xfc\x00\x00'],
 203:[b'\xcc\xcc\x00\xfc\xc0\xc0\xf0\xc0\xc0\xfc\x00\x00'],
 204:[b'`0\x00\xfc00000\xfc\x00\x00'],
 205:[b'\x180\x00\xfc00000\xfc\x00\x00'],
 206:[b'8l\x00\xfc00000\xfc\x00\x00'],
 207:[b'\xcc\xcc\x00\xfc00000\xfc\x00\x00'],
 208:[b'\x00\xf8lll\xeclll\xf8\x00\x00'],
 209:[b'4X\x00\xcc\xcc\xec\xfc\xdc\xcc\xcc\x00\x00'],
 210:[b'`0\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 211:[b'\x180\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 212:[b'8l\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 213:[b'4X\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 214:[b'\xcc\xcc\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 215:[b'\x00\x00\x00\x00\xccx0x\xcc\x00\x00\x00'],
 216:[b'\x00\x04x\xdc\xdc\xdc\xec\xec\xecx\x80\x00'],
 217:[b'`0\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 218:[b'\x180\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 219:[b'8l\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 220:[b'\xcc\xcc\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 221:[b'\x180\x00\xccHx0000\x00\x00'],
 222:[b'\x00\xc0\xf8\xcc\xcc\xcc\xf8\xc0\xc0\xc0\x00\x00'],
 223:[b'\x00x\xcc\xcc\xd8\xd8\xcc\xcc\xcc\xd8\x00\x00'],
 224:[b'\x000\x18\x00x\x0c|\xcc\xdc|\x00\x00'],
 225:[b'\x00\x180\x00x\x0c|\xcc\xdc|\x00\x00'],
 226:[b'\x008l\x00x\x0c|\xcc\xdc|\x00\x00'],
 227:[b'\x004X\x00x\x0c|\xcc\xdc|\x00\x00'],
 228:[b'\x00ll\x00x\x0c|\xcc\xdc|\x00\x00'],
 229:[b'8(8\x00x\x0c|\xcc\xdc|\x00\x00'],
 230:[b'\x00\x00\x00\x00x4|\xb0\xb4h\x00\x00'],
 231:[b'\x00\x00\x00\x00x\xcc\xc0\xc0\xccx0`'],
 232:[b'\x000\x18\x00x\xcc\xfc\xc0\xccx\x00\x00'],
 233:[b'\x00\x180\x00x\xcc\xfc\xc0\xccx\x00\x00'],
 234:[b'\x008l\x00x\xcc\xfc\xc0\xccx\x00\x00'],
 235:[b'\x00ll\x00x\xcc\xfc\xc0\xccx\x00\x00'],
 236:[b'\x00`0\x00p0000x\x00\x00'],
 237:[b'\x00\x180\x00p0000x\x00\x00'],
 238:[b'\x00p\xd8\x00p0000x\x00\x00'],
 239:[b'\x00ll\x00p0000x\x00\x00'],
 240:[b'h0x\x0c|\xcc\xcc\xcc\xccx\x00\x00'],
 241:[b'\x004X\x00\xf8\xec\xcc\xcc\xcc\xcc\x00\x00'],
 242:[b'\x00`0\x00x\xcc\xcc\xcc\xccx\x00\x00'],
 243:[b'\x00\x180\x00x\xcc\xcc\xcc\xccx\x00\x00'],
 244:[b'\x008l\x00x\xcc\xcc\xcc\xccx\x00\x00'],
 245:[b'\x004X\x00x\xcc\xcc\xcc\xccx\x00\x00'],
 246:[b'\x00ll\x00x\xcc\xcc\xcc\xccx\x00\x00'],
 247:[b'\x00\x0000\x00\xfc\x0000\x00\x00\x00'],
 248:[b'\x00\x00\x04x\xcc\xdc\xcc\xec\xccx\x80\x00'],
 249:[b'\x00`0\x00\xcc\xcc\xcc\xcc\xdc|\x00\x00'],
 250:[b'\x00\x180\x00\xcc\xcc\xcc\xcc\xdc|\x00\x00'],
 251:[b'\x008l\x00\xcc\xcc\xcc\xcc\xdc|\x00\x00'],
 252:[b'\x00ll\x00\xcc\xcc\xcc\xcc\xdc|\x00\x00'],
 253:[b'\x00\x180\x00\xcc\xcc\xcc\xdc|\x0c\xccx'],
 254:[b'\x00\x00\xc0\xc0\xd8\xec\xcc\xcc\xec\xd8\xc0\xc0'],
 255:[b'\x00ll\x00\xcc\xcc\xcc\xdcl\x0c\xccx'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 12, 7

