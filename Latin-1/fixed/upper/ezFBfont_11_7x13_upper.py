'''
    ezFBfont_11_7x13_upper : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 7x13.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: 7x13
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/7x13.bdf', './upper-char.set', 'True']
# Date: 2024-06-11 17:32:55

version = '0.33'
name = '-Misc-Fixed-Medium-R-Normal--13-120-75-75-C-70-ISO10646-1'
family = 'fixed'
weight = 'medium'
size = 13

def height():
    return 11

def baseline():
    return 10

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x00\x10\x10\x10\x10\x10\x10\x10\x00\x10\x00'],
 34:[b'\x00(((\x00\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00\x00((|(|((\x00\x00'],
 36:[b'\x00\x00\x10<P8\x14x\x10\x00\x00'],
 37:[b'\x00D\xa4H\x10\x10 H\x94\x88\x00'],
 38:[b'\x00\x00\x00`\x90\x90`\x94\x88t\x00'],
 39:[b'\x00\x10\x10\x10\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x00\x08\x10\x10   \x10\x10\x08\x00'],
 41:[b'\x00 \x10\x10\x08\x08\x08\x10\x10 \x00'],
 42:[b'\x00\x00\x00H0\xfc0H\x00\x00\x00'],
 43:[b'\x00\x00\x00\x10\x10|\x10\x10\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00\x00\x0080@'],
 45:[b'\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x108\x10'],
 47:[b'\x00\x04\x04\x08\x08\x10  @@\x00'],
 48:[b'\x000H\x84\x84\x84\x84\x84H0\x00'],
 49:[b'\x00\x100P\x10\x10\x10\x10\x10|\x00'],
 50:[b'\x00x\x84\x84\x04\x080@\x80\xfc\x00'],
 51:[b'\x00\xfc\x04\x08\x108\x04\x04\x84x\x00'],
 52:[b'\x00\x08\x18(H\x88\x88\xfc\x08\x08\x00'],
 53:[b'\x00\xfc\x80\x80\xb8\xc4\x04\x04\x84x\x00'],
 54:[b'\x008@\x80\x80\xb8\xc4\x84\x84x\x00'],
 55:[b'\x00\xfc\x04\x08\x10\x10  @@\x00'],
 56:[b'\x00x\x84\x84\x84x\x84\x84\x84x\x00'],
 57:[b'\x00x\x84\x84\x8ct\x04\x04\x08p\x00'],
 58:[b'\x00\x00\x00\x108\x10\x00\x00\x108\x10'],
 59:[b'\x00\x00\x00\x108\x10\x00\x0080@'],
 60:[b'\x00\x04\x08\x10 @ \x10\x08\x04\x00'],
 61:[b'\x00\x00\x00\x00\xfc\x00\x00\xfc\x00\x00\x00'],
 62:[b'\x00@ \x10\x08\x04\x08\x10 @\x00'],
 63:[b'\x00x\x84\x84\x04\x08\x10\x10\x00\x10\x00'],
 64:[b'\x00x\x84\x84\x9c\xa4\xac\x94\x80x\x00'],
 65:[b'\x000H\x84\x84\x84\xfc\x84\x84\x84\x00'],
 66:[b'\x00\xf8DDDxDDD\xf8\x00'],
 67:[b'\x00x\x84\x80\x80\x80\x80\x80\x84x\x00'],
 68:[b'\x00\xf8DDDDDDD\xf8\x00'],
 69:[b'\x00\xfc\x80\x80\x80\xf0\x80\x80\x80\xfc\x00'],
 70:[b'\x00\xfc\x80\x80\x80\xf0\x80\x80\x80\x80\x00'],
 71:[b'\x00x\x84\x80\x80\x80\x9c\x84\x8ct\x00'],
 72:[b'\x00\x84\x84\x84\x84\xfc\x84\x84\x84\x84\x00'],
 73:[b'\x00|\x10\x10\x10\x10\x10\x10\x10|\x00'],
 74:[b'\x00\x1c\x08\x08\x08\x08\x08\x08\x88p\x00'],
 75:[b'\x00\x84\x88\x90\xa0\xc0\xa0\x90\x88\x84\x00'],
 76:[b'\x00\x80\x80\x80\x80\x80\x80\x80\x80\xfc\x00'],
 77:[b'\x00\x84\xcc\xcc\xb4\xb4\x84\x84\x84\x84\x00'],
 78:[b'\x00\x84\x84\xc4\xa4\x94\x8c\x84\x84\x84\x00'],
 79:[b'\x00x\x84\x84\x84\x84\x84\x84\x84x\x00'],
 80:[b'\x00\xf8\x84\x84\x84\xf8\x80\x80\x80\x80\x00'],
 81:[b'\x00x\x84\x84\x84\x84\x84\xa4\x94x\x04'],
 82:[b'\x00\xf8\x84\x84\x84\xf8\xa0\x90\x88\x84\x00'],
 83:[b'\x00x\x84\x80\x80x\x04\x04\x84x\x00'],
 84:[b'\x00|\x10\x10\x10\x10\x10\x10\x10\x10\x00'],
 85:[b'\x00\x84\x84\x84\x84\x84\x84\x84\x84x\x00'],
 86:[b'\x00\x84\x84\x84HHH000\x00'],
 87:[b'\x00\x84\x84\x84\x84\xb4\xb4\xcc\xcc\x84\x00'],
 88:[b'\x00\x84\x84HH0HH\x84\x84\x00'],
 89:[b'\x00DD((\x10\x10\x10\x10\x10\x00'],
 90:[b'\x00\xfc\x04\x08\x100 @\x80\xfc\x00'],
 91:[b'x@@@@@@@@@x'],
 92:[b'\x00@@  \x10\x08\x08\x04\x04\x00'],
 93:[b'x\x08\x08\x08\x08\x08\x08\x08\x08\x08x'],
 94:[b'\x00\x10(D\x00\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 11, 7

