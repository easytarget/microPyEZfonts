'''
    ezFBfont_6x10_upper_08 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 6x10.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 6x10
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/6x10.bdf', '_', './upper-char.set']
# Date: 2024-07-31 14:56:39
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Public domain terminal emulator font.  Share and enjoy."
'''
version = '0.33'
name = '-misc-fixed-medium-r-normal--10-100-75-75-c-60-iso10646-1'
family = 'fixed'
weight = 'medium'
size = 10

def height():
    return 8

def baseline():
    return 7

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x00\x00',
  33:b'     \x00 \x00',
  34:b'PPP\x00\x00\x00\x00\x00',
  35:b'PP\xf8P\xf8PP\x00',
  36:b' p\xa0p(p \x00',
  37:b'H\xa8P P\xa8\x90\x00',
  38:b'@\xa0\xa0@\xa8\x90h\x00',
  39:b'   \x00\x00\x00\x00\x00',
  40:b'\x10 @@@ \x10\x00',
  41:b'@ \x10\x10\x10 @\x00',
  42:b'\x00\x88P\xf8P\x88\x00\x00',
  43:b'\x00  \xf8  \x00\x00',
  44:b'\x00\x00\x00\x00\x000 @',
  45:b'\x00\x00\x00\xf8\x00\x00\x00\x00',
  46:b'\x00\x00\x00\x00\x00 p ',
  47:b'\x08\x08\x10 @\x80\x80\x00',
  48:b' P\x88\x88\x88P \x00',
  49:b' `\xa0   \xf8\x00',
  50:b'p\x88\x080@\x80\xf8\x00',
  51:b'\xf8\x08\x100\x08\x88p\x00',
  52:b'\x100P\x90\xf8\x10\x10\x00',
  53:b'\xf8\x80\xb0\xc8\x08\x88p\x00',
  54:b'0@\x80\xb0\xc8\x88p\x00',
  55:b'\xf8\x08\x10\x10 @@\x00',
  56:b'p\x88\x88p\x88\x88p\x00',
  57:b'p\x88\x98h\x08\x10`\x00',
  58:b'\x00 p \x00 p ',
  59:b'\x00 p \x000 @',
  60:b'\x08\x10 @ \x10\x08\x00',
  61:b'\x00\x00\xf8\x00\xf8\x00\x00\x00',
  62:b'@ \x10\x08\x10 @\x00',
  63:b'p\x88\x10  \x00 \x00',
  64:b'p\x88\x98\xa8\xb0\x80p\x00',
  65:b' P\x88\x88\xf8\x88\x88\x00',
  66:b'\xf0HHpHH\xf0\x00',
  67:b'p\x88\x80\x80\x80\x88p\x00',
  68:b'\xf0HHHHH\xf0\x00',
  69:b'\xf8\x80\x80\xf0\x80\x80\xf8\x00',
  70:b'\xf8\x80\x80\xf0\x80\x80\x80\x00',
  71:b'p\x88\x80\x80\x98\x88p\x00',
  72:b'\x88\x88\x88\xf8\x88\x88\x88\x00',
  73:b'p     p\x00',
  74:b'8\x10\x10\x10\x10\x90`\x00',
  75:b'\x88\x90\xa0\xc0\xa0\x90\x88\x00',
  76:b'\x80\x80\x80\x80\x80\x80\xf8\x00',
  77:b'\x88\x88\xd8\xa8\x88\x88\x88\x00',
  78:b'\x88\x88\xc8\xa8\x98\x88\x88\x00',
  79:b'p\x88\x88\x88\x88\x88p\x00',
  80:b'\xf0\x88\x88\xf0\x80\x80\x80\x00',
  81:b'p\x88\x88\x88\x88\xa8p\x08',
  82:b'\xf0\x88\x88\xf0\xa0\x90\x88\x00',
  83:b'p\x88\x80p\x08\x88p\x00',
  84:b'\xf8      \x00',
  85:b'\x88\x88\x88\x88\x88\x88p\x00',
  86:b'\x88\x88\x88PPP \x00',
  87:b'\x88\x88\x88\xa8\xa8\xd8\x88\x00',
  88:b'\x88\x88P P\x88\x88\x00',
  89:b'\x88\x88P    \x00',
  90:b'\xf8\x08\x10 @\x80\xf8\x00',
  91:b'p@@@@@p\x00',
  92:b'\x80\x80@ \x10\x08\x08\x00',
  93:b'p\x10\x10\x10\x10\x10p\x00',
  94:b' P\x88\x00\x00\x00\x00\x00',
  95:b'\x00\x00\x00\x00\x00\x00\x00\xf8',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 8, 6
