'''
    ezFBfont_8x13O_upper_10 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 8x13O.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 8x13O
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/8x13O.bdf', '_', './upper-char.set']
# Date: 2024-07-31 14:56:55
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "Public domain font.  Share and enjoy."
'''
version = '0.33'
name = '-misc-fixed-medium-o-normal--13-120-75-75-c-80-iso10646-1'
family = 'fixed'
weight = 'medium'
size = 13

def height():
    return 10

def baseline():
    return 9

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  33:b'\x08\x08\x08\x08\x10\x10\x10\x00\x10\x00',
  34:b'$$$\x00\x00\x00\x00\x00\x00\x00',
  35:b'\x00$$~$\xfcHH\x00\x00',
  36:b'\x08\x1e((\x1c\x14\x14x\x10\x00',
  37:b'"R$\x08\x10 H\x94\x88\x00',
  38:b'\x00\x0c\x12\x14\x18*DL2\x00',
  39:b'\x10\x10\x10\x00\x00\x00\x00\x00\x00\x00',
  40:b'\x04\x08\x10\x10  \x10\x10\x08\x00',
  41:b'\x10\x08\x08\x04\x04\x08\x08\x10 \x00',
  42:b'\x00\x00$\x18~0H\x00\x00\x00',
  43:b'\x00\x00\x10\x10|  \x00\x00\x00',
  44:b'\x00\x00\x00\x00\x00\x00\x00\x1c\x18 ',
  45:b'\x00\x00\x00\x00|\x00\x00\x00\x00\x00',
  46:b'\x00\x00\x00\x00\x00\x00\x00\x108\x10',
  47:b'\x01\x01\x02\x04\x18 @\x80\x80\x00',
  48:b'\x18$BBB\x84\x84H0\x00',
  49:b'\x08\x18(\x08\x08\x10\x10\x10|\x00',
  50:b'<BB\x02\x0c0@\x80\xfc\x00',
  51:b'~\x02\x04\x08\x18\x04\x04\x84x\x00',
  52:b'\x02\x06\n\x12$D~\x08\x08\x00',
  53:b'>  \\b\x02\x04\x84x\x00',
  54:b'\x1c"@@x\x84\x84\x84x\x00',
  55:b'~\x02\x04\x08\x10  @@\x00',
  56:b'<BBB|\x84\x84\x84x\x00',
  57:b'<BBF:\x04\x04\x08p\x00',
  58:b'\x00\x00\x08\x1c\x08\x00\x00\x108\x10',
  59:b'\x00\x00\x08\x1c\x08\x00\x0080@',
  60:b'\x04\x08\x10 @@ \x10\x08\x00',
  61:b'\x00\x00\x00~\x00\x00\xfc\x00\x00\x00',
  62:b' \x10\x08\x04\x04\x08\x10 @\x00',
  63:b'\x1c"B\x04\x08\x10\x10\x00\x10\x00',
  64:b'<BBNR\xa6\x98\x80x\x00',
  65:b'\x18$BBB\xfc\x84\x84\x84\x00',
  66:b'xDBDx\x88\x84\x88\xf0\x00',
  67:b'<B@@@\x80\x80\x84x\x00',
  68:b'xDBBB\x84\x84\x88\xf0\x00',
  69:b'~@@@x\x80\x80\x80\xfc\x00',
  70:b'~@@@x\x80\x80\x80\x80\x00',
  71:b'<B@@@\x9c\x84\x8ct\x00',
  72:b'BBBB|\x84\x84\x84\x84\x00',
  73:b'>\x08\x08\x08\x08\x10\x10\x10|\x00',
  74:b'\x1e\x04\x04\x04\x04\x08\x08\x88p\x00',
  75:b'BDHP`\xa0\x90\x88\x84\x00',
  76:b'     @@@~\x00',
  77:b'AAcUI\x82\x82\x82\x82\x00',
  78:b'BBbRJ\x8c\x84\x84\x84\x00',
  79:b'<BBBB\x84\x84\x84x\x00',
  80:b'|BBB|\x80\x80\x80\x80\x00',
  81:b'<BBB\x84\x84\xa4\x94x\x04',
  82:b'|BBB|\xa0\x90\x88\x84\x00',
  83:b'<B@@8\x04\x04\x84x\x00',
  84:b'\xfe\x10\x10\x10\x10    \x00',
  85:b'BBBB\x84\x84\x84\x84x\x00',
  86:b'\x82\x82\x84DHHPP \x00',
  87:b'AAAAI\x92\x92\xaaD\x00',
  88:b'AA"\x14\x18(D\x82\x82\x00',
  89:b'\x82\x82D(\x10\x10   \x00',
  90:b'~\x02\x04\x08\x10 @\x80\xfc\x00',
  91:b'<    @@@x\x00',
  92:b'@@ \x10\x08\x08\x04\x02\x02\x00',
  93:b'<\x04\x04\x04\x04\x08\x08\x08x\x00',
  94:b'\x10(D\x00\x00\x00\x00\x00\x00\x00',
  95:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 10, 8
