'''
    ezFBfont_spleen_5x8_num_08 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original spleen_5x8.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: spleen_5x8
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/spleen-5x8.bdf', '_', './num-char.set']
# Date: 2024-07-31 14:57:36
'''
    Original Copyright, Comments and Notices from source:

    COPYRIGHT /*
    COPYRIGHT * Spleen 5x8 1.9.1
    COPYRIGHT * Copyright (c) 2018-2022, Frederic Cambus
    COPYRIGHT * https://www.cambus.net/
    COPYRIGHT *
    COPYRIGHT * Created:      2018-08-08
    COPYRIGHT * Last Updated: 2021-03-10
    COPYRIGHT *
    COPYRIGHT * Spleen is released under the BSD 2-Clause license.
    COPYRIGHT * See LICENSE file for details.
    COPYRIGHT *
    COPYRIGHT * SPDX-License-Identifier: BSD-2-Clause
    COPYRIGHT */

    COMMENT "Copyright (c) 2018-2022, Frederic Cambus"
'''
version = '0.33'
name = '-misc-spleen-medium-r-normal--8-80-72-72-c-50-iso10646-1'
family = 'spleen'
weight = 'medium'
size = 8

def height():
    return 8

def baseline():
    return 7

def max_width():
    return 5

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 176

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x00\x00',
  37:b'\x10\x90\xa0 @P\x90\x80',
  40:b'\x10 @@@@ \x10',
  41:b'@ \x10\x10\x10\x10 @',
  42:b'\x00\x00\x90`\xf0`\x90\x00',
  43:b'\x00\x00  \xf8  \x00',
  44:b'\x00\x00\x00\x00\x00  @',
  45:b'\x00\x00\x00\x00\xf0\x00\x00\x00',
  46:b'\x00\x00\x00\x00\x00\x00 \x00',
  47:b'\x10\x10  @@\x80\x80',
  48:b'\x00`\x90\xb0\xd0\x90`\x00',
  49:b'\x00 `   p\x00',
  50:b'\x00`\x90\x10`\x80\xf0\x00',
  51:b'\x00`\x90 \x10\x90`\x00',
  52:b'\x00\x80\xa0\xa0\xf0  \x00',
  53:b'\x00\xf0\x80\xe0\x10\x10\xe0\x00',
  54:b'\x00`\x80\xe0\x90\x90`\x00',
  55:b'\x00\xf0\x90\x10 @@\x00',
  56:b'\x00`\x90`\x90\x90`\x00',
  57:b'\x00`\x90\x90p\x10`\x00',
  58:b'\x00\x00\x00 \x00\x00 \x00',
  176:b'\x00\x00\x00\x00\x00\x00\x00\x00',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 8, 5
