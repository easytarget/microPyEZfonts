'''
    ezFBfont_08_spleen_5x8_upper : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original spleen_5x8.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Copyright (c) 2018-2022, Frederic Cambus"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT /*
    COMMENT  * Spleen 5x8 1.9.1
    COMMENT  * Copyright (c) 2018-2022, Frederic Cambus
    COMMENT  * https://www.cambus.net/
    COMMENT  *
    COMMENT  * Created:      2018-08-08
    COMMENT  * Last Updated: 2021-03-10
    COMMENT  *
    COMMENT  * Spleen is released under the BSD 2-Clause license.
    COMMENT  * See LICENSE file for details.
    COMMENT  *
    COMMENT  * SPDX-License-Identifier: BSD-2-Clause
    COMMENT  */
'''
# Code generated by bdf2dict.py
# Font: spleen_5x8
# Cmd: [bdf2dict.py], ['Latin-1-bdf-sources/spleen-5x8.bdf', '_', './upper-char.set']
# Date: 2024-06-12 20:09:06

version = '0.33'
name = '-misc-spleen-medium-r-normal--8-80-72-72-C-50-ISO10646-1'
family = 'spleen'
weight = 'medium'
size = 8

def height():
    return 8

def baseline():
    return 7

def max_width():
    return 5

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'     \x00 \x00'],
 34:[b'PPP\x00\x00\x00\x00\x00'],
 35:[b'\x00P\xf8PP\xf8P\x00'],
 36:[b' p\xa0`00\xe0 '],
 37:[b'\x10\x90\xa0 @P\x90\x80'],
 38:[b' PP`\xa8\x90h\x00'],
 39:[b'   \x00\x00\x00\x00\x00'],
 40:[b'\x10 @@@@ \x10'],
 41:[b'@ \x10\x10\x10\x10 @'],
 42:[b'\x00\x00\x90`\xf0`\x90\x00'],
 43:[b'\x00\x00  \xf8  \x00'],
 44:[b'\x00\x00\x00\x00\x00  @'],
 45:[b'\x00\x00\x00\x00\xf0\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00 \x00'],
 47:[b'\x10\x10  @@\x80\x80'],
 48:[b'\x00`\x90\xb0\xd0\x90`\x00'],
 49:[b'\x00 `   p\x00'],
 50:[b'\x00`\x90\x10`\x80\xf0\x00'],
 51:[b'\x00`\x90 \x10\x90`\x00'],
 52:[b'\x00\x80\xa0\xa0\xf0  \x00'],
 53:[b'\x00\xf0\x80\xe0\x10\x10\xe0\x00'],
 54:[b'\x00`\x80\xe0\x90\x90`\x00'],
 55:[b'\x00\xf0\x90\x10 @@\x00'],
 56:[b'\x00`\x90`\x90\x90`\x00'],
 57:[b'\x00`\x90\x90p\x10`\x00'],
 58:[b'\x00\x00\x00 \x00\x00 \x00'],
 59:[b'\x00\x00\x00 \x00  @'],
 60:[b'\x00\x10 @@ \x10\x00'],
 61:[b'\x00\x00\x00\xf0\x00\xf0\x00\x00'],
 62:[b'\x00@ \x10\x10 @\x00'],
 63:[b'`\x90\x10 @\x00@\x00'],
 64:[b'\x00`\x90\xb0\xb0\x80p\x00'],
 65:[b'\x00`\x90\x90\xf0\x90\x90\x00'],
 66:[b'\x00\xe0\x90\xe0\x90\x90\xe0\x00'],
 67:[b'\x00p\x80\x80\x80\x80p\x00'],
 68:[b'\x00\xe0\x90\x90\x90\x90\xe0\x00'],
 69:[b'\x00p\x80\xe0\x80\x80p\x00'],
 70:[b'\x00p\x80\x80\xe0\x80\x80\x00'],
 71:[b'\x00p\x80\xb0\x90\x90p\x00'],
 72:[b'\x00\x90\x90\xf0\x90\x90\x90\x00'],
 73:[b'\x00p    p\x00'],
 74:[b'\x00p    \xc0\x00'],
 75:[b'\x00\x90\x90\xe0\x90\x90\x90\x00'],
 76:[b'\x00\x80\x80\x80\x80\x80p\x00'],
 77:[b'\x00\x90\xf0\xf0\x90\x90\x90\x00'],
 78:[b'\x00\x90\xd0\xd0\xb0\xb0\x90\x00'],
 79:[b'\x00`\x90\x90\x90\x90`\x00'],
 80:[b'\x00\xe0\x90\x90\xe0\x80\x80\x00'],
 81:[b'\x00`\x90\x90\x90\x90`0'],
 82:[b'\x00\xe0\x90\x90\xe0\x90\x90\x00'],
 83:[b'\x00p\x80`\x10\x10\xe0\x00'],
 84:[b'\x00\xf8     \x00'],
 85:[b'\x00\x90\x90\x90\x90\x90p\x00'],
 86:[b'\x00\x90\x90\x90\x90``\x00'],
 87:[b'\x00\x90\x90\x90\xf0\xf0\x90\x00'],
 88:[b'\x00\x90\x90``\x90\x90\x00'],
 89:[b'\x00\x90\x90\x90p\x10\xe0\x00'],
 90:[b'\x00\xf0\x10 @\x80\xf0\x00'],
 91:[b'p@@@@@@p'],
 92:[b'\x80\x80@@  \x10\x10'],
 93:[b'p\x10\x10\x10\x10\x10\x10p'],
 94:[b'\x00 P\x88\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\xf0'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 8, 5

