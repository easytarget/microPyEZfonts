'''
    ezFBfont_12_spleen_6x12_ascii : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original spleen_6x12.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: spleen_6x12
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/spleen-6x12.bdf', '_', './ascii-char.set']
# Date: 2024-06-18 20:27:42
'''
    Original Copyright, Comments and Notices from source:

    COPYRIGHT /*
    COPYRIGHT * Spleen 6x12 1.9.1
    COPYRIGHT * Copyright (c) 2018-2022, Frederic Cambus
    COPYRIGHT * https://www.cambus.net/
    COPYRIGHT *
    COPYRIGHT * Created:      2020-04-08
    COPYRIGHT * Last Updated: 2021-03-12
    COPYRIGHT *
    COPYRIGHT * Spleen is released under the BSD 2-Clause license.
    COPYRIGHT * See LICENSE file for details.
    COPYRIGHT *
    COPYRIGHT * SPDX-License-Identifier: BSD-2-Clause
    COPYRIGHT */

    COMMENT "Copyright (c) 2018-2022, Frederic Cambus"
'''
version = '0.33'
name = '-misc-spleen-medium-r-normal--12-120-72-72-c-60-iso10646-1'
family = 'spleen'
weight = 'medium'
size = 12

def height():
    return 12

def baseline():
    return 9

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 126

_g = {
  32:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  33:b'\x00      \x00 \x00\x00\x00',
  34:b'\x00PPP\x00\x00\x00\x00\x00\x00\x00\x00',
  35:b'\x00\x00P\xf8PPP\xf8P\x00\x00\x00',
  36:b' x\xa0\xa0p(((\xf0 \x00\x00',
  37:b'\x00\x08HP\x10 (H@\x00\x00\x00',
  38:b'\x000HH0`\x94\x88t\x00\x00\x00',
  39:b'\x00   \x00\x00\x00\x00\x00\x00\x00\x00',
  40:b'\x18 @@@@@@ \x18\x00\x00',
  41:b'`\x10\x08\x08\x08\x08\x08\x08\x10`\x00\x00',
  42:b'\x00\x00\x00H0\xfc0H\x00\x00\x00\x00',
  43:b'\x00\x00\x00  \xf8  \x00\x00\x00\x00',
  44:b'\x00\x00\x00\x00\x00\x00\x00  @\x00\x00',
  45:b'\x00\x00\x00\x00\x00\xf8\x00\x00\x00\x00\x00\x00',
  46:b'\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00',
  47:b'\x08\x08\x10\x10  @@\x80\x80\x00\x00',
  48:b'\x00p\x88\x98\xa8\xc8\x88\x88p\x00\x00\x00',
  49:b'\x00 `     p\x00\x00\x00',
  50:b'\x00p\x88\x08\x08p\x80\x80\xf8\x00\x00\x00',
  51:b'\x00p\x88\x080\x08\x08\x88p\x00\x00\x00',
  52:b'\x00\x80\x80\x90\x90\x90\xf8\x10\x10\x00\x00\x00',
  53:b'\x00\xf8\x80\x80\xf0\x08\x08\x08\xf0\x00\x00\x00',
  54:b'\x00p\x80\x80\xf0\x88\x88\x88p\x00\x00\x00',
  55:b'\x00\xf8\x88\x08\x10    \x00\x00\x00',
  56:b'\x00p\x88\x88p\x88\x88\x88p\x00\x00\x00',
  57:b'\x00p\x88\x88\x88x\x08\x08p\x00\x00\x00',
  58:b'\x00\x00\x00\x00 \x00\x00\x00 \x00\x00\x00',
  59:b'\x00\x00\x00\x00 \x00\x00  @\x00\x00',
  60:b'\x00\x08\x10 @@ \x10\x08\x00\x00\x00',
  61:b'\x00\x00\x00\x00\xf8\x00\xf8\x00\x00\x00\x00\x00',
  62:b'\x00@ \x10\x08\x08\x10 @\x00\x00\x00',
  63:b'\x00p\x88\x08\x10  \x00 \x00\x00\x00',
  64:b'\x00p\x88\x88\xb8\xb8\xb8\x80x\x00\x00\x00',
  65:b'\x00p\x88\x88\x88\xf8\x88\x88\x88\x00\x00\x00',
  66:b'\x00\xf0\x88\x88\xf0\x88\x88\x88\xf0\x00\x00\x00',
  67:b'\x00x\x80\x80\x80\x80\x80\x80x\x00\x00\x00',
  68:b'\x00\xf0\x88\x88\x88\x88\x88\x88\xf0\x00\x00\x00',
  69:b'\x00x\x80\x80\xf0\x80\x80\x80x\x00\x00\x00',
  70:b'\x00x\x80\x80\xf0\x80\x80\x80\x80\x00\x00\x00',
  71:b'\x00x\x80\x80\xb8\x88\x88\x88x\x00\x00\x00',
  72:b'\x00\x88\x88\x88\xf8\x88\x88\x88\x88\x00\x00\x00',
  73:b'\x00p      p\x00\x00\x00',
  74:b'\x00p      \xc0\x00\x00\x00',
  75:b'\x00\x88\x88\x90\xe0\x90\x88\x88\x88\x00\x00\x00',
  76:b'\x00\x80\x80\x80\x80\x80\x80\x80x\x00\x00\x00',
  77:b'\x00\x88\xd8\xf8\xa8\x88\x88\x88\x88\x00\x00\x00',
  78:b'\x00\x88\xc8\xc8\xa8\xa8\x98\x98\x88\x00\x00\x00',
  79:b'\x00p\x88\x88\x88\x88\x88\x88p\x00\x00\x00',
  80:b'\x00\xf0\x88\x88\x88\xf0\x80\x80\x80\x00\x00\x00',
  81:b'\x00p\x88\x88\x88\x88\x88\x88p\x18\x00\x00',
  82:b'\x00\xf0\x88\x88\x88\xf0\x88\x88\x88\x00\x00\x00',
  83:b'\x00x\x80\x80p\x08\x08\x08\xf0\x00\x00\x00',
  84:b'\x00\xf8       \x00\x00\x00',
  85:b'\x00\x88\x88\x88\x88\x88\x88\x88x\x00\x00\x00',
  86:b'\x00\x88\x88\x88\x88\x88\x88pp\x00\x00\x00',
  87:b'\x00\x88\x88\x88\x88\xa8\xf8\xd8\x88\x00\x00\x00',
  88:b'\x00\x88\x88P P\x88\x88\x88\x00\x00\x00',
  89:b'\x00\x88\x88\x88\x88x\x08\x08\xf0\x00\x00\x00',
  90:b'\x00\xf8\x08\x10 @\x80\x80\xf8\x00\x00\x00',
  91:b'x@@@@@@@@x\x00\x00',
  92:b'\x80\x80@@  \x10\x10\x08\x08\x00\x00',
  93:b'x\x08\x08\x08\x08\x08\x08\x08\x08x\x00\x00',
  94:b'\x00 P\x88\x00\x00\x00\x00\x00\x00\x00\x00',
  95:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x00\x00',
  96:b'\x00@ \x10\x00\x00\x00\x00\x00\x00\x00\x00',
  97:b'\x00\x00\x00p\x08x\x88\x88x\x00\x00\x00',
  98:b'\x00\x80\x80\xf0\x88\x88\x88\x88\xf0\x00\x00\x00',
  99:b'\x00\x00\x00x\x80\x80\x80\x80x\x00\x00\x00',
  100:b'\x00\x08\x08x\x88\x88\x88\x88x\x00\x00\x00',
  101:b'\x00\x00\x00x\x88\x88\xf8\x80x\x00\x00\x00',
  102:b'\x008@@\xf0@@@@\x00\x00\x00',
  103:b'\x00\x00\x00x\x88\x88\x88\x88p\x08\xf0\x00',
  104:b'\x00\x80\x80\xf0\x88\x88\x88\x88\x88\x00\x00\x00',
  105:b'\x00 \x00`    0\x00\x00\x00',
  106:b'\x00\x10\x00\x10\x10\x10\x10\x10\x10`\x00\x00',
  107:b'\x00\x80\x80\x90\xa0\xc0\xa0\x90\x88\x00\x00\x00',
  108:b'\x00@@@@@@@0\x00\x00\x00',
  109:b'\x00\x00\x00\xf0\xa8\xa8\xa8\x88\x88\x00\x00\x00',
  110:b'\x00\x00\x00\xf0\x88\x88\x88\x88\x88\x00\x00\x00',
  111:b'\x00\x00\x00p\x88\x88\x88\x88p\x00\x00\x00',
  112:b'\x00\x00\x00\xf0\x88\x88\x88\x88\xf0\x80\x80\x80',
  113:b'\x00\x00\x00x\x88\x88\x88\x88x\x08\x08\x08',
  114:b'\x00\x00\x00x\x88\x80\x80\x80\x80\x00\x00\x00',
  115:b'\x00\x00\x00x\x80p\x08\x08\xf0\x00\x00\x00',
  116:b'\x00@@\xe0@@@@0\x00\x00\x00',
  117:b'\x00\x00\x00\x88\x88\x88\x88\x88x\x00\x00\x00',
  118:b'\x00\x00\x00\x88\x88\x88\x88P \x00\x00\x00',
  119:b'\x00\x00\x00\x88\x88\xa8\xf8\xd8\x88\x00\x00\x00',
  120:b'\x00\x00\x00\x88\x88pp\x88\x88\x00\x00\x00',
  121:b'\x00\x00\x00\x88\x88\x88\x88\x88x\x08\x08\xf0',
  122:b'\x00\x00\x00\xf8\x08\x10 @\xf8\x00\x00\x00',
  123:b'\x18   \xc0\xc0   \x18\x00\x00',
  124:b'          \x00\x00',
  125:b'`\x10\x10\x10\x0c\x0c\x10\x10\x10`\x00\x00',
  126:b'\x00\x00\x00\x00\x00H\xb0\x00\x00\x00\x00\x00',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 12, 6
