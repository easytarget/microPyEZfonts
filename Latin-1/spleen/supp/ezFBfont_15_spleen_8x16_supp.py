'''
    ezFBfont_15_spleen_8x16_supp : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original spleen_8x16.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: spleen_8x16
# Cmd: ['bdf2dict.py'], ['Latin-1-bdf-sources/spleen-8x16.bdf', '_', './supp-char.set']
# Date: 2024-06-18 20:27:43
'''
    Original Copyright, Comments and Notices from source:

    COPYRIGHT /*
    COPYRIGHT * Spleen 8x16 1.9.1
    COPYRIGHT * Copyright (c) 2018-2022, Frederic Cambus
    COPYRIGHT * https://www.cambus.net/
    COPYRIGHT *
    COPYRIGHT * Created:      2018-08-11
    COPYRIGHT * Last Updated: 2020-10-10
    COPYRIGHT *
    COPYRIGHT * Spleen is released under the BSD 2-Clause license.
    COPYRIGHT * See LICENSE file for details.
    COPYRIGHT *
    COPYRIGHT * SPDX-License-Identifier: BSD-2-Clause
    COPYRIGHT */

    COMMENT "Copyright (c) 2018-2022, Frederic Cambus"
'''
version = '0.33'
name = '-misc-spleen-medium-r-normal--16-160-72-72-c-80-iso10646-1'
family = 'spleen'
weight = 'medium'
size = 16

def height():
    return 15

def baseline():
    return 12

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
  160:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  161:b'\x00\x00\x18\x18\x00\x18\x18\x18\x18\x18\x18\x18\x00\x00\x00',
  162:b'\x00\x00\x00\x00\x08~\xc8\xc8\xc8\xc8\xc8~\x08\x00\x00',
  163:b'\x00\x008l```\xf8``\xc0\xfe\x00\x00\x00',
  164:b'\x00\x00\x00\x00\x00f<fff<f\x00\x00\x00',
  165:b'\x00\x00\xc3\xc3f<\x18<\x18<\x18\x18\x00\x00\x00',
  166:b'\x00\x00\x18\x18\x18\x18\x18\x00\x00\x18\x18\x18\x18\x18\x00',
  167:b'\x00<f`0<ffff<\x0c\x06f<',
  168:b'\x00\x00ll\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  169:b'\x00\x00\x00|\x82\x9a\xa2\xa2\xa2\x9a\x82|\x00\x00\x00',
  170:b'\x008\x0c<L<\x00|\x00\x00\x00\x00\x00\x00\x00',
  171:b'\x00\x00\x00\x00\x00\x003f\xccf3\x00\x00\x00\x00',
  172:b'\x00\x00\x00\x00\x00\x00\xfe\x06\x06\x06\x00\x00\x00\x00\x00',
  173:b'\x00\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00',
  174:b'\x00\x00\x00|\x82\xba\xaa\xb2\xaa\xaa\x82|\x00\x00\x00',
  175:b'\x00|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  176:b'\x008ll8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  177:b'\x00\x00\x00\x00\x00\x18\x18~\x18\x18\x00~\x00\x00\x00',
  178:b'\x008L\x0c8`|\x00\x00\x00\x00\x00\x00\x00\x00',
  179:b'\x00\x1c&\x0c\x06&\x1c\x00\x00\x00\x00\x00\x00\x00\x00',
  180:b'\x00\x0c\x180\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  181:b'\x00\x00\x00\x00\x00\xcc\xcc\xcc\xcc\xcc\xcc\xf6\xc0\xc0\xc0',
  182:b'\x00\x00~\xd6\xd6\xd6v\x16\x16\x16\x16\x16\x00\x00\x00',
  183:b'\x00\x00\x00\x00\x00\x00\x00\x18\x18\x00\x00\x00\x00\x00\x00',
  184:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x180',
  185:b'\x00\x188\x18\x18\x18<\x00\x00\x00\x00\x00\x00\x00\x00',
  186:b'\x008ll8\x00\x00|\x00\x00\x00\x00\x00\x00\x00',
  187:b'\x00\x00\x00\x00\x00\x00\xccf3f\xcc\x00\x00\x00\x00',
  188:b'\x00@\xc0@BF\xec\x180p\xd4\x94\x1e\x04\x04',
  189:b'\x00@\xc0@BF\xec\x180l\xd2\x82\x0c\x10\x1e',
  190:b'\x00`\x90 \x12\x96l\x180p\xd4\x94\x1e\x04\x04',
  191:b'\x00\x00\x18\x18\x00\x18\x180`\xc0\xc6|\x00\x00\x00',
  192:b'0\x18\x00|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\x00\x00\x00',
  193:b'\x180\x00|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\x00\x00\x00',
  194:b'8l\x00|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\x00\x00\x00',
  195:b'2L\x00|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\x00\x00\x00',
  196:b'll\x00|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\x00\x00\x00',
  197:b'8l8|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\x00\x00\x00',
  198:b'\x00\x00~\xd8\xd8\xd8\xfe\xd8\xd8\xd8\xd8\xde\x00\x00\x00',
  199:b'\x00\x00~\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0~\x18\x180',
  200:b'0\x18\x00~\xc0\xc0\xc0\xf8\xc0\xc0\xc0~\x00\x00\x00',
  201:b'\x180\x00~\xc0\xc0\xc0\xf8\xc0\xc0\xc0~\x00\x00\x00',
  202:b'8l\x00~\xc0\xc0\xc0\xf8\xc0\xc0\xc0~\x00\x00\x00',
  203:b'll\x00~\xc0\xc0\xc0\xf8\xc0\xc0\xc0~\x00\x00\x00',
  204:b'0\x18\x00~\x18\x18\x18\x18\x18\x18\x18~\x00\x00\x00',
  205:b'\x0c\x18\x00~\x18\x18\x18\x18\x18\x18\x18~\x00\x00\x00',
  206:b'8l\x00~\x18\x18\x18\x18\x18\x18\x18~\x00\x00\x00',
  207:b'ff\x00~\x18\x18\x18\x18\x18\x18\x18~\x00\x00\x00',
  208:b'\x00\x00|fff\xf6ffff|\x00\x00\x00',
  209:b'2L\x00\xc6\xe6\xe6\xd6\xd6\xce\xce\xc6\xc6\x00\x00\x00',
  210:b'0\x18\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  211:b'\x180\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  212:b'8l\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  213:b'2L\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  214:b'll\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  215:b'\x00\x00\x00\x00\x00\xc6l88l\xc6\x00\x00\x00\x00',
  216:b'\x00\x02|\xc6\xce\xce\xd6\xd6\xe6\xe6\xc6|\x80\x00\x00',
  217:b'0\x18\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  218:b'\x180\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  219:b'8l\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  220:b'll\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  221:b'\x180\x00\xc6\xc6\xc6\xc6~\x06\x06\x06\xfc\x00\x00\x00',
  222:b'\x00\x00\x00\xc0\xc0\xfc\xc6\xc6\xc6\xc6\xc6\xfc\xc0\xc0\x00',
  223:b'\x00\x00x\xcc\xcc\xcc\xd8\xcc\xc6\xc6\xd6\xdc\x00\x00\x00',
  224:b'\x00`0\x18\x00|\x06~\xc6\xc6\xc6~\x00\x00\x00',
  225:b'\x00\x0c\x180\x00|\x06~\xc6\xc6\xc6~\x00\x00\x00',
  226:b'\x00\x108l\x00|\x06~\xc6\xc6\xc6~\x00\x00\x00',
  227:b'\x002~L\x00|\x06~\xc6\xc6\xc6~\x00\x00\x00',
  228:b'\x00\x00ll\x00|\x06~\xc6\xc6\xc6~\x00\x00\x00',
  229:b'\x008l8\x00|\x06~\xc6\xc6\xc6~\x00\x00\x00',
  230:b'\x00\x00\x00\x00\x00n\x16\x16~\xd0\xd0n\x00\x00\x00',
  231:b'\x00\x00\x00\x00\x00~\xc0\xc0\xc0\xc0\xc0~\x18\x180',
  232:b'\x00`0\x18\x00~\xc6\xc6\xfe\xc0\xc0~\x00\x00\x00',
  233:b'\x00\x0c\x180\x00~\xc6\xc6\xfe\xc0\xc0~\x00\x00\x00',
  234:b'\x00\x108l\x00~\xc6\xc6\xfe\xc0\xc0~\x00\x00\x00',
  235:b'\x00\x00ll\x00~\xc6\xc6\xfe\xc0\xc0~\x00\x00\x00',
  236:b'\x000\x18\x0c\x008\x18\x18\x18\x18\x18\x1c\x00\x00\x00',
  237:b'\x00\x0c\x180\x008\x18\x18\x18\x18\x18\x1c\x00\x00\x00',
  238:b'\x00\x18<f\x008\x18\x18\x18\x18\x18\x1c\x00\x00\x00',
  239:b'\x00\x00ff\x008\x18\x18\x18\x18\x18\x1c\x00\x00\x00',
  240:b'\x00\xd8p\xd8\x0c|\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  241:b'\x002~L\x00\xfc\xc6\xc6\xc6\xc6\xc6\xc6\x00\x00\x00',
  242:b'\x00`0\x18\x00|\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  243:b'\x00\x0c\x180\x00|\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  244:b'\x00\x108l\x00|\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  245:b'\x002~L\x00|\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  246:b'\x00\x00ll\x00|\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00',
  247:b'\x00\x00\x00\x00\x18\x18\x00~\x00\x18\x18\x00\x00\x00\x00',
  248:b'\x00\x00\x00\x00\x02|\xc6\xce\xd6\xe6\xc6|\x80\x00\x00',
  249:b'\x00`0\x18\x00\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  250:b'\x00\x0c\x180\x00\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  251:b'\x00\x108l\x00\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  252:b'\x00\x00ll\x00\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00',
  253:b'\x00\x0c\x180\x00\xc6\xc6\xc6\xc6\xc6\xc6~\x06\x06\xfc',
  254:b'\x00\x00\xc0\xc0\xc0\xfc\xc6\xc6\xc6\xc6\xc6\xfc\xc0\xc0\xc0',
  255:b'\x00\x00ll\x00\xc6\xc6\xc6\xc6\xc6\xc6~\x06\x06\xfc',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 15, 8
