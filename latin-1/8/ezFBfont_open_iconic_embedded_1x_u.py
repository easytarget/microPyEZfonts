'''
    ezFBfont_open_iconic_embedded_1x_u : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_embedded_1x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: open_iconic_embedded_1x Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'
# Cmd: ['bdf2dict.py', 'bdf-sources/open_iconic_embedded_1x.bdf', '../latin-1/u-char.set']
# Date: 2024-06-04 14:21:14

version = '0.33'
name = '"open_iconic_embedded_1x"'
family = 'None'
weight = 'None'
size = None

def height():
    return 8

def baseline():
    return 8

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 64

def max_ch():
    return 80

_g = {
 64:[b'\x00\xfe\x82\x83\x83\x82\xfe\x00'],
 65:[b'\x18<<<~\xff\x00\x18'],
 66:[b'\x18~~\xe7\xe7~~\x18'],
 67:[b'\x18\x10<\x08\x0880\x00'],
 68:[b'\x18<~~~ff\x00'],
 69:[b'\x00\x02\x00\x188p\xe0\xc0'],
 70:[b'\x00\x100<\xefh\x00\x00'],
 71:[b'\x1088hl|\xee\xfe'],
 72:[b'\x08\x18\x18\x1f>p\xe0\xc0'],
 73:[b'\x00\xfe\xfe\xff\xff\xfe\xfe\x00'],
 74:[b'\x10\x18d88d\x18\x10'],
 75:[b'<r\xf1\xf1\xf1\xf1r<'],
 76:[b'\xfe\xfe\xfe\xfe\x00\xfe\xfa\xfe'],
 77:[b'\x18p\x1cp\x1c8\x00\x10'],
 78:[b'\x10\x10T\x92\x82\x82D8'],
 79:[b'<C\x87\x80\x80\x80@<'],
 80:[b'|\x82\x008\x00\x00\x18\x18'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

