'''
    ezFBfont_font_tiny5_r : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original font_tiny5.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(CC) Gissio 2022-2023 Creative Commons Zero v1.0 Universal"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT Exported by Fony v1.4.7
'''
# Code generated by bdf2dict.py
# Font: font_tiny5 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
# Cmd: ['bdf2dict.py', 'bdf-sources/font_tiny5.bdf', '../latin-1/r-char.set']
# Date: 2024-06-04 14:20:56

version = '0.33'
name = 'font_tiny5'
family = 'None'
weight = 'None'
size = None

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 33

def max_ch():
    return 126

_g = {
 33:[b'\x80\x80\x80\x00\x80\x00',2],
 34:[b'\xa0\xa0\x00\x00\x00\x00',4],
 35:[b'P\xf8P\xf8P\x00',6],
 36:[b'@`\xc0 \xc0@',4],
 37:[b'\x90 @\x90\x00\x00',5],
 38:[b'@\xa0@\xa0P\x00',5],
 39:[b'\x80\x80\x00\x00\x00\x00',2],
 40:[b'@\x80\x80\x80@\x00',3],
 41:[b'\x80@@@\x80\x00',3],
 42:[b'@\xe0@\xa0\x00\x00',4],
 43:[b'\x00@\xe0@\x00\x00',4],
 44:[b'\x00\x00\x00\x00@\x80',3],
 45:[b'\x00\x00\xe0\x00\x00\x00',4],
 46:[b'\x00\x00\x00\x00\x80\x00',2],
 47:[b'@@\x80\x80\x80\x00',3],
 48:[b'@\xa0\xa0\xa0@\x00',4],
 49:[b'@\xc0@@@\x00',4],
 50:[b'\xc0 @\x80\xe0\x00',4],
 51:[b'\xc0 @ \xc0\x00',4],
 52:[b' `\xa0\xe0 \x00',4],
 53:[b'\xe0\x80\xc0 \xc0\x00',4],
 54:[b'`\x80\xc0\xa0@\x00',4],
 55:[b'\xe0 @@@\x00',4],
 56:[b'@\xa0@\xa0@\x00',4],
 57:[b'@\xa0` \xc0\x00',4],
 58:[b'\x00\x80\x00\x00\x80\x00',2],
 59:[b'\x00@\x00\x00@\x80',3],
 60:[b' @\x80@ \x00',4],
 61:[b'\x00\xe0\x00\xe0\x00\x00',4],
 62:[b'\x80@ @\x80\x00',4],
 63:[b'\xc0 @\x00@\x00',4],
 64:[b'`\x90\xb0\x80`\x00',5],
 65:[b'`\x90\xf0\x90\x90\x00',5],
 66:[b'\xe0\x90\xe0\x90\xe0\x00',5],
 67:[b'`\x90\x80\x90`\x00',5],
 68:[b'\xe0\x90\x90\x90\xe0\x00',5],
 69:[b'\xf0\x80\xe0\x80\xf0\x00',5],
 70:[b'\xf0\x80\xe0\x80\x80\x00',5],
 71:[b'p\x80\xb0\x90p\x00',5],
 72:[b'\x90\x90\xf0\x90\x90\x00',5],
 73:[b'\x80\x80\x80\x80\x80\x00',2],
 74:[b'   \xa0@\x00',4],
 75:[b'\x90\xa0\xc0\xa0\x90\x00',5],
 76:[b'\x80\x80\x80\x80\xe0\x00',4],
 77:[b'\x88\xd8\xa8\x88\x88\x00',6],
 78:[b'\x90\xd0\xb0\x90\x90\x00',5],
 79:[b'`\x90\x90\x90`\x00',5],
 80:[b'\xe0\x90\xe0\x80\x80\x00',5],
 81:[b'`\x90\x90\xa0P\x00',5],
 82:[b'\xe0\x90\xe0\x90\x90\x00',5],
 83:[b'p\x80`\x10\xe0\x00',5],
 84:[b'\xe0@@@@\x00',4],
 85:[b'\x90\x90\x90\x90`\x00',5],
 86:[b'\xa0\xa0\xa0@@\x00',4],
 87:[b'\xa8\xa8\xa8PP\x00',6],
 88:[b'\xa0\xa0@\xa0\xa0\x00',4],
 89:[b'\xa0\xa0@@@\x00',4],
 90:[b'\xe0 @\x80\xe0\x00',4],
 91:[b'\xc0\x80\x80\x80\xc0\x00',3],
 92:[b'\x80\x80@@@\x00',3],
 93:[b'\xc0@@@\xc0\x00',3],
 94:[b'@\xa0\x00\x00\x00\x00',4],
 95:[b'\x00\x00\x00\x00\xe0\x00',4],
 96:[b'\x80@\x00\x00\x00\x00',3],
 97:[b'\x00`\xa0\xa0`\x00',4],
 98:[b'\x80\xc0\xa0\xa0\xc0\x00',4],
 99:[b'\x00`\x80\x80`\x00',4],
 100:[b' `\xa0\xa0`\x00',4],
 101:[b'\x00@\xe0\x80`\x00',4],
 102:[b'@\x80\xc0\x80\x80\x00',3],
 103:[b'\x00`\xa0\xa0`\xc0',4],
 104:[b'\x80\xc0\xa0\xa0\xa0\x00',4],
 105:[b'\x00\x80\x80\x80\x80\x00',2],
 106:[b'\x00\x80\x80\x80\x80\x80',2],
 107:[b'\x80\xa0\xc0\xa0\xa0\x00',4],
 108:[b'\x80\x80\x80\x80\x80\x00',2],
 109:[b'\x00\xf0\xa8\xa8\xa8\x00',6],
 110:[b'\x00\xc0\xa0\xa0\xa0\x00',4],
 111:[b'\x00@\xa0\xa0@\x00',4],
 112:[b'\x00\xc0\xa0\xa0\xc0\x80',4],
 113:[b'\x00`\xa0\xa0` ',4],
 114:[b'\x00\xc0\x80\x80\x80\x00',3],
 115:[b'\x00`\xc0 \xc0\x00',4],
 116:[b'\x80\xc0\x80\x80@\x00',3],
 117:[b'\x00\xa0\xa0\xa0`\x00',4],
 118:[b'\x00\xa0\xa0\xa0@\x00',4],
 119:[b'\x00\xa8\xa8\xa8P\x00',6],
 120:[b'\x00\xa0@@\xa0\x00',4],
 121:[b'\x00\xa0\xa0\xa0@\x80',4],
 122:[b'\x00\xe0@\x80\xe0\x00',4],
 123:[b'`@\x80@`\x00',4],
 124:[b'\x80\x80\x80\x80\x80\x00',2],
 125:[b'\xc0@ @\xc0\x00',4],
 126:[b'\x00\x00P\xa0\x00\x00',5],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), _g[c][1]

