'''
    ezFBfont_etl14_thai_t : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original etl14-thai.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT 94.8.25 7-bit part (ASCII) taken from etl14-latin1.bdf
    COMMENT         8-bit part (Thai) created by Manop Wongsaisuwan
    COMMENT 2000/04/18 some glyphs modified by Theppitak Karoonboonyanan
'''
# Code generated by bdf2dict.py
# Font: etl14-thai Char set: b' +-.0123456789:'
# Cmd: ['bdf2dict.py', 'bdf-sources/etl14-thai.bdf', '../latin-1/t-char.set']
# Date: 2024-06-04 14:20:55

version = '0.33'
name = '-etl-fixed-medium-r-normal--14-140-72-72-m-70-tis620-0'
family = 'fixed'
weight = 'medium'
size = 14

def height():
    return 9

def baseline():
    return 9

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 43

def max_ch():
    return 58

_g = {
 43:[b'\x00\x10\x10\x10|\x10\x10\x10\x00'],
 45:[b'\x00\x00\x00\x00|\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x0000'],
 48:[b'0H\x84\x84\x84\x84\x84H0'],
 49:[b'\x100P\x10\x10\x10\x10\x10|'],
 50:[b'x\x84\x84\x04\x18 @\x80\xfc'],
 51:[b'x\x84\x84\x048\x04\x84\x84x'],
 52:[b'\x08\x18((H\x88\xfc\x08\x08'],
 53:[b'\xfc\x80\x80\xf8\x04\x04\x04\x84x'],
 54:[b'x\x84\x80\x80\xf8\x84\x84\x84x'],
 55:[b'\xfc\x04\x08\x08\x10\x10   '],
 56:[b'x\x84\x84\x84x\x84\x84\x84x'],
 57:[b'x\x84\x84\x84|\x04\x84\x84x'],
 58:[b'\x00\x0000\x00\x00\x0000'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

