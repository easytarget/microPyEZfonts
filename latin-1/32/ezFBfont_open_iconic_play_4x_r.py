'''
    ezFBfont_open_iconic_play_4x_r : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_play_4x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: open_iconic_play_4x Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
# Cmd: ['bdf2dict.py', 'bdf-sources/open_iconic_play_4x.bdf', '../latin-1/r-char.set']
# Date: 2024-06-04 14:21:19

version = '0.33'
name = '"open_iconic_play_4x"'
family = 'None'
weight = 'None'
size = None

def height():
    return 32

def baseline():
    return 32

def max_width():
    return 32

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 64

def max_ch():
    return 81

_g = {
 64:[b'\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\xf0\xf0\x00\x00\xf0\xf0\x00\x00\xf0\xf0\x00\x00\xf0\xf0\x00\x00\xf0\xf0\xf0\x00\xf0\xf0\xf0\x00\xf0\xf0\xf0\x00\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\x00\xf0\xf0\xf0\x00\xf0\xf0\xf0\x00\xf0\xf0\xf0\x00\xf0\xf0\xf0\x00\xf0\xf0\x00\x00\xf0\xf0\x00\x00\xf0\xf0\x00\x00\xf0\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00'],
 65:[b'\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x10\xf0\x00\x00p\xf0\x00\x01\xf0\xf0\x00\x07\xf0\xf0\x00\x1f\xf0\xf0\x00\x7f\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\xff\xff\xf0\xf0\x0f\xff\xf0\xf0\x07\x9f\xf0\xf0\x07\x87\xf0\xf0\x07\xc1\xf0\xf0\x03\xc0p\xf0\x03\xc0\x10\xf0\x03\xe0\x00\xf0\x01\xe0\x00\xf0\x01\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 66:[b'\x00\x00\x00\x00\x00\x01\x80\x00\x00\x03\xc0\x00\x00\x07\xe0\x00\x00\x0f\xf0\x00\x00\x0f\xf0\x00\x00\x1f\xf8\x00\x00?\xfc\x00\x00\x7f\xfe\x00\x00\xff\xff\x00\x00\xff\xff\x00\x01\xff\xff\x80\x03\xff\xff\xc0\x07\xff\xff\xe0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x1f\xff\xff\xf8?\xff\xff\xfc\x7f\xff\xff\xfe\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'],
 67:[b'\x00\x07\xe0\x00\x00?\xfc\x00\x00\x7f\xfe\x00\x00\xff\xff\x00\x01\xf8\x1f\x80\x03\xe0\x07\xc0\x07\xc0\x03\xe0\x07\x80\x01\xe0\x07\x80\x01\xe0\x0f\x00\x00\xf0\x0f\x00\x00\xf0\x0f\x00\x00\xf0\x0f\x00\x00\xf0\x0f\x00\x00\xf0\x0f\x00\x00\xf0\x0f\x00\x00\xf0\x7f\x00\x00\xfe\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff~\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 68:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 69:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x0e\x00\x00\x00\x0f\x80\x00\x00\x0f\xe0\x00\x00\x0f\xf8\x00\x00\x0f\xfe\x00\x00\x0f\xff\x80\x00\x0f\xff\xe0\x00\x0f\xff\xf8\x00\x0f\xff\xfe\x00\x0f\xff\xff\x80\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x0f\xff\xff\x80\x0f\xff\xfe\x00\x0f\xff\xf8\x00\x0f\xff\xe0\x00\x0f\xff\x80\x00\x0f\xfe\x00\x00\x0f\xf8\x00\x00\x0f\xe0\x00\x00\x0f\x80\x00\x00\x0e\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 70:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xe0\x00\x00?\xfc\x00\x00\x7f\xfe\x00\x00\xff\xff\x00\x01\xff\xff\x80\x03\xff\xff\xc0\x07\xff\xff\xe0\x07\xff\xff\xe0\x07\xff\xff\xe0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x07\xff\xff\xe0\x07\xff\xff\xe0\x07\xff\xff\xe0\x03\xff\xff\xc0\x01\xff\xff\x80\x00\xff\xff\x00\x00\x7f\xfe\x00\x00?\xfc\x00\x00\x07\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 71:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x03\x00\x03\x00\x07\x00\x07\x00\x1f\x00\x1f\x00?\x00?\x00\x7f\x00\x7f\x01\xff\x01\xff\x03\xff\x03\xff\x07\xff\x07\xff\x1f\xff\x1f\xff?\xff?\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff?\xff?\xff\x1f\xff\x1f\xff\x07\xff\x07\xff\x03\xff\x03\xff\x01\xff\x01\xff\x00\x7f\x00\x7f\x00?\x00?\x00\x1f\x00\x1f\x00\x07\x00\x07\x00\x03\x00\x03\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 72:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x80\x00\xc0\x00\xc0\x00\xe0\x00\xe0\x00\xf8\x00\xf8\x00\xfc\x00\xfc\x00\xfe\x00\xfe\x00\xff\x80\xff\x80\xff\xc0\xff\xc0\xff\xe0\xff\xe0\xff\xf8\xff\xf8\xff\xfc\xff\xfc\xff\xfe\xff\xfe\xff\xfe\xff\xfe\xff\xfc\xff\xfc\xff\xf8\xff\xf8\xff\xe0\xff\xe0\xff\xc0\xff\xc0\xff\x80\xff\x80\xfe\x00\xfe\x00\xfc\x00\xfc\x00\xf8\x00\xf8\x00\xe0\x00\xe0\x00\xc0\x00\xc0\x00\x80\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 73:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x00\x10\xff\x00\x000\xff\x00\x00\xf0\xff\x00\x03\xf0\xff\x00\x07\xf0\xff\x00\x1f\xf0\xff\x00\x7f\xf0\xff\x00\xff\xf0\xff\x03\xff\xf0\xff\x0f\xff\xf0\xff\x1f\xff\xf0\xff\x7f\xff\xf0\xff\x7f\xff\xf0\xff\x1f\xff\xf0\xff\x0f\xff\xf0\xff\x03\xff\xf0\xff\x00\xff\xf0\xff\x00\x7f\xf0\xff\x00\x1f\xf0\xff\x00\x07\xf0\xff\x00\x03\xf0\xff\x00\x00\xf0\xff\x00\x000\xff\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 74:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x0f\xf0\xc0\x00\x0f\xf0\xf0\x00\x0f\xf0\xfc\x00\x0f\xf0\xfe\x00\x0f\xf0\xff\x80\x0f\xf0\xff\xe0\x0f\xf0\xff\xf0\x0f\xf0\xff\xfc\x0f\xf0\xff\xff\x0f\xf0\xff\xff\x8f\xf0\xff\xff\xef\xf0\xff\xff\xef\xf0\xff\xff\x8f\xf0\xff\xff\x0f\xf0\xff\xfc\x0f\xf0\xff\xf0\x0f\xf0\xff\xe0\x0f\xf0\xff\x80\x0f\xf0\xfe\x00\x0f\xf0\xfc\x00\x0f\xf0\xf0\x00\x0f\xf0\xc0\x00\x0f\xf0\x80\x00\x0f\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 75:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x0f\xff\xff\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 76:[b'\x00\x03\xc0\x00\x00\x07\xe0\x00\x00\x0f\xf0\x00\x00\x0f\xf0\x00\x00\x0f\xf0\x00\x00\x0f\xf0\x00\x00\x0f\xf0\x00\x00\x0f\xf0\x00\x06\x0f\xf0`\x0f\x0f\xf0\xf0\x0f\x0f\xf0\xf0\x0f\x0f\xf0\xf0\x0f\x0f\xf0\xf0\x0f\x0f\xf0\xf0\x0f\x07\xe0\xf0\x07\x83\xc1\xf0\x07\x80\x01\xe0\x07\xc0\x03\xe0\x03\xe0\x07\xc0\x01\xf8\x1f\x80\x00\xff\xff\x00\x00\x7f\xfe\x00\x00?\xfc\x00\x00\x07\xe0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00?\xfc\x00\x00\x7f\xfe\x00\x00\xff\xff\x00\x00\xff\xff\x00'],
 77:[b'\x00\x00\x07\xff\x00\x01\xff\xff\x00\x1f\xff\xff\x00\x7f\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xf8\x0f\x00\xfc\x00\x0f\x00\xf0\x00\x0f\x00\xf0\x00\x0f\x00\xf0\x00\x0f\x00\xf0\x00\x0f\x00\xf0\x00\x0f\x00\xf0\x00\x0f\x00\xf0\x00\xff\x00\xf0\x03\xff\x00\xf0\x07\xff\x00\xf0\x07\xff\x0f\xf0\x0f\xff?\xf0\x0f\xff\x7f\xf0\x0f\xff\x7f\xf0\x0f\xff\xff\xf0\x07\xfe\xff\xf0\x07\xfe\xff\xf0\x03\xfc\xff\xf0\x00\xf0\x7f\xe0\x00\x00\x7f\xe0\x00\x00?\xc0\x00\x00\x0f\x00\x00\x00'],
 78:[b'\x00\x0f\xf0\x00\x00\x7f\xfe\x00\x01\xff\xff\x80\x03\xff\xff\xc0\x07\xff\xff\xe0\x0f\xff\xff\xf0\x1f\xff\xff\xf8?\xff\xff\xfc?\xf7\xff\xfc\x7f\xf3\xff\xfe\x7f\xf0\xff\xfe\x7f\xf0\x7f\xfe\xff\xf0\x1f\xff\xff\xf0\x0f\xff\xff\xf0\x03\xff\xff\xf0\x01\xff\xff\xf0\x01\xff\xff\xf0\x03\xff\xff\xf0\x0f\xff\xff\xf0\x1f\xff\x7f\xf0\x7f\xfe\x7f\xf0\xff\xfe\x7f\xf3\xff\xfe?\xf7\xff\xfc?\xff\xff\xfc\x1f\xff\xff\xf8\x0f\xff\xff\xf0\x07\xff\xff\xe0\x03\xff\xff\xc0\x01\xff\xff\x80\x00\x7f\xfe\x00\x00\x0f\xf0\x00'],
 79:[b'\x00\x07\x00\x00\x00\x0f\x00\x00\x00\x0f\x00\x00\x00\x1f\x00\x00\x00?\x0e\x00\x00?\x0f\xc0\x00\x7f\x0f\xe0\x00\xff\x0f\xf0\xff\xff\x01\xf8\xff\xff\x00|\xff\xff\x00>\xff\xff\x00\x1e\xff\xff\x0c\x1e\xff\xff\x0e\x0f\xff\xff\x0f\x0f\xff\xff\x0f\x0f\xff\xff\x0f\x0f\xff\xff\x0f\x0f\xff\xff\x0e\x0f\xff\xff\x0c\x1e\xff\xff\x00\x1e\xff\xff\x00>\xff\xff\x00|\xff\xff\x01\xf8\x00\xff\x0f\xf0\x00\x7f\x0f\xe0\x00?\x0f\xc0\x00?\x0e\x00\x00\x1f\x00\x00\x00\x0f\x00\x00\x00\x0f\x00\x00\x00\x07\x00\x00'],
 80:[b'\x00\x00p\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x01\xf0\x00\x00\x03\xf0\x00\x00\x03\xf0\x00\x00\x07\xf0\x00\x00\x0f\xf0\x00\x0f\xff\xf0\x00\x0f\xff\xf0\x00\x0f\xff\xf0\x00\x0f\xff\xf0\x00\x0f\xff\xf0\xc0\x0f\xff\xf0\xe0\x0f\xff\xf0\xf0\x0f\xff\xf0\xf0\x0f\xff\xf0\xf0\x0f\xff\xf0\xf0\x0f\xff\xf0\xe0\x0f\xff\xf0\xc0\x0f\xff\xf0\x00\x0f\xff\xf0\x00\x0f\xff\xf0\x00\x0f\xff\xf0\x00\x00\x0f\xf0\x00\x00\x07\xf0\x00\x00\x03\xf0\x00\x00\x03\xf0\x00\x00\x01\xf0\x00\x00\x00\xf0\x00\x00\x00\xf0\x00\x00\x00p\x00'],
 81:[b'\x00\x00\x07\x00\x00\x00\x0f\x00\x00\x00\x0f\x00\x00\x00\x1f\x00\x00\x00?\x00\x00\x00?\x00\x00\x00\x7f\x00\x00\x00\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\x00\xff\x00\x00\x00\x7f\x00\x00\x00?\x00\x00\x00?\x00\x00\x00\x1f\x00\x00\x00\x0f\x00\x00\x00\x0f\x00\x00\x00\x07\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

