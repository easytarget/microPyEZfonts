'''
    ezFBfont_b12_b_s : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original b12_b.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(c) Copyright 2000-2003 /efont/ The Electronic Font Open Laboratory."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: b12_b Char set: b'\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'
# Cmd: ['bdf2dict.py', 'bdf-sources/b12_b.bdf', '../latin-1/s-char.set']
# Date: 2024-06-04 14:20:15

version = '0.33'
name = '-Efont-Biwidth-Bold-R-Normal--12-120-75-75-P-60-ISO10646-1'
family = 'Biwidth'
weight = 'Bold'
size = 12

def height():
    return 12

def baseline():
    return 10

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
 160:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 161:[b'\x00\x00\x000\x0000000\x00\x00'],
 162:[b'\x00\x00\x00\x000x\xd4\xd0\xd4x0\x00'],
 163:[b'\x00\x00\x008l`\xf0`l\xd8\x00\x00'],
 164:[b'\x00\x00\x00\x00\x00\xd4h\xcch\xd4\x00\x00'],
 165:[b'\x00\x00\x00\xcch\xfc0\xfc00\x00\x00'],
 166:[b'\x00\x00\x00000\x00000\x00\x00'],
 167:[b'\x00p\xd8\xc0p\xd8\xd8p\x18\xd8p\x00'],
 168:[b'\x00\x00h\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 169:[b'\x00\x00\x00\xf8\x8c\xb4\xac\xb4\x8c\xf8\x00\x00'],
 170:[b'\x008h8\x00x\x00\x00\x00\x00\x00\x00'],
 171:[b'\x00\x00\x00\x00\x004h\xd0h4\x00\x00'],
 172:[b'\x00\x00\x00\x00\x00\x00\xfc\x0c\x0c\x00\x00\x00'],
 173:[b'\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00'],
 174:[b'\x00\x00\x00\xf8\x8c\xb4\xac\xac\x8c\xf8\x00\x00'],
 175:[b'\x00\x00\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 176:[b'\x008ll8\x00\x00\x00\x00\x00\x00\x00'],
 177:[b'\x00\x00\x0000\xfc00\x00\xfc\x00\x00'],
 178:[b'0h\x180x\x00\x00\x00\x00\x00\x00\x00'],
 179:[b'p\x180\x18p\x00\x00\x00\x00\x00\x00\x00'],
 180:[b'\x00\x00\x180`\x00\x00\x00\x00\x00\x00\x00'],
 181:[b'\x00\x00\x00\x00\x00\xcc\xcc\xcc\xdc\xf4\xc0\xc0'],
 182:[b'\x00\x00|\xf4\xf4\xf4t444\x00\x00'],
 183:[b'\x00\x00\x00\x00\x0088\x00\x00\x00\x00\x00'],
 184:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18p'],
 185:[b'0p00x\x00\x00\x00\x00\x00\x00\x00'],
 186:[b'0h0\x00x\x00\x00\x00\x00\x00\x00\x00'],
 187:[b'\x00\x00\x00\x00\x00\xd0h4h\xd0\x00\x00'],
 188:[b'`\xe0``h8h|\x18\x18\x00\x00'],
 189:[b'`\xe0``h4\x0c\x180<\x00\x00'],
 190:[b'\xe00`0\xe88h|\x18\x18\x00\x00'],
 191:[b'\x00\x00\x000\x0000`\xccx\x00\x00'],
 192:[b'`0\x00x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 193:[b'\x180\x00x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 194:[b'0h\x00x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 195:[b't\xd8\x00x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 196:[b'\x00h\x00x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 197:[b'0h0x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 198:[b'\x00\x00\x00|\xd0\xd0\xf8\xd0\xd0\xdc\x00\x00'],
 199:[b'\x00\x00\x00x\xcc\xc0\xc0\xc0\xccx\x18p'],
 200:[b'`0\x00\xfc\xc0\xc0\xf8\xc0\xc0\xfc\x00\x00'],
 201:[b'\x180\x00\xfc\xc0\xc0\xf8\xc0\xc0\xfc\x00\x00'],
 202:[b'0h\x00\xfc\xc0\xc0\xf8\xc0\xc0\xfc\x00\x00'],
 203:[b'\x00h\x00\xfc\xc0\xc0\xf8\xc0\xc0\xfc\x00\x00'],
 204:[b'`0\x00x00000x\x00\x00'],
 205:[b'\x180\x00x00000x\x00\x00'],
 206:[b'0h\x00x00000x\x00\x00'],
 207:[b'\x00h\x00x00000x\x00\x00'],
 208:[b'\x00\x00\x00xll\xf4llx\x00\x00'],
 209:[b't\xd8\x00\xcc\xcc\xec\xd4\xdc\xcc\xcc\x00\x00'],
 210:[b'`0\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 211:[b'\x180\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 212:[b'0h\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 213:[b't\xd8\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 214:[b'\x00h\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 215:[b'\x00\x00\x00\x00\xcch0h\xcc\x00\x00\x00'],
 216:[b'\x00\x00\x0cx\xdc\xd4\xd4\xd4\xecx\xc0\x00'],
 217:[b'`0\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 218:[b'\x180\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 219:[b'0h\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 220:[b'\x00h\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 221:[b'\x180\x00\xcc\xcch0000\x00\x00'],
 222:[b'\x00\x00\x00`xlllx`\x00\x00'],
 223:[b'\x00\x00\x00x\xcc\xd8\xd0\xd8\xcc\xd8\x00\x00'],
 224:[b'\x00\x00`0\x00x\x0c|\xcc|\x00\x00'],
 225:[b'\x00\x00\x180\x00x\x0c|\xcc|\x00\x00'],
 226:[b'\x00\x000h\x00x\x0c|\xcc|\x00\x00'],
 227:[b'\x00\x00t\xd8\x00x\x0c|\xcc|\x00\x00'],
 228:[b'\x00\x00\x00h\x00x\x0c|\xcc|\x00\x00'],
 229:[b'\x00\x000h0x\x0c|\xcc|\x00\x00'],
 230:[b'\x00\x00\x00\x00\x00x4x\xd0|\x00\x00'],
 231:[b'\x00\x00\x00\x00\x00x\xcc\xc0\xccx\x18p'],
 232:[b'\x00\x00`0\x00x\xcc\xf8\xc0x\x00\x00'],
 233:[b'\x00\x00\x180\x00x\xcc\xf8\xc0x\x00\x00'],
 234:[b'\x00\x000h\x00x\xcc\xf8\xc0x\x00\x00'],
 235:[b'\x00\x00\x00h\x00x\xcc\xf8\xc0x\x00\x00'],
 236:[b'\x00\x00`0\x00p000x\x00\x00'],
 237:[b'\x00\x00\x180\x00p000x\x00\x00'],
 238:[b'\x00\x000h\x00p000x\x00\x00'],
 239:[b'\x00\x00\x00h\x00p000x\x00\x00'],
 240:[b'\x00h0h\x0c|\xcc\xcc\xccx\x00\x00'],
 241:[b'\x00\x00t\xd8\x00\xd8\xec\xcc\xcc\xcc\x00\x00'],
 242:[b'\x00\x00`0\x00x\xcc\xcc\xccx\x00\x00'],
 243:[b'\x00\x00\x180\x00x\xcc\xcc\xccx\x00\x00'],
 244:[b'\x00\x000h\x00x\xcc\xcc\xccx\x00\x00'],
 245:[b'\x00\x00t\xd8\x00x\xcc\xcc\xccx\x00\x00'],
 246:[b'\x00\x00\x00h\x00x\xcc\xcc\xccx\x00\x00'],
 247:[b'\x00\x00\x00\x000\x00\xfc\x000\x00\x00\x00'],
 248:[b'\x00\x00\x00\x00\x00|\xdc\xd4\xec\xf8\x00\x00'],
 249:[b'\x00\x00`0\x00\xcc\xcc\xcc\xccx\x00\x00'],
 250:[b'\x00\x00\x180\x00\xcc\xcc\xcc\xccx\x00\x00'],
 251:[b'\x00\x000h\x00\xcc\xcc\xcc\xccx\x00\x00'],
 252:[b'\x00\x00\x00h\x00\xcc\xcc\xcc\xccx\x00\x00'],
 253:[b'\x00\x00\x180\x00\xcc\xcc\xcch0`\xc0'],
 254:[b'\x00\x00\x00\xc0\xc0\xf8\xcc\xcc\xcc\xf8\xc0\xc0'],
 255:[b'\x00\x00\x00h\x00\xcc\xcc\xcch0`\xc0'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

