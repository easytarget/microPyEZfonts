'''
    ezFBfont_b16_s : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original b16.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(c) Copyright 2000-2003 /efont/ The Electronic Font Open Laboratory."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: b16 Char set: b'\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'
# Cmd: ['bdf2dict.py', 'bdf-sources/b16.bdf', '../latin-1/s-char.set']
# Date: 2024-06-04 14:20:39

version = '0.33'
name = '-Efont-Biwidth-Medium-R-Normal--16-160-75-75-P-80-ISO10646-1'
family = 'Biwidth'
weight = 'Medium'
size = 16

def height():
    return 16

def baseline():
    return 14

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 160

def max_ch():
    return 255

_g = {
 160:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 161:[b'\x00\x00\x00\x00\x08\x08\x00\x08\x08\x08\x08\x08\x08\x08\x00\x00'],
 162:[b'\x00\x00\x00\x00\x08\x08>IHHI>\x08\x08\x00\x00'],
 163:[b'\x00\x00\x00\x00\x0e\x10\x10\x10|\x10\x10\x10>a\x00\x00'],
 164:[b'\x00\x00\x00\x00\x00B$<$$<$B\x00\x00\x00'],
 165:[b'\x00\x00\x00\x00A"\x14\x08\x7f\x08\x7f\x08\x08\x08\x00\x00'],
 166:[b'\x00\x00\x00\x00\x08\x08\x08\x08\x00\x00\x08\x08\x08\x08\x00\x00'],
 167:[b'\x00\x00\x00\x00<B@<BB<\x02B<\x00\x00'],
 168:[b'$$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 169:[b'\x00\x00\x00\x00<BZfbbfZB<\x00\x00'],
 170:[b'\x00\x00\x1c\x02\x1e"\x1e\x00>\x00\x00\x00\x00\x00\x00\x00'],
 171:[b'\x00\x00\x00\x00\x00\x12\x12$$H$$\x12\x12\x00\x00'],
 172:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00~\x02\x02\x02\x00\x00'],
 173:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00'],
 174:[b'\x00\x00\x00\x00<BzffzjfB<\x00\x00'],
 175:[b'\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 176:[b'\x10((\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 177:[b'\x00\x00\x00\x00\x08\x08\x08\x7f\x08\x08\x08\x00\x7f\x00\x00\x00'],
 178:[b'\x00\x00\x1c"\x02\x1c  >\x00\x00\x00\x00\x00\x00\x00'],
 179:[b'\x00\x00\x1c"\x02\x1c\x02"\x1c\x00\x00\x00\x00\x00\x00\x00'],
 180:[b'\x0c0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 181:[b'\x00\x00\x00\x00\x00\x00\x00\x00""""6*  '],
 182:[b'\x00\x00\x00>zzzz:\n\n\n\n\n\x0e\x00'],
 183:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x18\x18\x00\x00\x00\x00\x00\x00'],
 184:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x080'],
 185:[b'\x00\x00\x08\x18(\x08\x08\x08\x08\x00\x00\x00\x00\x00\x00\x00'],
 186:[b'\x00\x00\x1c"""\x1c\x00>\x00\x00\x00\x00\x00\x00\x00'],
 187:[b'\x00\x00\x00\x00\x00HH$$\x12$$HH\x00\x00'],
 188:[b'\x00\x00\x00\x00"b$((\x12\x16*NB\x00\x00'],
 189:[b'\x00\x00\x00\x00"b$((\x14\x1a"DN\x00\x00'],
 190:[b'\x00\x00\x00\x00b\x12$\x18h\x12\x16*NB\x00\x00'],
 191:[b'\x00\x00\x00\x00\x08\x08\x00\x08\x080BBB<\x00\x00'],
 192:[b'0\x0c\x00\x00\x18$$BB~BBBB\x00\x00'],
 193:[b'\x0c0\x00\x00\x18$$BB~BBBB\x00\x00'],
 194:[b'\x18$\x00\x00\x18$$BB~BBBB\x00\x00'],
 195:[b'2L\x00\x00\x18$$BB~BBBB\x00\x00'],
 196:[b'$$\x00\x00\x18$$BB~BBBB\x00\x00'],
 197:[b'\x18$\x18\x00\x18$$BB~BBBB\x00\x00'],
 198:[b'\x00\x00\x00\x00\x1f(HH\x7fHHHHO\x00\x00'],
 199:[b'\x00\x00\x00\x00<BB@@@@BB<\x080'],
 200:[b'0\x0c\x00\x00~@@@|@@@@~\x00\x00'],
 201:[b'\x0c0\x00\x00~@@@|@@@@~\x00\x00'],
 202:[b'\x18$\x00\x00~@@@|@@@@~\x00\x00'],
 203:[b'$$\x00\x00~@@@|@@@@~\x00\x00'],
 204:[b'\x18\x06\x00\x00>\x08\x08\x08\x08\x08\x08\x08\x08>\x00\x00'],
 205:[b'\x0c0\x00\x00>\x08\x08\x08\x08\x08\x08\x08\x08>\x00\x00'],
 206:[b'\x18$\x00\x00>\x08\x08\x08\x08\x08\x08\x08\x08>\x00\x00'],
 207:[b'$$\x00\x00>\x08\x08\x08\x08\x08\x08\x08\x08>\x00\x00'],
 208:[b'\x00\x00\x00\x00xDBB\xf2BBBDx\x00\x00'],
 209:[b'2L\x00\x00BbbRRJJFFB\x00\x00'],
 210:[b'0\x0c\x00\x00<BBBBBBBB<\x00\x00'],
 211:[b'\x0c0\x00\x00<BBBBBBBB<\x00\x00'],
 212:[b'\x18$\x00\x00<BBBBBBBB<\x00\x00'],
 213:[b'2L\x00\x00<BBBBBBBB<\x00\x00'],
 214:[b'$$\x00\x00<BBBBBBBB<\x00\x00'],
 215:[b'\x00\x00\x00\x00\x00\x00A"\x14\x08\x14"A\x00\x00\x00'],
 216:[b'\x00\x00\x00\x02:DFJJRRb"\\@\x00'],
 217:[b'0\x0c\x00\x00BBBBBBBBB<\x00\x00'],
 218:[b'\x0c0\x00\x00BBBBBBBBB<\x00\x00'],
 219:[b'\x18$\x00\x00BBBBBBBBB<\x00\x00'],
 220:[b'$$\x00\x00BBBBBBBBB<\x00\x00'],
 221:[b'\x0c0\x00\x00AA""\x14\x08\x08\x08\x08\x08\x00\x00'],
 222:[b'\x00\x00\x00@@xDBBDx@@@\x00\x00'],
 223:[b'\x00\x00\x00\x008DDD\\BBBR\\\x00\x00'],
 224:[b'\x00\x000\x0c\x00\x00<B\x02>BBF:\x00\x00'],
 225:[b'\x00\x00\x0c0\x00\x00<B\x02>BBF:\x00\x00'],
 226:[b'\x00\x00\x18$\x00\x00<B\x02>BBF:\x00\x00'],
 227:[b'\x00\x002L\x00\x00<B\x02>BBF:\x00\x00'],
 228:[b'\x00\x00$$\x00\x00<B\x02>BBF:\x00\x00'],
 229:[b'\x00\x18$\x18\x00\x00<B\x02>BBF:\x00\x00'],
 230:[b'\x00\x00\x00\x00\x00\x00>I\t?HHI>\x00\x00'],
 231:[b'\x00\x00\x00\x00\x00\x00<B@@@@B<\x080'],
 232:[b'\x00\x000\x0c\x00\x00<BB~@@B<\x00\x00'],
 233:[b'\x00\x00\x0c0\x00\x00<BB~@@B<\x00\x00'],
 234:[b'\x00\x00\x18$\x00\x00<BB~@@B<\x00\x00'],
 235:[b'\x00\x00$$\x00\x00<BB~@@B<\x00\x00'],
 236:[b'\x00\x000\x0c\x00\x00\x18\x08\x08\x08\x08\x08\x08>\x00\x00'],
 237:[b'\x00\x00\x0c0\x00\x00\x18\x08\x08\x08\x08\x08\x08>\x00\x00'],
 238:[b'\x00\x00\x18$\x00\x00\x18\x08\x08\x08\x08\x08\x08>\x00\x00'],
 239:[b'\x00\x00$$\x00\x00\x18\x08\x08\x08\x08\x08\x08>\x00\x00'],
 240:[b'\x00\x002\x0c\x14"\x02>BBBBB<\x00\x00'],
 241:[b'\x00\x002L\x00\x00\\bBBBBBB\x00\x00'],
 242:[b'\x00\x000\x0c\x00\x00<BBBBBB<\x00\x00'],
 243:[b'\x00\x00\x0c0\x00\x00<BBBBBB<\x00\x00'],
 244:[b'\x00\x00\x18$\x00\x00<BBBBBB<\x00\x00'],
 245:[b'\x00\x002L\x00\x00<BBBBBB<\x00\x00'],
 246:[b'\x00\x00$$\x00\x00<BBBBBB<\x00\x00'],
 247:[b'\x00\x00\x00\x00\x00\x00\x18\x00\x00~\x00\x00\x18\x00\x00\x00'],
 248:[b'\x00\x00\x00\x00\x00\x02<FJJRRb<@\x00'],
 249:[b'\x00\x000\x0c\x00\x00BBBBBBF:\x00\x00'],
 250:[b'\x00\x00\x0c0\x00\x00BBBBBBF:\x00\x00'],
 251:[b'\x00\x00\x18$\x00\x00BBBBBBF:\x00\x00'],
 252:[b'\x00\x00$$\x00\x00BBBBBBF:\x00\x00'],
 253:[b'\x00\x00\x0c0\x00\x00BBBBB&\x1a\x02\x02<'],
 254:[b'\x00\x00\x00\x00  <"""$(0   '],
 255:[b'\x00\x00$$\x00\x00BBBBB&\x1a\x02\x02<'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

