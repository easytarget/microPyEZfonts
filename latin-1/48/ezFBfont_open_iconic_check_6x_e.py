'''
    ezFBfont_open_iconic_check_6x_e : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_check_6x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: open_iconic_check_6x Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'
# Cmd: ['bdf2dict.py', 'bdf-sources/open_iconic_check_6x.bdf', '../latin-1/e-char.set']
# Date: 2024-06-04 14:21:13

version = '0.33'
name = '"open_iconic_check_6x"'
family = 'None'
weight = 'None'
size = None

def height():
    return 48

def baseline():
    return 48

def max_width():
    return 48

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 64

def max_ch():
    return 68

_g = {
 64:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x0f\x80\x00\x00\x00\x00\x1f\xc0\x00\x00\x00\x00?\xe0\x00\x00\x00\x00\x7f\xf0\x00\x00\x00\x00\xff\xf8\x00\x00\x00\x01\xff\xfc\x00\x00\x00\x03\xff\xfe\x00\x00\x00\x07\xff\xfc\x00\x00\x00\x0f\xff\xf8\x00\x00\x00\x1f\xff\xf0\x00\x80\x00?\xff\xe0\x01\xc0\x00\x7f\xff\xc0\x03\xe0\x00\xff\xff\x80\x07\xf0\x01\xff\xff\x00\x0f\xf8\x03\xff\xfe\x00\x1f\xfc\x07\xff\xfc\x00?\xfe\x0f\xff\xf8\x00\x7f\xff\x1f\xff\xf0\x00\xff\xff\xbf\xff\xe0\x00\x7f\xff\xff\xff\xc0\x00?\xff\xff\xff\x80\x00\x1f\xff\xff\xff\x00\x00\x0f\xff\xff\xfe\x00\x00\x07\xff\xff\xfc\x00\x00\x03\xff\xff\xf8\x00\x00\x01\xff\xff\xf0\x00\x00\x00\xff\xff\xe0\x00\x00\x00\x7f\xff\xc0\x00\x00\x00?\xff\x80\x00\x00\x00\x1f\xff\x00\x00\x00\x00\x0f\xfe\x00\x00\x00\x00\x07\xfc\x00\x00\x00\x00\x03\xf8\x00\x00\x00\x00\x01\xf0\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 65:[b'\x00\x00\x1f\xf8\x00\x00\x00\x00\xff\xff\x00\x00\x00\x07\xff\xff\xe0\x00\x00\x0f\xff\xff\xf0\x00\x00?\xff\xff\xfc\x00\x00\x7f\xff\xff\xfe\x00\x00\xff\xff\xff\xff\x00\x01\xff\xff\xff\xff\x80\x03\xff\xff\xff\xff\xc0\x07\xff\xff\xff\xff\xe0\x0f\xff\xff\xff\xff\xf0\x0f\xff\xff\xff\xe7\xf0\x1f\xff\xff\xff\xc3\xf8?\xff\xff\xff\x81\xfc?\xff\xff\xff\x00\xfc?\xff\xff\xfe\x00\xfc\x7f\xff\xff\xfc\x01\xfe\x7f\xff\xff\xf8\x03\xfe\x7f\xff\xff\xf0\x07\xfe\xff\xff\xff\xe0\x0f\xff\xff\xfc\xff\xc0\x1f\xff\xff\xf8\x7f\x80?\xff\xff\xf0?\x00\x7f\xff\xff\xe0\x1e\x00\xff\xff\xff\xe0\x0c\x01\xff\xff\xff\xf0\x00\x03\xff\xff\xff\xf8\x00\x07\xff\xff\xff\xfc\x00\x0f\xff\xff\xff\xfe\x00\x1f\xff\xff\x7f\xff\x00?\xff\xfe\x7f\xff\x80\x7f\xff\xfe\x7f\xff\xc0\xff\xff\xfe?\xff\xe1\xff\xff\xfc?\xff\xf3\xff\xff\xfc?\xff\xff\xff\xff\xfc\x1f\xff\xff\xff\xff\xf8\x0f\xff\xff\xff\xff\xf0\x0f\xff\xff\xff\xff\xf0\x07\xff\xff\xff\xff\xe0\x03\xff\xff\xff\xff\xc0\x01\xff\xff\xff\xff\x80\x00\xff\xff\xff\xff\x00\x00\x7f\xff\xff\xfe\x00\x00?\xff\xff\xfc\x00\x00\x0f\xff\xff\xf0\x00\x00\x07\xff\xff\xe0\x00\x00\x00\xff\xff\x00\x00\x00\x00\x1f\xf8\x00\x00'],
 66:[b'\x00\x00\x1f\xf8\x00\x00\x00\x00\xff\xff\x00\x00\x00\x07\xff\xff\xe0\x00\x00\x0f\xff\xff\xf0\x00\x00?\xff\xff\xfc\x00\x00\x7f\xff\xff\xfe\x00\x00\xff\xff\xff\xff\x00\x01\xff\xff\xff\xff\x80\x03\xff\xff\xff\xff\xc0\x07\xff\xff\xff\xff\xe0\x0f\xff\xff\xff\xff\xf0\x0f\xfc\xff\xff?\xf0\x1f\xf8\x7f\xfe\x1f\xf8?\xf0?\xfc\x0f\xfc?\xe0\x1f\xf8\x07\xfc?\xe0\x0f\xf0\x07\xfc\x7f\xf0\x07\xe0\x0f\xfe\x7f\xf8\x03\xc0\x1f\xfe\x7f\xfc\x01\x80?\xfe\xff\xfe\x00\x00\x7f\xff\xff\xff\x00\x00\xff\xff\xff\xff\x80\x01\xff\xff\xff\xff\xc0\x03\xff\xff\xff\xff\xe0\x07\xff\xff\xff\xff\xe0\x07\xff\xff\xff\xff\xc0\x03\xff\xff\xff\xff\x80\x01\xff\xff\xff\xff\x00\x00\xff\xff\xff\xfe\x00\x00\x7f\xff\x7f\xfc\x01\x80?\xfe\x7f\xf8\x03\xc0\x1f\xfe\x7f\xf0\x07\xe0\x0f\xfe?\xe0\x0f\xf0\x07\xfc?\xe0\x1f\xf8\x07\xfc?\xf0?\xfc\x0f\xfc\x1f\xf8\x7f\xfe\x1f\xf8\x0f\xfc\xff\xff?\xf0\x0f\xff\xff\xff\xff\xf0\x07\xff\xff\xff\xff\xe0\x03\xff\xff\xff\xff\xc0\x01\xff\xff\xff\xff\x80\x00\xff\xff\xff\xff\x00\x00\x7f\xff\xff\xfe\x00\x00?\xff\xff\xfc\x00\x00\x0f\xff\xff\xf0\x00\x00\x07\xff\xff\xe0\x00\x00\x00\xff\xff\x00\x00\x00\x00\x1f\xf8\x00\x00'],
 67:[b'\xff\xff\xff\xff\x80\x00\xff\xff\xff\xff\x00`\xff\xff\xff\xfe\x00\xf0\xff\xff\xff\xfc\x01\xf8\xff\xff\xff\xf8\x03\xfc\xff\xff\xff\xf0\x07\xfe\xfc\x00\x00\x00\x0f\xfe\xfc\x00\x00\x00\x1f\xfc\xfc\x00\x00\x00?\xf8\xfc\x00\x00\x00\x7f\xf0\xfc\x00\x00\x00\xff\xe0\xfc\x00\x00\x01\xff\xc0\xfc\x00\x00\x03\xff\x80\xfc\x00`\x07\xff\x00\xfc\x00\xf0\x0f\xfe\x00\xfc\x01\xf8\x1f\xfc\x00\xfc\x03\xfc?\xf8\x00\xfc\x07\xfe\x7f\xf0\x00\xfc\x07\xff\xff\xe0\x00\xfc\x03\xff\xff\xc0\x00\xfc\x01\xff\xff\x80\x00\xfc\x00\xff\xff\x00@\xfc\x00\x7f\xfe\x00\xc0\xfc\x00?\xfc\x01\xc0\xfc\x00\x1f\xf8\x03\xc0\xfc\x00\x0f\xf0\x07\xc0\xfc\x00\x07\xe0\x0f\xc0\xfc\x00\x03\xc0\x0f\xc0\xfc\x00\x01\x80\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xfc\x00\x00\x00\x0f\xc0\xff\xff\xff\xff\xff\xc0\xff\xff\xff\xff\xff\xc0\xff\xff\xff\xff\xff\xc0\xff\xff\xff\xff\xff\xc0\xff\xff\xff\xff\xff\xc0\xff\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 68:[b'\x00\x80\x00\x00\x02\x00\x01\xc0\x00\x00\x07\x00\x03\xe0\x00\x00\x0f\x80\x07\xf0\x00\x00\x1f\xc0\x0f\xf8\x00\x00?\xe0\x1f\xfc\x00\x00\x7f\xf0?\xfe\x00\x00\xff\xf8\x7f\xff\x00\x01\xff\xfc\xff\xff\x80\x03\xff\xfe\x7f\xff\xc0\x07\xff\xfc?\xff\xe0\x0f\xff\xf8\x1f\xff\xf0\x1f\xff\xf0\x0f\xff\xf8?\xff\xe0\x07\xff\xfc\x7f\xff\xc0\x03\xff\xfe\xff\xff\x80\x01\xff\xff\xff\xff\x00\x00\xff\xff\xff\xfe\x00\x00\x7f\xff\xff\xfc\x00\x00?\xff\xff\xf8\x00\x00\x1f\xff\xff\xf0\x00\x00\x0f\xff\xff\xe0\x00\x00\x07\xff\xff\xc0\x00\x00\x03\xff\xff\x80\x00\x00\x01\xff\xff\x00\x00\x00\x03\xff\xff\x80\x00\x00\x07\xff\xff\xc0\x00\x00\x0f\xff\xff\xe0\x00\x00\x1f\xff\xff\xf0\x00\x00?\xff\xff\xf8\x00\x00\x7f\xff\xff\xfc\x00\x00\xff\xff\xff\xfe\x00\x01\xff\xff\xff\xff\x00\x03\xff\xfe\xff\xff\x80\x07\xff\xfc\x7f\xff\xc0\x0f\xff\xf8?\xff\xe0\x1f\xff\xf0\x1f\xff\xf0?\xff\xe0\x0f\xff\xf8\x7f\xff\xc0\x07\xff\xfc\xff\xff\x80\x03\xff\xfe\x7f\xff\x00\x01\xff\xfc?\xfe\x00\x00\xff\xf8\x1f\xfc\x00\x00\x7f\xf0\x0f\xf8\x00\x00?\xe0\x07\xf0\x00\x00\x1f\xc0\x03\xe0\x00\x00\x0f\x80\x01\xc0\x00\x00\x07\x00\x00\x80\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

