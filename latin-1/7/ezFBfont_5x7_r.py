'''
    ezFBfont_5x7_r : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 5x7.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: 5x7 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
# Cmd: ['bdf2dict.py', 'bdf-sources/5x7.bdf', '../latin-1/r-char.set']
# Date: 2024-06-04 14:19:40

version = '0.33'
name = '-Misc-Fixed-Medium-R-Normal--7-70-75-75-C-50-ISO10646-1'
family = 'Fixed'
weight = 'Medium'
size = 7

def height():
    return 7

def baseline():
    return 6

def max_width():
    return 5

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 126

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'    \x00 \x00'],
 34:[b'PPP\x00\x00\x00\x00'],
 35:[b'\x00P\xf8P\xf8P\x00'],
 36:[b'\x00p\xa0p(p\x00'],
 37:[b'\x80\x90 @\x90\x10\x00'],
 38:[b'\x00@\xa0@\xa0P\x00'],
 39:[b'   \x00\x00\x00\x00'],
 40:[b' @@@@ \x00'],
 41:[b'@    @\x00'],
 42:[b'\x00P p P\x00'],
 43:[b'\x00  \xf8  \x00'],
 44:[b'\x00\x00\x00\x000 @'],
 45:[b'\x00\x00\x00\xf0\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00``\x00'],
 47:[b'\x00\x10 @\x80\x00\x00'],
 48:[b' PPPP \x00'],
 49:[b' `   p\x00'],
 50:[b'`\x90\x10 @\xf0\x00'],
 51:[b'\xf0\x10`\x10\x90`\x00'],
 52:[b' `\xa0\xf0  \x00'],
 53:[b'\xf0\x80\xe0\x10\x90`\x00'],
 54:[b'`\x80\xe0\x90\x90`\x00'],
 55:[b'\xf0\x10  @@\x00'],
 56:[b'`\x90`\x90\x90`\x00'],
 57:[b'`\x90\x90p\x10`\x00'],
 58:[b'\x00``\x00``\x00'],
 59:[b'\x00``\x00`@\x80'],
 60:[b'\x00\x10 @ \x10\x00'],
 61:[b'\x00\x00\xf0\x00\xf0\x00\x00'],
 62:[b'\x00@ \x10 @\x00'],
 63:[b' P\x10 \x00 \x00'],
 64:[b'`\x90\xb0\xb0\x80`\x00'],
 65:[b'`\x90\x90\xf0\x90\x90\x00'],
 66:[b'\xe0\x90\xe0\x90\x90\xe0\x00'],
 67:[b'`\x90\x80\x80\x90`\x00'],
 68:[b'\xe0\x90\x90\x90\x90\xe0\x00'],
 69:[b'\xf0\x80\xe0\x80\x80\xf0\x00'],
 70:[b'\xf0\x80\xe0\x80\x80\x80\x00'],
 71:[b'`\x90\x80\xb0\x90p\x00'],
 72:[b'\x90\x90\xf0\x90\x90\x90\x00'],
 73:[b'p    p\x00'],
 74:[b'\x10\x10\x10\x10\x90`\x00'],
 75:[b'\x90\xa0\xc0\xc0\xa0\x90\x00'],
 76:[b'\x80\x80\x80\x80\x80\xf0\x00'],
 77:[b'\x90\xf0\xf0\x90\x90\x90\x00'],
 78:[b'\x90\xd0\xd0\xb0\xb0\x90\x00'],
 79:[b'`\x90\x90\x90\x90`\x00'],
 80:[b'\xe0\x90\x90\xe0\x80\x80\x00'],
 81:[b'`\x90\x90\x90\xd0`\x10'],
 82:[b'\xe0\x90\x90\xe0\xa0\x90\x00'],
 83:[b'`\x90@ \x90`\x00'],
 84:[b'p     \x00'],
 85:[b'\x90\x90\x90\x90\x90`\x00'],
 86:[b'\x90\x90\x90\x90``\x00'],
 87:[b'\x90\x90\x90\xf0\xf0\x90\x00'],
 88:[b'\x90\x90``\x90\x90\x00'],
 89:[b'PPP   \x00'],
 90:[b'\xf0\x10 @\x80\xf0\x00'],
 91:[b'p@@@@p\x00'],
 92:[b'\x00\x80@ \x10\x00\x00'],
 93:[b'p\x10\x10\x10\x10p\x00'],
 94:[b' P\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\xf0\x00'],
 96:[b'@ \x00\x00\x00\x00\x00'],
 97:[b'\x00\x00p\x90\xb0P\x00'],
 98:[b'\x80\x80\xe0\x90\x90\xe0\x00'],
 99:[b'\x00\x00`\x80\x80`\x00'],
 100:[b'\x10\x10p\x90\x90p\x00'],
 101:[b'\x00\x00`\xb0\xc0`\x00'],
 102:[b' P@\xe0@@\x00'],
 103:[b'\x00\x00p\x90`\x80p'],
 104:[b'\x80\x80\xe0\x90\x90\x90\x00'],
 105:[b' \x00`  p\x00'],
 106:[b'\x10\x00\x10\x10\x10P '],
 107:[b'\x80\x80\xa0\xc0\xa0\x90\x00'],
 108:[b'`    p\x00'],
 109:[b'\x00\x00\xa0\xf0\x90\x90\x00'],
 110:[b'\x00\x00\xe0\x90\x90\x90\x00'],
 111:[b'\x00\x00`\x90\x90`\x00'],
 112:[b'\x00\x00\xe0\x90\x90\xe0\x80'],
 113:[b'\x00\x00p\x90\x90p\x10'],
 114:[b'\x00\x00\xe0\x90\x80\x80\x00'],
 115:[b'\x00\x00p\xc00\xe0\x00'],
 116:[b'@@\xe0@@0\x00'],
 117:[b'\x00\x00\x90\x90\x90p\x00'],
 118:[b'\x00\x00PPP \x00'],
 119:[b'\x00\x00\x90\x90\xf0\xf0\x00'],
 120:[b'\x00\x00\x90``\x90\x00'],
 121:[b'\x00\x00\x90\x90P @'],
 122:[b'\x00\x00\xf0 @\xf0\x00'],
 123:[b'\x10 `  \x10\x00'],
 124:[b'      \x00'],
 125:[b'@ 0  @\x00'],
 126:[b'P\xa0\x00\x00\x00\x00\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

