'''
    ezFBfont_cursor_n : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original cursor.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "These glyphs are unencumbered"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: cursor Char set: b' %()*+,-./0123456789:\xb0'
# Cmd: ['bdf2dict.py', 'bdf-sources/cursor.bdf', '../latin-1/n-char.set']
# Date: 2024-06-04 14:20:55

version = '0.33'
name = 'cursor'
family = 'None'
weight = 'None'
size = None

def height():
    return 24

def baseline():
    return 8

def max_width():
    return 17

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 58

_g = {
 32:[b'\x00\x00\x00B\x84\x00\xa2\x8a\x00R\x94\x00*\xa8\x00\x16\xd0\x00\n\xa0\x00\xfd\x7f\x00\x02\x80\x00\xfd\x7f\x00\n\xa0\x00\x16\xd0\x00*\xa8\x00R\x94\x00\xa2\x8a\x00B\x84\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 37:[b'\x00\x00\x00\x07\xc0\x00\x0f\xe0\x00\x1f\xf0\x00;\xb8\x00s\x9c\x00\xe3\x8e\x00\xff\xff\x00\xfe\xff\x00\xff\xff\x00\xe3\x8e\x00s\x9c\x00;\xb8\x00\x1f\xf0\x00\x0f\xe0\x00\x07\xc0\x00\x03\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00?\xfc\x00 \x04\x00 \x04\x00 \x04\x00 \x04\x00!\x84\x00!\x84\x00 \x04\x00 \x04\x00 \x04\x00 \x04\x00?\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 41:[b'\x00\x00\x00\x00\x00\x00\x7f\xfe\x00\x7f\xfe\x00\x7f\xfe\x00p\x0e\x00p\x0e\x00s\xce\x00s\xce\x00s\xce\x00s\xce\x00p\x0e\x00p\x0e\x00\x7f\xfe\x00\x7f\xfe\x00\x7f\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 42:[b'\x00\x00\x00\x01\x80\x00\x03\xc0\x00\x07\xe0\x00\r\xb0\x00\x19\x98\x00\x01\x80\x00\x01\x80\x00\x01\x80\x00\x01\x80\x00\x19\x98\x00\r\xb0\x00\x07\xe0\x00\x03\xc0\x00\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 43:[b'\x03\xc0\x00\x07\xe0\x00\x0f\xf0\x00\x1f\xf8\x00?\xfc\x00?\xfc\x00?\xfc\x00\x03\xc0\x00\x03\xc0\x00?\xfc\x00?\xfc\x00?\xfc\x00\x1f\xf8\x00\x0f\xf0\x00\x07\xe0\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x06\x00\x00\x1e\x00\x00|\x00\x01\xfc\x00\x07\xf8\x00\x1f\xf8\x00\x00\xf0\x00\x01p\x00\x02`\x00\x04`\x00\x08@\x00\x10@\x00 \x00\x00@\x00\x00\x00\x00\x00'],
 45:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x0f\x00\x00?\x00\x00\xfe\x00\x03\xfc\x00\x0f\xfc\x00?\xf8\x00?\xf8\x00\x03\xf0\x00\x07\xf0\x00\x0e\xe0\x00\x1c\xe0\x008\xc0\x00p\xc0\x00`\x00\x00@\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x06\x00\x00\x1e\x00\x00|\x00\x01\xfc\x00\x008\x00\x00X\x00\x00\x90\x00\x01\x10\x00\x02\x00\x00\x04\x00\x00\x08\x00\x00\x10\x00\x00 \x00\x00@\x00\x00\x00\x00\x00'],
 47:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x0f\x00\x00>\x00\x00\xfe\x00\x03\xfc\x00\x03\xfc\x00\x00\xf8\x00\x01\xf8\x00\x03\xb0\x00\x07 \x00\x0e\x00\x00\x1c\x00\x008\x00\x00p\x00\x00`\x00\x00\x00\x00\x00'],
 48:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00?\xfc\x00"D\x00&d\x00,4\x008\x1c\x00!\x84\x00!\x84\x008\x1c\x00,4\x00&d\x00"D\x00?\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 49:[b'\x00\x00\x00\x00\x00\x00\x7f\xfe\x00\x7f\xfe\x00g\xe6\x00o\xf6\x00~~\x00}\xbe\x00{\xde\x00{\xde\x00}\xbe\x00~~\x00o\xf6\x00g\xe6\x00\x7f\xfe\x00\x7f\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 50:[b'\x00\x00\x00\x00\x00\x00G\xe0\x00o\xf0\x00|\x18\x00H\x08\x00L\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x00\x00~\x00\x002\x00\x10\x12\x00\x18>\x00\x0f\xf6\x00\x07\xe2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 51:[b'\x00\x00\x00\xc7\xe0\x00\xef\xf0\x00\xff\xf8\x00\xff\xfc\x00\xfc\x1c\x00\xff\x0c\x00\xff\x00\x00\xff\x00\x00\x00\xff\x00\x00\xff\x000\x7f\x008?\x00?\xff\x00\x1f\xff\x00\x0f\xf7\x00\x07\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 52:[b'\x00\x00\x00\x01\x80\x00\x03\xc0\x00\x07\xe0\x00\x01\x80\x00\x11\x88\x001\x8c\x00\x7f\xfe\x00\x7f\xfe\x001\x8c\x00\x11\x88\x00\x01\x80\x00\x07\xe0\x00\x03\xc0\x00\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 53:[b'\x03\xc0\x00\x03\xe0\x00\x07\xe0\x00\x0f\xf0\x00\x17\xe8\x00;\xdc\x00\xff\xff\x00\xff\xff\x00\xff\xff\x00\xff\xff\x00;\xdc\x00\x17\xe8\x00\x0f\xf0\x00\x07\xe0\x00\x03\xc0\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 54:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x00\x00p\x00\x803\x00\x9f\xb0\x00\xff\xf0\x00\xfe0\x00\xfc0\x00`8\x00\x00\xf0\x00\x1f\xe0\x00\x08\x00\x00\x08\x00\x00\x08\x00\x00\x08\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 55:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\x00\x00\xfc\x00\xc0\xff\x00\xff\xff\x00\xff\xff\x00\xff\xfc\x00\xff\xfc\x00\xff\xfc\x00\xff\xfc\x00\xff\xfc\x00\x7f\xf8\x00\x1f\xf0\x00\x1c\x00\x00\x1c\x00\x00?\x00\x00?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 56:[b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x10\x80\x00\xc8@\x00\xea\xa0\x00\xc8 \x00\xcb\xa0\x00\xf8<\x008?\x00\x08'\x00\x08'\x00\t/\x00\t'\x00\t \x00\x11\x10\x00!\x08\x00>\xf8\x00"],
 57:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\x00\x00\xdf\x80\x00\xef\xc0\x00\xff\xe0\x00\xef\xe0\x00\xef\xfc\x00\xff\xfe\x00\xff\xff\x00?\xef\x00\x0f\xef\x00\x0f\xff\x00\x0f\xef\x00\x0f\xe7\x00\x1f\xf0\x00?\xf8\x00>\xf8\x00'],
 58:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x1e\x00\x00x\x00\x00\xf0\x00\x01\xe0\x00\x03\xf0\x00\x07\xf8\x00\x17\xf0\x00?\xf8\x00/\xf8\x00\x03\xf0\x00\x03\xe0\x00%\x00\x001\x00\x00\x1a\x00\x00\x0c\x00\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

