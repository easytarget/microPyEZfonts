'''
    ezFBfont_battery24_e : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original battery24.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Created with Fony 1.4.7"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT Exported by Fony v1.4.7
'''
# Code generated by bdf2dict.py
# Font: battery24 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'
# Cmd: ['bdf2dict.py', 'bdf-sources/battery24.bdf', '../latin-1/e-char.set']
# Date: 2024-06-04 14:20:49

version = '0.33'
name = 'Battery24'
family = 'None'
weight = 'None'
size = None

def height():
    return 24

def baseline():
    return 24

def max_width():
    return 20

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 48

def max_ch():
    return 70

_g = {
 48:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 49:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 50:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 51:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 52:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xcf\xff0\xdf\xff\xb0\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 53:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 54:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 55:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 56:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 57:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 58:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 59:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 60:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 61:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc1\x980\xc1\x980\xc1\x980\xc1\x980\xc3\xfc0\xc3\xfc0\xc3\xfc0\xc3\xfc0\xc3\xfc0\xc1\xf80\xc0\xf00\xc0`0\xc0`0\xc0\x000\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 62:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0`0\xc0`0\xc1\xf80\xc1\xf80\xc0`0\xc0`0\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc1\xf80\xc1\xf80\xc0\x000\xc0\x000\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 63:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0 0\xc0`0\xc0\xc00\xc0\x800\xc1\x8e0\xc3\xbe0\xc3\xfc0\xc7\xdc0\xc7\x180\xc0\x180\xc000\xc000\xc0`0\xc0\xc00\xc0\x800\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 64:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xff\xff\xf0\xff\xdf\xf0\xff\x9f\xf0\xff?\xf0\xff\x7f\xf0\xfeq\xf0\xfcA\xf0\xfc\x03\xf0\xf8#\xf0\xf8\xe7\xf0\xff\xe7\xf0\xff\xcf\xf0\xff\xcf\xf0\xff\x9f\xf0\xff?\xf0\xff\x7f\xf0\xff\xff\xf0\xff\xff\xf0\x7f\xff\xe0'],
 65:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc3\xfc0\xc4\x020\xc4\x020\xc3\xfc0\xc0\x000\xc0\x000\xc3\xfc0\xc4\x020\xc4\x020\xc3\xfc0\xc0\x000\xc0\x000\xc7\xfe0\xc2\x000\xc0\x000\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 66:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xcf\xff0\xc0\x000\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xc0\x000\xdf\xff\xb0\xc0\x000\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 67:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 68:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 69:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xc0\x000\xc0\x000\xc0\x000\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
 70:[b'\x01\xf8\x00\x01\xf8\x00\x01\xf8\x00\x7f\xff\xe0\xff\xff\xf0\xe0\x00p\xcf\xff0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xdf\xff\xb0\xcf\xff0\xe0\x00p\xff\xff\xf0\x7f\xff\xe0'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

