'''
    ezFBfont_spleen_8x16_u : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original spleen-8x16.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Copyright (c) 2018-2022, Frederic Cambus"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT /*
    COMMENT  * Spleen 8x16 1.9.1
    COMMENT  * Copyright (c) 2018-2022, Frederic Cambus
    COMMENT  * https://www.cambus.net/
    COMMENT  *
    COMMENT  * Created:      2018-08-11
    COMMENT  * Last Updated: 2020-10-10
    COMMENT  *
    COMMENT  * Spleen is released under the BSD 2-Clause license.
    COMMENT  * See LICENSE file for details.
    COMMENT  *
    COMMENT  * SPDX-License-Identifier: BSD-2-Clause
    COMMENT  */
'''
# Code generated by bdf2dict.py
# Font: spleen-8x16 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'
# Cmd: ['bdf2dict.py', 'bdf-sources/spleen-8x16.bdf', '../latin-1/u-char.set']
# Date: 2024-06-04 14:21:27

version = '0.33'
name = '-misc-spleen-medium-r-normal--16-160-72-72-C-80-ISO10646-1'
family = 'Spleen'
weight = 'Medium'
size = 16

def height():
    return 14

def baseline():
    return 11

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x00\x18\x18\x18\x18\x18\x18\x18\x00\x18\x18\x00\x00\x00'],
 34:[b'ffff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00ll\xfellll\xfell\x00\x00\x00'],
 36:[b'\x10~\xd0\xd0\xd0|\x16\x16\x16\x16\xfc\x10\x00\x00'],
 37:[b'\x00\x06fl\x0c\x18\x1806f`\x00\x00\x00'],
 38:[b'\x008lll8p\xda\xcc\xccz\x00\x00\x00'],
 39:[b'\x18\x18\x18\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x0e\x1800````00\x18\x0e\x00\x00'],
 41:[b'p\x18\x0c\x0c\x06\x06\x06\x06\x0c\x0c\x18p\x00\x00'],
 42:[b'\x00\x00\x00f<\x18\xff\x18<f\x00\x00\x00\x00'],
 43:[b'\x00\x00\x00\x00\x18\x18~\x18\x18\x00\x00\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x180\x00\x00'],
 45:[b'\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x18\x00\x00\x00'],
 47:[b'\x06\x06\x0c\x0c\x18\x1800``\xc0\xc0\x00\x00'],
 48:[b'\x00|\xc6\xc6\xce\xde\xf6\xe6\xc6\xc6|\x00\x00\x00'],
 49:[b'\x00\x188xX\x18\x18\x18\x18\x18~\x00\x00\x00'],
 50:[b'\x00|\xc6\x06\x06\x0c\x180`\xc6\xfe\x00\x00\x00'],
 51:[b'\x00|\xc6\x06\x06<\x06\x06\x06\xc6|\x00\x00\x00'],
 52:[b'\x00\xc0\xc0\xcc\xcc\xcc\xcc\xfe\x0c\x0c\x0c\x00\x00\x00'],
 53:[b'\x00\xfe\xc6\xc0\xc0\xfc\x06\x06\x06\xc6|\x00\x00\x00'],
 54:[b'\x00|\xc6\xc0\xc0\xfc\xc6\xc6\xc6\xc6|\x00\x00\x00'],
 55:[b'\x00\xfe\xc6\x06\x06\x0c\x180000\x00\x00\x00'],
 56:[b'\x00|\xc6\xc6\xc6|\xc6\xc6\xc6\xc6|\x00\x00\x00'],
 57:[b'\x00|\xc6\xc6\xc6\xc6~\x06\x06\xc6|\x00\x00\x00'],
 58:[b'\x00\x00\x00\x00\x18\x18\x00\x00\x00\x18\x18\x00\x00\x00'],
 59:[b'\x00\x00\x00\x00\x18\x18\x00\x00\x00\x18\x180\x00\x00'],
 60:[b'\x00\x06\x0c\x180``0\x18\x0c\x06\x00\x00\x00'],
 61:[b'\x00\x00\x00\x00~\x00\x00~\x00\x00\x00\x00\x00\x00'],
 62:[b'\x00`0\x18\x0c\x06\x06\x0c\x180`\x00\x00\x00'],
 63:[b'\x00|\xc6\x06\x0c\x1800\x0000\x00\x00\x00'],
 64:[b'\x00\x00|\xc2\xda\xda\xda\xda\xde\xc0|\x00\x00\x00'],
 65:[b'\x00|\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\xc6\x00\x00\x00'],
 66:[b'\x00\xfc\xc6\xc6\xc6\xfc\xc6\xc6\xc6\xc6\xfc\x00\x00\x00'],
 67:[b'\x00~\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0~\x00\x00\x00'],
 68:[b'\x00\xfc\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xfc\x00\x00\x00'],
 69:[b'\x00~\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xc0~\x00\x00\x00'],
 70:[b'\x00~\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xc0\xc0\x00\x00\x00'],
 71:[b'\x00~\xc0\xc0\xc0\xde\xc6\xc6\xc6\xc6~\x00\x00\x00'],
 72:[b'\x00\xc6\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\xc6\x00\x00\x00'],
 73:[b'\x00~\x18\x18\x18\x18\x18\x18\x18\x18~\x00\x00\x00'],
 74:[b'\x00~\x18\x18\x18\x18\x18\x18\x18\x18\xf0\x00\x00\x00'],
 75:[b'\x00\xc6\xc6\xc6\xcc\xf8\xcc\xc6\xc6\xc6\xc6\x00\x00\x00'],
 76:[b'\x00\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0~\x00\x00\x00'],
 77:[b'\x00\xc6\xee\xfe\xd6\xc6\xc6\xc6\xc6\xc6\xc6\x00\x00\x00'],
 78:[b'\x00\xc6\xc6\xe6\xe6\xd6\xd6\xce\xce\xc6\xc6\x00\x00\x00'],
 79:[b'\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6|\x00\x00\x00'],
 80:[b'\x00\xfc\xc6\xc6\xc6\xfc\xc0\xc0\xc0\xc0\xc0\x00\x00\x00'],
 81:[b'\x00|\xc6\xc6\xc6\xc6\xc6\xc6\xd6\xd6|\x18\x0c\x00'],
 82:[b'\x00\xfc\xc6\xc6\xc6\xfc\xc6\xc6\xc6\xc6\xc6\x00\x00\x00'],
 83:[b'\x00~\xc0\xc0\xc0|\x06\x06\x06\x06\xfc\x00\x00\x00'],
 84:[b'\x00\xff\x18\x18\x18\x18\x18\x18\x18\x18\x18\x00\x00\x00'],
 85:[b'\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6~\x00\x00\x00'],
 86:[b'\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6l8\x10\x00\x00\x00'],
 87:[b'\x00\xc6\xc6\xc6\xc6\xc6\xc6\xd6\xfe\xee\xc6\x00\x00\x00'],
 88:[b'\x00\xc6\xc6\xc6l8l\xc6\xc6\xc6\xc6\x00\x00\x00'],
 89:[b'\x00\xc6\xc6\xc6\xc6~\x06\x06\x06\x06\xfc\x00\x00\x00'],
 90:[b'\x00\xfe\x06\x06\x0c\x180`\xc0\xc0\xfe\x00\x00\x00'],
 91:[b'>0000000000>\x00\x00'],
 92:[b'\xc0\xc0``00\x18\x18\x0c\x0c\x06\x06\x00\x00'],
 93:[b'|\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c|\x00\x00'],
 94:[b'\x108l\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

