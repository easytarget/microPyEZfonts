'''
    ezFBfont_b14_r : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original b14.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(c) Copyright 2000-2003 /efont/ The Electronic Font Open Laboratory."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: b14 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
# Cmd: ['bdf2dict.py', 'bdf-sources/b14.bdf', '../latin-1/r-char.set']
# Date: 2024-06-04 14:20:21

version = '0.33'
name = '-Efont-Biwidth-Medium-R-Normal--14-140-75-75-P-70-ISO10646-1'
family = 'Biwidth'
weight = 'Medium'
size = 14

def height():
    return 13

def baseline():
    return 11

def max_width():
    return 7

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 126

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x00\x00\x10\x10\x10\x10\x10\x10\x00\x10\x10\x00\x00'],
 34:[b'(((\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00\x00\x12\x12~$$$~HH\x00\x00'],
 36:[b'\x00\x00\x08<JH(\x1cJJ<\x08\x00'],
 37:[b'\x00\x002JL8\x10\x1c2RL\x00\x00'],
 38:[b'\x00\x00\x18$$\x182JDL2\x00\x00'],
 39:[b'\x10\x10\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x00\x04\x08\x08\x10\x10\x10\x10\x10\x08\x08\x04\x00'],
 41:[b'\x00@  \x10\x10\x10\x10\x10  @\x00'],
 42:[b'\x00\x00\x00\x10T8\x108T\x10\x00\x00\x00'],
 43:[b'\x00\x00\x00\x10\x10\x10|\x10\x10\x10\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x08\x08\x10'],
 45:[b'\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x18\x00\x00'],
 47:[b'\x00\x00\x04\x04\x08\x08\x10  @@\x00\x00'],
 48:[b'\x00\x00\x18$BBBBB$\x18\x00\x00'],
 49:[b'\x00\x00\x100P\x10\x10\x10\x10\x10|\x00\x00'],
 50:[b'\x00\x00<BB\x02\x0c\x10 @~\x00\x00'],
 51:[b'\x00\x00<BB\x02\x1c\x02BB<\x00\x00'],
 52:[b'\x00\x00\x04\x0c\x14\x14$D~\x04\x04\x00\x00'],
 53:[b'\x00\x00~@@|\x02\x02\x02B<\x00\x00'],
 54:[b'\x00\x00<B@@|BBB<\x00\x00'],
 55:[b'\x00\x00~\x02\x04\x04\x08\x08\x10\x10\x10\x00\x00'],
 56:[b'\x00\x00<BBB<BBB<\x00\x00'],
 57:[b'\x00\x00<BBB>\x02BB<\x00\x00'],
 58:[b'\x00\x00\x00\x00\x18\x18\x00\x00\x00\x18\x18\x00\x00'],
 59:[b'\x00\x00\x00\x00\x18\x18\x00\x00\x00\x18\x08\x08\x10'],
 60:[b'\x00\x00\x00\x00\x04\x08\x10 \x10\x08\x04\x00\x00'],
 61:[b'\x00\x00\x00\x00\x00|\x00\x00|\x00\x00\x00\x00'],
 62:[b'\x00\x00\x00\x00 \x10\x08\x04\x08\x10 \x00\x00'],
 63:[b'\x00\x00<BB\x04\x08\x08\x00\x08\x08\x00\x00'],
 64:[b'\x00\x00\x1c"NRRRN \x1e\x00\x00'],
 65:[b'\x00\x00\x18$BB~BBBB\x00\x00'],
 66:[b'\x00\x00|"""<"""|\x00\x00'],
 67:[b'\x00\x00<BB@@@BB<\x00\x00'],
 68:[b'\x00\x00|"""""""|\x00\x00'],
 69:[b'\x00\x00~@@@|@@@~\x00\x00'],
 70:[b'\x00\x00~@@@|@@@@\x00\x00'],
 71:[b'\x00\x00<B@@NBBF:\x00\x00'],
 72:[b'\x00\x00BBBB~BBBB\x00\x00'],
 73:[b'\x00\x00|\x10\x10\x10\x10\x10\x10\x10|\x00\x00'],
 74:[b'\x00\x00\x0e\x04\x04\x04\x04\x04DD8\x00\x00'],
 75:[b'\x00\x00BDHP`PHDB\x00\x00'],
 76:[b'\x00\x00@@@@@@@@~\x00\x00'],
 77:[b'\x00\x00BffZZBBBB\x00\x00'],
 78:[b'\x00\x00bbRRJJFFB\x00\x00'],
 79:[b'\x00\x00<BBBBBBB<\x00\x00'],
 80:[b'\x00\x00|BBB|@@@@\x00\x00'],
 81:[b'\x00\x00<BBBBrJF<\x04\x02'],
 82:[b'\x00\x00|BBB|HDBB\x00\x00'],
 83:[b'\x00\x00<B@0\x0c\x02BB<\x00\x00'],
 84:[b'\x00\x00\xfe\x10\x10\x10\x10\x10\x10\x10\x10\x00\x00'],
 85:[b'\x00\x00BBBBBBBB<\x00\x00'],
 86:[b'\x00\x00BBB$$$\x18\x18\x18\x00\x00'],
 87:[b'\x00\x00BBBBZZffB\x00\x00'],
 88:[b'\x00\x00BB$$\x18$$BB\x00\x00'],
 89:[b'\x00\x00DDDD(\x10\x10\x10\x10\x00\x00'],
 90:[b'\x00\x00~\x02\x04\x08\x10 @@~\x00\x00'],
 91:[b'\x00\x1c\x10\x10\x10\x10\x10\x10\x10\x10\x10\x1c\x00'],
 92:[b'\x00\x00@@  \x10\x08\x08\x04\x04\x00\x00'],
 93:[b'\x00p\x10\x10\x10\x10\x10\x10\x10\x10\x10p\x00'],
 94:[b'\x18$B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x00'],
 96:[b'\x00\x18\x10\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00'],
 97:[b'\x00\x00\x00\x00<B\x0e2BF:\x00\x00'],
 98:[b'\x00\x00@@\\bBBBb\\\x00\x00'],
 99:[b'\x00\x00\x00\x00<B@@@B<\x00\x00'],
 100:[b'\x00\x00\x02\x02:FBBBF:\x00\x00'],
 101:[b'\x00\x00\x00\x00<BB~@B<\x00\x00'],
 102:[b'\x00\x00\x0c\x10\x10|\x10\x10\x10\x10\x10\x00\x00'],
 103:[b'\x00\x00\x00\x00:DDD8 \\B<'],
 104:[b'\x00\x00@@\\bBBBBB\x00\x00'],
 105:[b'\x00\x10\x10\x000\x10\x10\x10\x10\x10|\x00\x00'],
 106:[b'\x00\x04\x04\x00\x0c\x04\x04\x04\x04\x04DD8'],
 107:[b'\x00\x00@@DHP`PHD\x00\x00'],
 108:[b'\x00\x000\x10\x10\x10\x10\x10\x10\x10|\x00\x00'],
 109:[b'\x00\x00\x00\x00hTTTTTD\x00\x00'],
 110:[b'\x00\x00\x00\x00\\bBBBBB\x00\x00'],
 111:[b'\x00\x00\x00\x00<BBBBB<\x00\x00'],
 112:[b'\x00\x00\x00\x00\\bBBBb\\@@'],
 113:[b'\x00\x00\x00\x00:FBBBF:\x02\x02'],
 114:[b'\x00\x00\x00\x00\\bB@@@@\x00\x00'],
 115:[b'\x00\x00\x00\x00<B@<\x02B<\x00\x00'],
 116:[b'\x00\x00\x10\x10|\x10\x10\x10\x10\x12\x0c\x00\x00'],
 117:[b'\x00\x00\x00\x00BBBBBF:\x00\x00'],
 118:[b'\x00\x00\x00\x00DDD((\x10\x10\x00\x00'],
 119:[b'\x00\x00\x00\x00DTTTTT(\x00\x00'],
 120:[b'\x00\x00\x00\x00DD(\x10(DD\x00\x00'],
 121:[b'\x00\x00\x00\x00BBBBF:\x02\x02<'],
 122:[b'\x00\x00\x00\x00~\x04\x08\x10 @~\x00\x00'],
 123:[b'\x00\x0c\x10\x10\x08\x08\x10\x08\x08\x10\x10\x0c\x00'],
 124:[b'\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10'],
 125:[b'\x00`\x10\x10  \x10  \x10\x10`\x00'],
 126:[b'\x00\x002L\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

