'''
    ezFBfont_b12_b_r : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original b12_b.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(c) Copyright 2000-2003 /efont/ The Electronic Font Open Laboratory."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: b12_b Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
# Cmd: ['bdf2dict.py', 'bdf-sources/b12_b.bdf', '../latin-1/r-char.set']
# Date: 2024-06-04 14:20:14

version = '0.33'
name = '-Efont-Biwidth-Bold-R-Normal--12-120-75-75-P-60-ISO10646-1'
family = 'Biwidth'
weight = 'Bold'
size = 12

def height():
    return 10

def baseline():
    return 8

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 126

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x0000000\x000\x00\x00'],
 34:[b'hhh\x00\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00\x00h\xfchh\xfch\x00\x00'],
 36:[b'0x\xd4\xd0x4\xd4x0\x00'],
 37:[b'\x00\xec\xec\x180`\xdc\xdc\x00\x00'],
 38:[b'\x00`\xd0\xd0`\xd4\xd8t\x00\x00'],
 39:[b'000\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x1800```00\x18\x00'],
 41:[b'`00\x18\x18\x1800`\x00'],
 42:[b'\x000\xd4x0x\xd40\x00\x00'],
 43:[b'\x00\x0000\xfc00\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00pp\xe0\x00'],
 45:[b'\x00\x00\x00\x00\xfc\x00\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00pp\x00\x00'],
 47:[b'\x00\x0c\x18\x180``\xc0\x00\x00'],
 48:[b'\x008lllll8\x00\x00'],
 49:[b'\x000p0000x\x00\x00'],
 50:[b'\x00x\xcc\x0c\x180`\xfc\x00\x00'],
 51:[b'\x00\xfc\x0c\x188\x0c\xccx\x00\x00'],
 52:[b'\x00\x188h\xd8\xfc\x18\x18\x00\x00'],
 53:[b'\x00\xfc\xc0\xf8\x0c\x0c\xccx\x00\x00'],
 54:[b'\x008`\xc0\xf8\xcc\xccx\x00\x00'],
 55:[b'\x00\xfc\x0c\x18\x18000\x00\x00'],
 56:[b'\x00x\xcc\xccx\xcc\xccx\x00\x00'],
 57:[b'\x00x\xcc\xcc|\x0c\x18p\x00\x00'],
 58:[b'\x00\x00\x00pp\x00pp\x00\x00'],
 59:[b'\x00\x00\x00pp\x00pp\xe0\x00'],
 60:[b'\x00\x00\x180`0\x18\x00\x00\x00'],
 61:[b'\x00\x00\x00\xfc\x00\xfc\x00\x00\x00\x00'],
 62:[b'\x00\x00`0\x180`\x00\x00\x00'],
 63:[b'\x00x\xcc\x1800\x000\x00\x00'],
 64:[b'\x00x\xcc\xdc\xd4\xdc\xc0x\x00\x00'],
 65:[b'\x00x\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 66:[b'\x00\xf8llxll\xf8\x00\x00'],
 67:[b'\x00x\xcc\xc0\xc0\xc0\xccx\x00\x00'],
 68:[b'\x00\xf8lllll\xf8\x00\x00'],
 69:[b'\x00\xfc\xc0\xc0\xf8\xc0\xc0\xfc\x00\x00'],
 70:[b'\x00\xfc\xc0\xc0\xf8\xc0\xc0\xc0\x00\x00'],
 71:[b'\x00x\xcc\xc0\xc0\xdc\xccx\x00\x00'],
 72:[b'\x00\xcc\xcc\xcc\xfc\xcc\xcc\xcc\x00\x00'],
 73:[b'\x00x00000x\x00\x00'],
 74:[b'\x00<\x18\x18\x18\x18\xd8p\x00\x00'],
 75:[b'\x00\xcc\xd8\xd0\xe0\xd0\xd8\xcc\x00\x00'],
 76:[b'\x00\xc0\xc0\xc0\xc0\xc0\xc0\xfc\x00\x00'],
 77:[b'\x00\xcc\xec\xd4\xcc\xcc\xcc\xcc\x00\x00'],
 78:[b'\x00\xcc\xcc\xec\xd4\xdc\xcc\xcc\x00\x00'],
 79:[b'\x00x\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 80:[b'\x00\xf8\xcc\xcc\xf8\xc0\xc0\xc0\x00\x00'],
 81:[b'\x00x\xcc\xcc\xcc\xd4\xd8t\x00\x00'],
 82:[b'\x00\xf8\xcc\xcc\xf8\xd0\xd8\xcc\x00\x00'],
 83:[b'\x00x\xcc\xc0x\x0c\xccx\x00\x00'],
 84:[b'\x00\xfc000000\x00\x00'],
 85:[b'\x00\xcc\xcc\xcc\xcc\xcc\xccx\x00\x00'],
 86:[b'\x00\xcc\xcc\xcc\xcchh0\x00\x00'],
 87:[b'\x00\xcc\xcc\xcc\xcc\xd4\xd4h\x00\x00'],
 88:[b'\x00\xcc\xcch0h\xcc\xcc\x00\x00'],
 89:[b'\x00\xcc\xcch0000\x00\x00'],
 90:[b'\x00\xfc\x0c\x180`\xc0\xfc\x00\x00'],
 91:[b'x```````x\x00'],
 92:[b'\x00\xc0``0\x18\x18\x0c\x00\x00'],
 93:[b'x\x18\x18\x18\x18\x18\x18\x18x\x00'],
 94:[b'0h\xcc\x00\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc'],
 96:[b'`0\x18\x00\x00\x00\x00\x00\x00\x00'],
 97:[b'\x00\x00\x00x\x0c|\xcc|\x00\x00'],
 98:[b'\x00\xc0\xc0\xf8\xcc\xcc\xcc\xf8\x00\x00'],
 99:[b'\x00\x00\x00x\xcc\xc0\xccx\x00\x00'],
 100:[b'\x00\x0c\x0c|\xcc\xcc\xcc|\x00\x00'],
 101:[b'\x00\x00\x00x\xcc\xf8\xc0x\x00\x00'],
 102:[b'\x008l`\xf0```\x00\x00'],
 103:[b'\x00\x00\x00x\xcc\xcc\xcc|\x0cx'],
 104:[b'\x00\xc0\xc0\xf8\xcc\xcc\xcc\xcc\x00\x00'],
 105:[b'\x000\x00p000x\x00\x00'],
 106:[b'\x00\x0c\x00\x1c\x0c\x0c\x0c\x0cl8'],
 107:[b'\x00\xc0\xc0\xcc\xd8\xf0\xd8\xcc\x00\x00'],
 108:[b'\x00p00000x\x00\x00'],
 109:[b'\x00\x00\x00\xe8\xd4\xd4\xd4\xd4\x00\x00'],
 110:[b'\x00\x00\x00\xd8\xec\xcc\xcc\xcc\x00\x00'],
 111:[b'\x00\x00\x00x\xcc\xcc\xccx\x00\x00'],
 112:[b'\x00\x00\x00\xf8\xcc\xcc\xcc\xf8\xc0\xc0'],
 113:[b'\x00\x00\x00|\xcc\xcc\xcc|\x0c\x0c'],
 114:[b'\x00\x00\x00\xd8\xec\xc0\xc0\xc0\x00\x00'],
 115:[b'\x00\x00\x00|\xc0x\x0c\xf8\x00\x00'],
 116:[b'\x0000\xfc000\x1c\x00\x00'],
 117:[b'\x00\x00\x00\xcc\xcc\xcc\xdct\x00\x00'],
 118:[b'\x00\x00\x00\xcc\xcc\xcch0\x00\x00'],
 119:[b'\x00\x00\x00\xcc\xcc\xd4\xd4h\x00\x00'],
 120:[b'\x00\x00\x00\xcch0h\xcc\x00\x00'],
 121:[b'\x00\x00\x00\xcc\xcc\xcch0`\xc0'],
 122:[b'\x00\x00\x00\xfc\x180`\xfc\x00\x00'],
 123:[b'\x18000`000\x18\x00'],
 124:[b'000000000\x00'],
 125:[b'`000\x18000`\x00'],
 126:[b'\x00\x00\x00l\xd4\xd8\x00\x00\x00\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

