'''
    ezFBfont_spleen_6x12_u : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original spleen-6x12.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "Copyright (c) 2018-2022, Frederic Cambus"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT /*
    COMMENT  * Spleen 6x12 1.9.1
    COMMENT  * Copyright (c) 2018-2022, Frederic Cambus
    COMMENT  * https://www.cambus.net/
    COMMENT  *
    COMMENT  * Created:      2020-04-08
    COMMENT  * Last Updated: 2021-03-12
    COMMENT  *
    COMMENT  * Spleen is released under the BSD 2-Clause license.
    COMMENT  * See LICENSE file for details.
    COMMENT  *
    COMMENT  * SPDX-License-Identifier: BSD-2-Clause
    COMMENT  */
'''
# Code generated by bdf2dict.py
# Font: spleen-6x12 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'
# Cmd: ['bdf2dict.py', 'bdf-sources/spleen-6x12.bdf', '../latin-1/u-char.set']
# Date: 2024-06-04 14:21:27

version = '0.33'
name = '-misc-spleen-medium-r-normal--12-120-72-72-C-60-ISO10646-1'
family = 'Spleen'
weight = 'Medium'
size = 12

def height():
    return 10

def baseline():
    return 9

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x00      \x00 \x00'],
 34:[b'\x00PPP\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00\x00P\xf8PPP\xf8P\x00'],
 36:[b' x\xa0\xa0p(((\xf0 '],
 37:[b'\x00\x08HP\x10 (H@\x00'],
 38:[b'\x000HH0`\x94\x88t\x00'],
 39:[b'\x00   \x00\x00\x00\x00\x00\x00'],
 40:[b'\x18 @@@@@@ \x18'],
 41:[b'`\x10\x08\x08\x08\x08\x08\x08\x10`'],
 42:[b'\x00\x00\x00H0\xfc0H\x00\x00'],
 43:[b'\x00\x00\x00  \xf8  \x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x00\x00  @'],
 45:[b'\x00\x00\x00\x00\x00\xf8\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x00\x00\x00 \x00'],
 47:[b'\x08\x08\x10\x10  @@\x80\x80'],
 48:[b'\x00p\x88\x98\xa8\xc8\x88\x88p\x00'],
 49:[b'\x00 `     p\x00'],
 50:[b'\x00p\x88\x08\x08p\x80\x80\xf8\x00'],
 51:[b'\x00p\x88\x080\x08\x08\x88p\x00'],
 52:[b'\x00\x80\x80\x90\x90\x90\xf8\x10\x10\x00'],
 53:[b'\x00\xf8\x80\x80\xf0\x08\x08\x08\xf0\x00'],
 54:[b'\x00p\x80\x80\xf0\x88\x88\x88p\x00'],
 55:[b'\x00\xf8\x88\x08\x10    \x00'],
 56:[b'\x00p\x88\x88p\x88\x88\x88p\x00'],
 57:[b'\x00p\x88\x88\x88x\x08\x08p\x00'],
 58:[b'\x00\x00\x00\x00 \x00\x00\x00 \x00'],
 59:[b'\x00\x00\x00\x00 \x00\x00  @'],
 60:[b'\x00\x08\x10 @@ \x10\x08\x00'],
 61:[b'\x00\x00\x00\x00\xf8\x00\xf8\x00\x00\x00'],
 62:[b'\x00@ \x10\x08\x08\x10 @\x00'],
 63:[b'\x00p\x88\x08\x10  \x00 \x00'],
 64:[b'\x00p\x88\x88\xb8\xb8\xb8\x80x\x00'],
 65:[b'\x00p\x88\x88\x88\xf8\x88\x88\x88\x00'],
 66:[b'\x00\xf0\x88\x88\xf0\x88\x88\x88\xf0\x00'],
 67:[b'\x00x\x80\x80\x80\x80\x80\x80x\x00'],
 68:[b'\x00\xf0\x88\x88\x88\x88\x88\x88\xf0\x00'],
 69:[b'\x00x\x80\x80\xf0\x80\x80\x80x\x00'],
 70:[b'\x00x\x80\x80\xf0\x80\x80\x80\x80\x00'],
 71:[b'\x00x\x80\x80\xb8\x88\x88\x88x\x00'],
 72:[b'\x00\x88\x88\x88\xf8\x88\x88\x88\x88\x00'],
 73:[b'\x00p      p\x00'],
 74:[b'\x00p      \xc0\x00'],
 75:[b'\x00\x88\x88\x90\xe0\x90\x88\x88\x88\x00'],
 76:[b'\x00\x80\x80\x80\x80\x80\x80\x80x\x00'],
 77:[b'\x00\x88\xd8\xf8\xa8\x88\x88\x88\x88\x00'],
 78:[b'\x00\x88\xc8\xc8\xa8\xa8\x98\x98\x88\x00'],
 79:[b'\x00p\x88\x88\x88\x88\x88\x88p\x00'],
 80:[b'\x00\xf0\x88\x88\x88\xf0\x80\x80\x80\x00'],
 81:[b'\x00p\x88\x88\x88\x88\x88\x88p\x18'],
 82:[b'\x00\xf0\x88\x88\x88\xf0\x88\x88\x88\x00'],
 83:[b'\x00x\x80\x80p\x08\x08\x08\xf0\x00'],
 84:[b'\x00\xf8       \x00'],
 85:[b'\x00\x88\x88\x88\x88\x88\x88\x88x\x00'],
 86:[b'\x00\x88\x88\x88\x88\x88\x88pp\x00'],
 87:[b'\x00\x88\x88\x88\x88\xa8\xf8\xd8\x88\x00'],
 88:[b'\x00\x88\x88P P\x88\x88\x88\x00'],
 89:[b'\x00\x88\x88\x88\x88x\x08\x08\xf0\x00'],
 90:[b'\x00\xf8\x08\x10 @\x80\x80\xf8\x00'],
 91:[b'x@@@@@@@@x'],
 92:[b'\x80\x80@@  \x10\x10\x08\x08'],
 93:[b'x\x08\x08\x08\x08\x08\x08\x08\x08x'],
 94:[b'\x00 P\x88\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

