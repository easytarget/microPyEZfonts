'''
    ezFBfont_b12_u : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original b12.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "(c) Copyright 2000-2003 /efont/ The Electronic Font Open Laboratory."

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: b12 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'
# Cmd: ['bdf2dict.py', 'bdf-sources/b12.bdf', '../latin-1/u-char.set']
# Date: 2024-06-04 14:20:07

version = '0.33'
name = '-Efont-Biwidth-Medium-R-Normal--12-120-75-75-P-60-ISO10646-1'
family = 'Biwidth'
weight = 'Medium'
size = 12

def height():
    return 10

def baseline():
    return 8

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 32

def max_ch():
    return 95

_g = {
 32:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'],
 33:[b'\x00\x10\x10\x10\x10\x10\x00\x10\x00\x00'],
 34:[b'(((\x00\x00\x00\x00\x00\x00\x00'],
 35:[b'\x00\x00(|((|(\x00\x00'],
 36:[b'\x108TP8\x14T8\x10\x00'],
 37:[b'\x00dd\x08\x10 LL\x00\x00'],
 38:[b'\x00 PP TH4\x00\x00'],
 39:[b'\x10\x10\x10\x00\x00\x00\x00\x00\x00\x00'],
 40:[b'\x08\x10\x10   \x10\x10\x08\x00'],
 41:[b' \x10\x10\x08\x08\x08\x10\x10 \x00'],
 42:[b'\x00\x10T8\x108T\x10\x00\x00'],
 43:[b'\x00\x00\x10\x10|\x10\x10\x00\x00\x00'],
 44:[b'\x00\x00\x00\x00\x00\x0000`\x00'],
 45:[b'\x00\x00\x00\x00|\x00\x00\x00\x00\x00'],
 46:[b'\x00\x00\x00\x00\x00\x0000\x00\x00'],
 47:[b'\x00\x04\x08\x08\x10  @\x00\x00'],
 48:[b'\x00\x18$$$$$\x18\x00\x00'],
 49:[b'\x00\x100\x10\x10\x10\x108\x00\x00'],
 50:[b'\x008D\x04\x08\x10 |\x00\x00'],
 51:[b'\x00|\x04\x08\x18\x04D8\x00\x00'],
 52:[b'\x00\x08\x18(H|\x08\x08\x00\x00'],
 53:[b'\x00|@x\x04\x04D8\x00\x00'],
 54:[b'\x00\x18 @xDD8\x00\x00'],
 55:[b'\x00|\x04\x08\x08\x10\x10\x10\x00\x00'],
 56:[b'\x008DD8DD8\x00\x00'],
 57:[b'\x008DD<\x04\x080\x00\x00'],
 58:[b'\x00\x00\x0000\x0000\x00\x00'],
 59:[b'\x00\x00\x0000\x0000`\x00'],
 60:[b'\x00\x00\x08\x10 \x10\x08\x00\x00\x00'],
 61:[b'\x00\x00\x00|\x00|\x00\x00\x00\x00'],
 62:[b'\x00\x00 \x10\x08\x10 \x00\x00\x00'],
 63:[b'\x008D\x08\x10\x10\x00\x10\x00\x00'],
 64:[b'\x008D\\T\\@8\x00\x00'],
 65:[b'\x008DD|DDD\x00\x00'],
 66:[b'\x00x$$8$$x\x00\x00'],
 67:[b'\x008D@@@D8\x00\x00'],
 68:[b'\x00x$$$$$x\x00\x00'],
 69:[b'\x00|@@x@@|\x00\x00'],
 70:[b'\x00|@@x@@@\x00\x00'],
 71:[b'\x008D@@LD8\x00\x00'],
 72:[b'\x00DDD|DDD\x00\x00'],
 73:[b'\x008\x10\x10\x10\x10\x108\x00\x00'],
 74:[b'\x00\x1c\x08\x08\x08\x08H0\x00\x00'],
 75:[b'\x00DHP`PHD\x00\x00'],
 76:[b'\x00@@@@@@|\x00\x00'],
 77:[b'\x00DlTDDDD\x00\x00'],
 78:[b'\x00DDdTLDD\x00\x00'],
 79:[b'\x008DDDDD8\x00\x00'],
 80:[b'\x00xDDx@@@\x00\x00'],
 81:[b'\x008DDDTH4\x00\x00'],
 82:[b'\x00xDDxPHD\x00\x00'],
 83:[b'\x008D@8\x04D8\x00\x00'],
 84:[b'\x00|\x10\x10\x10\x10\x10\x10\x00\x00'],
 85:[b'\x00DDDDDD8\x00\x00'],
 86:[b'\x00DDDD((\x10\x00\x00'],
 87:[b'\x00DDDDTT(\x00\x00'],
 88:[b'\x00DD(\x10(DD\x00\x00'],
 89:[b'\x00DD(\x10\x10\x10\x10\x00\x00'],
 90:[b'\x00|\x04\x08\x10 @|\x00\x00'],
 91:[b'8       8\x00'],
 92:[b'\x00@  \x10\x08\x08\x04\x00\x00'],
 93:[b'8\x08\x08\x08\x08\x08\x08\x088\x00'],
 94:[b'\x10(D\x00\x00\x00\x00\x00\x00\x00'],
 95:[b'\x00\x00\x00\x00\x00\x00\x00\x00\x00|'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), max_width()

