'''
    ezFBfont_m2icon_5_u : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original m2icon_5.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "public domain"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    COMMENT http://code.google.com/p/u8glib/
'''
INFO: Bad glyph box for char# 65
INFO: Bad glyph box for char# 66
# Code generated by bdf2dict.py
# Font: m2icon_5 Char set: b' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'
# Cmd: ['bdf2dict.py', 'bdf-sources/m2icon_5.bdf', '../latin-1/u-char.set']
# Date: 2024-06-04 14:21:02

version = '0.33'
name = 'm2icon5'
family = ''
weight = 'Medium'
size = None

def height():
    return 5

def baseline():
    return 5

def max_width():
    return 9

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 65

def max_ch():
    return 83

_g = {
 65:[b'\x1c\x00\xfe\x00\x82\x00\x82\x00\xfe\x00',9],
 66:[b'p\xd0\x90\x90\xf0',8],
 67:[b'\x00\xd8pp\xd8',6],
 68:[b'\x06\x0c\xd8p ',8],
 69:[b'\x00\xf0\x90\x90\xf0',5],
 70:[b'\x00\xf0\x90\xd0\xf0',5],
 71:[b'\x00\xf0\xf0\xf0\xf0',5],
 72:[b'\xf8\x88\x88\x88\xf8',6],
 73:[b'\xf8\x88\xa8\x88\xf8',6],
 74:[b'\xf8\xf8\xf8\xf8\xf8',6],
 75:[b'\x00\xe0\xb0\xf0p',5],
 76:[b'\x00\xe0\xb0\xf0p',5],
 77:[b'\x00\xe0\xf0\xf0p',5],
 78:[b'\xf0\x98\x98\xf8x',6],
 79:[b'\xf0\x98\xd8\xf8x',6],
 80:[b'\xf0\xf8\xf8\xf8x',6],
 81:[b'\x00`\x90\x90`',5],
 82:[b'\x00`\x90\xd0`',5],
 83:[b'\x00`\xf0\xf0`',5],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), height(), _g[c][1]

