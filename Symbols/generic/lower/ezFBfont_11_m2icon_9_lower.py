'''
    ezFBfont_11_m2icon_9_lower : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original m2icon_9.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: m2icon_9
# Cmd: ['bdf2dict.py'], ['Symbols-bdf-sources/m2icon_9.bdf', '_', './lower-char.set']
# Date: 2024-06-18 20:28:21
'''
    Original Copyright, Comments and Notices from source:

    COPYRIGHT http://code.google.com/p/u8glib/

    COMMENT "public domain"
'''
version = '0.33'
name = 'm2icon_9'
family = ''
weight = 'medium'
size = None

def height():
    return 11

def baseline():
    return 9

def max_width():
    return 13

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 65

def max_ch():
    return 104

_g = {
  65:b'\x00\x00\x0f\x80\xff\xc0\x80@\x80@\x80@\x80@\x80@\xff\xc0\x00\x00\x00\x00\x0b',
  66:b'\x00<T\x94\xf4\x84\x84\x84\xfc\x00\x00\x07',
  67:b'\x00\x00\x00\xccx0x\xcc\x00\x00\x00\x07',
  68:b'\x00\x00\x00\x00\x00\xc0\x01\x80\x03\x00\xc6\x00l\x008\x00\x10\x00\x00\x00\x00\x00\x0c',
  69:b'\x00\x00\xff\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\xff\x00\x00\x00\x00\x00\t',
  70:b'\x00\x00\xff\x00\x81\x00\xbd\x00\xbd\x00\xbd\x00\xbd\x00\x81\x00\xff\x00\x00\x00\x00\x00\t',
  71:b'\x00\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\x00\x00\x00\x00\t',
  72:b'\xff\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\xff\x80\x00\x00\x00\x00\n',
  73:b'\xff\x80\x80\x80\xbe\x80\xbe\x80\xbe\x80\xbe\x80\xbe\x80\x80\x80\xff\x80\x00\x00\x00\x00\n',
  74:b'\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\x00\x00\x00\x00\x0b',
  75:b'\x00\xfe\x83\x83\x83\x83\x83\xff\x7f\x00\x00\x08',
  76:b'\x00\x00\xfe\x00\x83\x00\xbb\x00\xbb\x00\xbb\x00\x83\x00\xff\x00\x7f\x00\x00\x00\x00\x00\t',
  77:b'\x00\x00\xfe\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\x7f\x00\x00\x00\x00\x00\t',
  78:b'\xff\x00\x81\x80\x81\x80\x81\x80\x81\x80\x81\x80\x81\x80\xff\x80\x7f\x80\x00\x00\x00\x00\n',
  79:b'\xff\x00\x81\x80\xbd\x80\xbd\x80\xbd\x80\xbd\x80\x81\x80\xff\x80\x7f\x80\x00\x00\x00\x00\n',
  80:b'\xff\x00\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\x7f\x80\x00\x00\x00\x00\n',
  81:b'\x00\x00<\x00B\x00\x81\x00\x81\x00\x81\x00\x81\x00B\x00<\x00\x00\x00\x00\x00\t',
  82:b'\x00\x00<\x00B\x00\x99\x00\xbd\x00\xbd\x00\x99\x00B\x00<\x00\x00\x00\x00\x00\t',
  83:b'\x00\x00<\x00~\x00\xff\x00\xff\x00\xff\x00\xff\x00~\x00<\x00\x00\x00\x00\x00\t',
  97:b'\x00\x00\x18\x00(\x00O\xc0\x80@\x80@O\xc0(\x00\x18\x00\x00\x00\x00\x00\x0b',
  98:b'\x18\x00$\x00B\x00\x81\x00\xe7\x00$\x00$\x00$\x00<\x00\x00\x00\x00\x00\t',
  102:b'\x00\x00\x0f\x80\xff\xc0\x80@\x80@\x9f\xf8\xa0\x10\xc0 \xff\xc0\x00\x00\x00\x00\r',
  103:b'\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x02',
  104:b'\x08\x00\x00\x00\x08\x00\x08\x00\xbe\x80\x08\x00\x08\x00\x00\x00\x08\x00\x00\x00\x00\x00\n',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 11, int(_g[c][-1])
