'''
    ezFBfont_16_open_iconic_play_2x_lower : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_play_2x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: open_iconic_play_2x
# Cmd: [bdf2dict.py], ['Symbols-bdf-sources/open_iconic_play_2x.bdf', './lower-char.set', 'True']
# Date: 2024-06-11 17:21:32

version = '0.33'
name = '"open_iconic_play_2x"'
family = 'None'
weight = 'None'
size = None

def height():
    return 16

def baseline():
    return 16

def max_width():
    return 16

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 64

def max_ch():
    return 81

_g = {
 64:[b'\x00\xc0\x00\xc0\x0c\xc0\x0c\xc0\x0c\xcc\x0c\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\x0c\xcc\x0c\xcc\x0c\xc0\x0c\xc0\x00\xc0\x00\xc0'],
 65:[b'\x00\x0c\x00L\x01\xcc\x07\xcc\xff\xcc\xff\xcc\xff\xcc\xff\xcc?\xcc\x19\xcc\x18L\x18\x0c\x0c\x00\x0c\x00\x00\x00\x00\x00'],
 66:[b'\x00\x00\x01\x80\x03\xc0\x07\xe0\x0f\xf0\x0f\xf0\x1f\xf8?\xfc\x7f\xfe\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff'],
 67:[b'\x03\xc0\x0f\xf0\x1c8\x18\x180\x0c0\x0c0\x0c0\x0c\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\x00\x00\x00\x00'],
 68:[b'\x00\x00\x00\x00<<<<<<<<<<<<<<<<<<<<<<<<\x00\x00\x00\x00'],
 69:[b'\x00\x00\x00\x00 \x008\x00>\x00?\x80?\xe0?\xf8?\xf8?\xe0?\x80>\x008\x00 \x00\x00\x00\x00\x00'],
 70:[b'\x00\x00\x00\x00\x03\xc0\x0f\xf0\x1f\xf8\x1f\xf8?\xfc?\xfc?\xfc?\xfc\x1f\xf8\x1f\xf8\x0f\xf0\x03\xc0\x00\x00\x00\x00'],
 71:[b'\x00\x00\x00\x00\x01\x01\x03\x03\x07\x07\x1f\x1f??\x7f\x7f\x7f\x7f??\x1f\x1f\x07\x07\x03\x03\x01\x01\x00\x00\x00\x00'],
 72:[b'\x00\x00\x00\x00\x80\x80\xc0\xc0\xe0\xe0\xf8\xf8\xfc\xfc\xfe\xfe\xfe\xfe\xfc\xfc\xf8\xf8\xe0\xe0\xc0\xc0\x80\x80\x00\x00\x00\x00'],
 73:[b'\x00\x00\x00\x00\xf0\x04\xf0\x0c\xf0<\xf0\xfc\xf1\xfc\xf7\xfc\xf7\xfc\xf1\xfc\xf0\xfc\xf0<\xf0\x0c\xf0\x04\x00\x00\x00\x00'],
 74:[b'\x00\x00\x00\x00\x80<\xc0<\xf0<\xfc<\xfe<\xff\xbc\xff\xbc\xfe<\xfc<\xf0<\xc0<\x80<\x00\x00\x00\x00'],
 75:[b'\x00\x00\x00\x00?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc\x00\x00\x00\x00'],
 76:[b'\x01\x80\x03\xc0\x03\xc0\x03\xc03\xcc3\xcc3\xcc1\x8c\x18\x18\x1c8\x0f\xf0\x03\xc0\x01\x80\x01\x80\x07\xe0\x0f\xf0'],
 77:[b'\x00\x7f\x07\xff\x0f\xff\x0f\xff\x0f\x03\x0c\x03\x0c\x03\x0c\x03\x0c\x1f\x0c?|?\xfc?\xfc?\xfc\x1e\xfc\x00x\x00'],
 78:[b'\x07\xe0\x1f\xf8?\xfc\x7f\xfe}\xfe\xfc\xff\xfc?\xfc\x1f\xfc\x1f\xfc?\xfc\xff}\xfe\x7f\xfe?\xfc\x1f\xf8\x07\xe0'],
 79:[b'\x03\x00\x03\x00\x070\x0f<\xff\x0e\xff\x06\xff#\xff3\xff3\xff#\xff\x06\xff\x0e\x0f<\x070\x03\x00\x03\x00'],
 80:[b'\x00\xc0\x00\xc0\x01\xc0\x03\xc0?\xc0?\xc0?\xc8?\xcc?\xcc?\xc8?\xc0?\xc0\x03\xc0\x01\xc0\x00\xc0\x00\xc0'],
 81:[b'\x000\x000\x00p\x00\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x00\xf0\x00p\x000\x000'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 16, 16

