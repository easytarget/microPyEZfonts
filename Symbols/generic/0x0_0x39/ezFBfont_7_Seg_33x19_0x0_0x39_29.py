'''
    ezFBfont_7_Seg_33x19_0x0_0x39_29 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original 7_Seg_33x19.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: 7_Seg_33x19
# Cmd: ['bdf2dict.py'], ['Symbols-bdf-sources/7_Seg_33x19.bdf', '_', './0x0_0x39-char.set']
# Date: 2024-07-31 15:36:07
'''
    Original Copyright, Comments and Notices from source:

    COPYRIGHT Exported by Fony v1.4.0.2

    COMMENT "Created with Fony 1.4.0.2"
'''
version = '0.33'
name = '7_seg_33x19'
family = 'generic'
weight = 'none'
size = None

def height():
    return 29

def baseline():
    return 29

def max_width():
    return 19

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 43

def max_ch():
    return 58

_g = {
  43:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x07\x00\x07\x00?\xe0?\xe0?\xe0\x07\x00\x07\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r',
  44:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00888\x07',
  45:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\xe0?\xe0?\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r',
  46:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00888\x07',
  48:b'\x1f\xff\x00/\xfe\x807\xfd\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x800\x01\x80 \x00\x80\x00\x00\x00 \x00\x800\x01\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x807\xfd\x80/\xfe\x80\x1f\xff\x00\x13',
  49:b'\x00\x00\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x00\x00\x80\x00\x00\x00\x00\x00\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x00\x01\x80\x00\x00\x80\x13',
  50:b'?\xff\x00\x1f\xfe\x80\x0f\xfd\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x0f\xfe\x80\x1f\xff\x00/\xfe\x000\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x007\xfe\x00/\xff\x00\x1f\xff\x80\x13',
  51:b'?\xff\x00\x1f\xfe\x80\x0f\xfd\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x0f\xfe\x80\x1f\xff\x00\x0f\xfe\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x0f\xfd\x80\x1f\xfe\x80?\xff\x00\x13',
  52:b' \x00\x800\x01\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x800\x01\x80/\xfe\x80\x1f\xff\x00\x0f\xfe\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x00\x00\x80\x13',
  53:b'\x1f\xff\x80/\xff\x007\xfe\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x000\x00\x00/\xfe\x00\x1f\xff\x00\x0f\xfe\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x0f\xfd\x80\x1f\xfe\x80?\xff\x00\x13',
  54:b'\x1f\xff\x80/\xff\x007\xfe\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x008\x00\x000\x00\x00/\xfe\x00\x1f\xff\x00/\xfe\x800\x01\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x807\xfd\x80/\xfe\x80\x1f\xff\x00\x13',
  55:b'?\xff\x00\x1f\xfe\x80\x0f\xfd\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x00\x00\x80\x00\x00\x00\x00\x00\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x01\x80\x00\x00\x80\x13',
  56:b'\x1f\xff\x00/\xfe\x807\xfd\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x800\x01\x80/\xfe\x80\x1f\xff\x00/\xfe\x800\x01\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x807\xfd\x80/\xfe\x80\x1f\xff\x00\x13',
  57:b'\x1f\xff\x00/\xfe\x807\xfd\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x808\x03\x800\x01\x80/\xfe\x80\x1f\xff\x00\x0f\xfe\x80\x00\x01\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x00\x03\x80\x0f\xfd\x80\x1f\xfe\x80?\xff\x00\x13',
  58:b'\x00\x00\x00\x00\x00\x00\x00888\x00\x00\x00\x00\x00\x00\x00\x00\x00888\x00\x00\x00\x00\x00\x00\x00\x07',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 29, int(_g[c][-1])
