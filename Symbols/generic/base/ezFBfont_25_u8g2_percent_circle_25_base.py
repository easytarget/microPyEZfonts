'''
    ezFBfont_25_u8g2_percent_circle_25_base : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original u8g2_percent_circle_25.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    Original Copyright information from source:
    COPYRIGHT "unknown"

    Original Comments and Notices from source:
    (may include copyright and trademark info):
    None found
'''
# Code generated by bdf2dict.py
# Font: u8g2_percent_circle_25
# Cmd: [bdf2dict.py], ['Symbols-bdf-sources/u8g2_percent_circle_25.bdf', '_', './base-char.set']
# Date: 2024-06-13 11:39:11

version = '0.33'
name = '"unknown"'
family = 'None'
weight = 'None'
size = None

def height():
    return 25

def baseline():
    return 25

def max_width():
    return 25

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 48

def max_ch():
    return 56

_g = {
 48:[b'\x00\x08\x00\x00\x00\x7f\x00\x00\x01\x88\xc0\x00\x06\x000\x00\x08\x00\x08\x00\x10\x00\x04\x00\x10\x00\x04\x00 \x00\x02\x00 \x1c\x02\x00@\x14\x01\x00@\x14\x01\x00@\x14\x01\x00@\x14\x01\x00@\x1c\x01\x00@\x00\x01\x00@\x00\x01\x00 "\x02\x00 \x04\x02\x00\x10\x08\x04\x00\x10\x10\x04\x00\x08"\x08\x00\x06\x000\x00\x01\x80\xc0\x00\x00\x7f\x00\x00\x00\x00\x00\x00'],
 49:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x06\x00\xfc\x00\x08\x008\x00\x10\x00\x14\x00\x10\x00\x04\x00 \x00\x02\x00!q\xc2\x00A\x11\x01\x00Aq\xc1\x00A@A\x00A@A\x00Au\xc1\x00@\x04\x01\x00@\x00\x01\x00 "\x02\x00 \x04\x02\x00\x10\x08\x04\x00\x10\x10\x04\x00\x08"\x08\x00\x06\x000\x00\x01\x80\xc0\x00\x00\x7f\x00\x00\x00\x00\x00\x00'],
 50:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x06\x00\xfc\x00\x08\x00>\x00\x10\x00\x1e\x00\x10\x00\x0f\x00 \x00\x07\x80 w\x07\x80@\x14\x03\x80@w\x03\x80@A\x03\x80@A\x03\x80@w\x01\x00@\x00\x01\x00@\x00\x01\x00 "\x02\x00 \x04\x02\x00\x10\x08\x04\x00\x10\x10\x04\x00\x08"\x08\x00\x06\x000\x00\x01\x80\xc0\x00\x00\x7f\x00\x00\x00\x00\x00\x00'],
 51:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x06\x00\xfc\x00\x08\x00>\x00\x10\x00\x1e\x00\x10\x00\x0f\x00 \x00\x07\x80#\xb8\xe7\x80@\x88\x83\x80A\x88\xe3\x80@\x88#\x80@\x88#\x80C\x8a\xe3\x80@\x02\x03\x80@\x00\x03\x80 "\x07\x80 \x04\x07\x80\x10\x08\x0f\x00\x10\x10\x1e\x00\x08"\x0e\x00\x06\x004\x00\x01\x80\xc0\x00\x00\x7f\x00\x00\x00\x00\x00\x00'],
 52:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x06\x00\xfc\x00\x08\x00>\x00\x10\x00\x1e\x00\x10\x00\x0f\x00 \x00\x07\x80 w\x07\x80@E\x03\x80@u\x03\x80@\x15\x03\x80@\x15\x03\x80@w\x03\x80@\x00\x03\x80@\x00\x03\x80 "\x07\x80 \x04\x07\x80\x10\x08\x0f\x00\x10\x10\x1e\x00\x08">\x00\x06\x00\xfc\x00\x01\x8f\xf8\x00\x00\x7f\xe0\x00\x00\x0f\xc0\x00'],
 53:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x06\x00\xfc\x00\x08\x00>\x00\x10\x00\x1e\x00\x10\x00\x0f\x00 \x00\x07\x80#\xb8\xe7\x80B\x08\x83\x80C\xb8\xe3\x80B\xa0#\x80B\xa0#\x80C\xba\xe3\x80@\x02\x03\x80@\x00\x03\x80 "\x07\x80 \x04\x07\x80\x10\x08\x0f\x00\x14\x10\x1e\x00\x0e">\x00\x1f\x80\xfc\x00\x0f\xff\xf8\x00\x03\xff\xe0\x00\x01\xff\xc0\x00'],
 54:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x06\x00\xfc\x00\x08\x00>\x00\x10\x00\x1e\x00\x10\x00\x0f\x00 \x00\x07\x80 w\x07\x80@\x14\x03\x80@\x17\x03\x80@\x11\x03\x80\xe0\x11\x03\x80\xe0\x17\x03\x80\xe0\x00\x03\x80\xe0\x00\x03\x80\xf0"\x07\x80\xf0\x04\x07\x80x\x08\x0f\x00<\x10\x1e\x00>">\x00\x1f\x80\xfc\x00\x0f\xff\xf8\x00\x03\xff\xe0\x00\x01\xff\xc0\x00'],
 55:[b'\x00\x0f\xc0\x00\x00\x7f\xe0\x00\x01\x8f\xf8\x00\x16\x00\xfc\x008\x00>\x00<\x00\x1e\x00x\x00\x0f\x00\xf0\x00\x07\x80\xf3\xb8\xe7\x80\xe2\x88\x83\x80\xe3\x88\xe3\x80\xe2\x88#\x80\xe2\x88#\x80\xe3\x8a\xe3\x80\xe0\x02\x03\x80\xe0\x00\x03\x80\xf0"\x07\x80\xf0\x04\x07\x80x\x08\x0f\x00<\x10\x1e\x00>">\x00\x1f\x80\xfc\x00\x0f\xff\xf8\x00\x03\xff\xe0\x00\x01\xff\xc0\x00'],
 56:[b'\x01\xff\xc0\x00\x03\xff\xe0\x00\x0f\xff\xf8\x00\x1f\x80\xfc\x00>\x00>\x00<\x00\x1e\x00x\x00\x0f\x00\xf0\x00\x07\x80\xf0\xbb\x87\x80\xe0\xaa\x83\x80\xe0\xaa\x83\x80\xe0\xaa\x83\x80\xe0\xaa\x83\x80\xe0\xbb\x83\x80\xe0\x00\x03\x80\xe0\x00\x03\x80\xf0"\x07\x80\xf0\x04\x07\x80x\x08\x0f\x00<\x10\x1e\x00>">\x00\x1f\x80\xfc\x00\x0f\xff\xf8\x00\x03\xff\xe0\x00\x01\xff\xc0\x00'],
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c][0]), 25, 25

