'''
    ezFBfont_open_iconic_other_2x_0x40_0x79_16 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_other_2x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: open_iconic_other_2x
# Cmd: ['bdf2dict.py'], ['Symbols-bdf-sources/open_iconic_other_2x.bdf', '_', './0x40_0x79-char.set']
# Date: 2024-07-31 15:36:34
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"
'''
version = '0.33'
name = 'open_iconic_other_2x'
family = 'iconic'
weight = 'none'
size = None

def height():
    return 16

def baseline():
    return 16

def max_width():
    return 16

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 64

def max_ch():
    return 71

_g = {
  64:b'\x00\x00\x01\x00\x01\x00\x03\x00\x07\x00\x07\x00\x0f\xf0\x0f\xe0\x1f\xc0?\xc0\x03\x80\x03\x80\x03\x00\x02\x00\x02\x00\x00\x00',
  65:b'\x00\x00\x00\x00\x07\xe0\x1f\xf8<<p\x0ebF\xe7\xe7\xcf\xf3\xcf\xf3\x0f\xf0\x0f\xf0\x07\xe0\x03\xc0\x00\x00\x00\x00',
  66:b'xx\xfc\xfc\xfc\xfc\xfc\xfc\xfc\xfcxx0000?\xf0?\xe0x\x00\xfc\x00\xfc\x00\xfc\x00\xfc\x00x\x00',
  67:b'\xcc\xcc\xcc\xcc\x00\x00\x00\x00\xcc\xcc\xcc\xcc\x00\x00\x00\x00\xcc\xcc\xcc\xcc\x00\x00\x00\x00\xcc\xcc\xcc\xcc\x00\x00\x00\x00',
  68:b'\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf\x00\x00\x00\x00\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf\x00\x00\x00\x00\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf',
  69:b'\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\x00\x00\x00\x00\x00\x00\x00\x00\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?',
  70:b'\x00\x0c\x00\x0c\x00\xcc\x00\xcc\x00\xcc\x00\xcc\x0c\xcc\x0c\xcc\x0c\xcc\x0c\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc',
  71:b'\x07\xe0\x1f\xf8<<p\x0ec\xc6\xe7\xe7\xces\xcc3\xcc3\xces\xe7\xe7c\xc6p\x0e<<\x1f\xf8\x07\xe0',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 16, 16
