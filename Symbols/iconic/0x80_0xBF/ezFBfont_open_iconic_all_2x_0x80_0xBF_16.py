'''
    ezFBfont_open_iconic_all_2x_0x80_0xBF_16 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_all_2x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: open_iconic_all_2x
# Cmd: ['bdf2dict.py'], ['Symbols-bdf-sources/open_iconic_all_2x.bdf', '_', './0x80_0xBF-char.set']
# Date: 2024-07-31 15:36:12
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"
'''
version = '0.33'
name = 'open_iconic_all_2x'
family = 'iconic'
weight = 'none'
size = None

def height():
    return 16

def baseline():
    return 16

def max_width():
    return 16

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 128

def max_ch():
    return 191

_g = {
  128:b'\x00\x00\x00\x00\x000\x00`0l`\xc6`\xc6\xc1\x83\xc1\x83c\x06c\x066\x0c\x06\x00\x0c\x00\x00\x00\x00\x00',
  129:b'\x01\x80\x03\xc0;\xdc?\xfc?\xfc\x1c8x\x1e\xf8\x1f\xf8\x1fx\x1e\x1c8?\xfc?\xfc;\xdc\x03\xc0\x01\x80',
  130:b'\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x07\xe0\x03\xc0\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff',
  131:b'\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0O\xc0\xcf\xc1\xcf\xc1\xcf\xc0\xcf\xc0O\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f',
  132:b'\xf0\x03\xf0\x03\xf0\x03\xf0\x03\xf0\x03\xf2\x03\xf3\x03\xf3\x83\xf3\x83\xf3\x03\xf2\x03\xf0\x03\xf0\x03\xf0\x03\xf0\x03\xf0\x03',
  133:b'\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x80\x03\xc0\x07\xe0\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff',
  134:b'xx\xfc\xfc\xcc\xcc\xcc\xcc\xff\xfc\x7f\xf8\x0c\xc0\x0c\xc0\x7f\xf8\xff\xfc\xcc\xcc\xcc\xcc\xfc\xfcxx\x00\x00\x00\x00',
  135:b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x07\x00\x03\x00\x01\x00\x00',
  136:b'\x07\xe0\x1f\xf8<<p\x0e`\x16\xe0\xe7\xc3\xe3\xc2c\xc6C\xc7\xc3\xe7\x07h\x06p\x0e<<\x1f\xf8\x07\xe0',
  137:b'\x07\xe0\x1f\xf8?<\x7f\x0e\x7f\x06\xff\x07\xff\x03\xff\x03\xff\x03\xff\x03\xff\x07\x7f\x06\x7f\x0e?<\x1f\xf8\x07\xe0',
  138:b'\xff\xff\xff\xff\x00\x00\x00\x00\xff\xc0\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xf3\xff\xf3',
  139:b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xcc\xff\xcc\xff\xff\xff\xff\xff\x00\x00\x00\x00',
  140:b'0\x000\x02\xff\xfc\xff\xfc0\x1c0,0L0\x8c1\x0c2\x0c4\x0c8\x0c?\xff?\xff\x00\x0c\x00\x0c',
  141:b'\x07\xe0\x1f\xf8<<p\x0ea\x86\xe1\x87\xcc3\xce3\xc7\x83\xc3\xc3\xe3\xc7a\x86p\x0e<<\x1f\xf8\x07\xe0',
  142:b'\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x1f\xf8\x0f\xf0\x07\xe0\x03\xc0\x01\x80\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff',
  143:b'\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x01\x80\x03\xc0\x07\xe0\x0f\xf0\x1f\xf8\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0',
  144:b'\x00\x00\x00\x00\x0f\xff\x1f\xff<\xf3<c~\x07\xff\x0f\xff\x0f~\x07<c<\xf3\x1f\xff\x0f\xff\x00\x00\x00\x00',
  145:b'\x00\x00\x00\x00\x07\xe0\x1f\xf8<<p\x0ebF\xe7\xe7\xcf\xf3\xcf\xf3\x0f\xf0\x0f\xf0\x07\xe0\x03\xc0\x00\x00\x00\x00',
  146:b'\xfc\x00\xfc\x80\xfc\xc0\xfc\xe0\xcc\xf0\xcc\xf8\xfc\x00\xfc\x00\xcf\xfc\xcf\xfc\xff\xfc\xff\xfc\xc0<\xc0<\xff\xfc\xff\xfc',
  147:b'\x03\x00\x03\x00\x1f\xe0?\xf000008\x00\x1f\x80\x07\xe0\x00p0000?\xf0\x1f\xe0\x03\x00\x03\x00',
  148:b'\x00\x00\x00\x00\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xf8>\xf0<\xe08\xc00\x80 \x00\x00\x00\x00\x00\x00',
  149:b'\x00\x00\x00\x00\x00\x00\x04\x01\x0c\x03\x1c\x07<\x0f|\x1f\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\x00\x00\x00\x00',
  150:b'\x00\x00\x00\x00\x0c\x03<\x0fp\x1c`\x18\xc00\xc00\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\x00\x00\x00\x00',
  151:b'\x00\x00\x00\x00\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\x0c\x03\x0c\x03\x18\x068\x0e\xf0<\xc00\x00\x00\x00\x00',
  152:b'\x01\x00\x01\x80\x03\xc0\x07\xe0\x0f\xf0\x0f\xf0\x1f\xf8\x1f\xf8?\xfc?\xfc3\xfc3\xfc8\xfc\x18x\x0f\xf0\x07\xe0',
  153:b'\x00\x00\x01\x80\x03\xc0\x07\xe0\x0f\xf0\x0f\xf0\x1f\xf8?\xfc\x7f\xfe\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff',
  154:b'\x00\x00\x01\x80\x03\xc0\x07\xe0\x0f\xf0\x1f\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xf8\x0f\xf0\x07\xe0\x03\xc0\x01\x80\x00\x00',
  155:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  156:b'\x00\x00\x00\x00\xff\xff\xff\xff\x7f\xfe\x1f\xf8\x87\xe1\xe1\x87\xf8\x1f\xfe\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00',
  157:b'\x01\x80\x07\xe0\x1exx\x1e\xe0\x07\xc0\x03\xcf\xf3\xcf\xf3\xc7\xe3\xe1\x87\xf8\x1f\xfe\x7f\xff\xff\xff\xff\xff\xff\xff\xff',
  158:b'\x01\xf8\x07\xfc\x0f\x0c\x1c\x00\x18\x008\x00\xff\xe0\xff\xe00\x000\x00\xff\xc0\xff\xc0\x1c\x00\x0f\x0c\x07\xfc\x01\xf8',
  159:b'\xff\xfc\xff\xfc\x00\x00\x00\x00\xff\xc0\xff\xc0\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xcc\xc0\xcc\xc0\x00\x00\x00\x00',
  160:b'\xff\xff\xff\xff\x00\x00\x00\x00\x07\xe0\x03\xc0\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff',
  161:b'\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc8\x0f\xcc\x0f\xce\x0f\xce\x0f\xcc\x0f\xc8\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x0f',
  162:b'\xf0\x03\xf0\x03\xf0\x03\xf0\x03\xf0\x03\xf0\x13\xf03\xf0s\xf0s\xf03\xf0\x13\xf0\x03\xf0\x03\xf0\x03\xf0\x03\xf0\x03',
  163:b'\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x80\x03\xc0\x07\xe0\x00\x00\x00\x00\xff\xff\xff\xff',
  164:b'\xf0\x7f\xf0?\xc0\x1f\xc0\x1f\xc0?\xc0s\xc0\xe1\xc1\xc0\xc1\x80\xc0\x00\xc0\x00\xc0\x00\xc0\x03\xc0\x03\xff\xff\xff\xff',
  165:b'\x00\x00\x00\x00\x03\xc0\x0f\xf0\x1c88\x1cq\x0e\xf3\x0f\xf3\xcfq\x8e8\x1c\x1c8\x0f\xf0\x03\xc0\x00\x00\x00\x00',
  166:b'\x03\x1e\x03\xbf\x01\xff\x01\xff\x03\xff\x07>\x0e\x1c\x1c\x1e8?ps\xe0\xe0\xe1\xc0\xf3\x80\xff\x00\xfe\x00\xfc\x00',
  167:b'\xfc\x00\xfc\x80\xfc\xc0\xfc\xe0\xfc\xf0\xfc\xf8\xfc\x00\xfc\x00\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc',
  168:b'\x08\x00\x0c\x00\x0e\x00\x0e\x00\x1f\x00?\x00? \x7f0\xfe8\xfc8\xfc|\xf8\xfcp\xfcq\xfc3\xfc\x13\xf8',
  169:b'\xcf\xc0\xcf\xc0\xcf\xfe\xcf\xfe\xcf\xfc\xcf\xf8\xcf\xf0\xcf\xf8\xc0\xfc\xc0\xfe\xc0\x00\xc0\x00\xc0\x00\xc0\x00\xc0\x00\xc0\x00',
  170:b'\x01\xc0\x03\x80\x03\x80\x07\x00\x07\xf0\x0f\xe0\x00\xe0\x00\xc0\x01\xc0\x01\x80\x0f\xe0\x0f\xc0\x07\x80\x07\x00\x06\x00\x00\x00',
  171:b'\xfc\x00\xfc\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff',
  172:b'xx\xfc\xfc\xfc\xfc\xfc\xfc\xfc\xfcxx0000?\xf0?\xe0x\x00\xfc\x00\xfc\x00\xfc\x00\xfc\x00x\x00',
  173:b'\xfe\x00\xfc\x00\xf8\x00\xf8\x00\xfc\x00\xce\x00\x86\x00\x00\x00\x00\x00\x00a\x00s\x00?\x00\x1f\x00\x1f\x00?\x00\x7f',
  174:b'\x00\x00a\x00s\x00?\x00\x1f\x00\x1f\x00?\x00\x7f\x00\x00\xfe\x00\xfc\x00\xf8\x00\xf8\x00\xfc\x00\xce\x00\x86\x00\x00',
  175:b'\x07\xe0\x1f\xf8<||~x6\xf07\xe0?\xe0?\xc0\x7f\xc0\x7f\xf0\x1fx\x06|\x0e<<\x1f\xf8\x07\xe0',
  176:b'\x00\x02\x00\x07\x00\x0e\x00\x1c\x008\x06p\x0f\xe0\x1f\xc09\x80p\x00\xf0\x00`\x00\x00\x00\x00\x00\xff\xff\xff\xff',
  177:b'\xcc\xcc\xcc\xcc\x00\x00\x00\x00\xcc\xcc\xcc\xcc\x00\x00\x00\x00\xcc\xcc\xcc\xcc\x00\x00\x00\x00\xcc\xcc\xcc\xcc\x00\x00\x00\x00',
  178:b'\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf\x00\x00\x00\x00\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf\x00\x00\x00\x00\xf3\xcf\xf3\xcf\xf3\xcf\xf3\xcf',
  179:b'\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\x00\x00\x00\x00\x00\x00\x00\x00\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?',
  180:b'\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\xff\xfc\x00\x00\x00\x00\xff\xfc\xff\xfc\xff\xcc\xff\xcc\xff\xfc\xff\xfc',
  181:b'\xfc\xfc\xfc\xfc00000000?\xf0?\xf000000000\xfc\xfc\xfc\xfc\x00\x00\x00\x00',
  182:b'\x03\xc0\x0f\xf0\x1c8\x18\x180\x0c0\x0c0\x0c0\x0c\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\x00\x00\x00\x00',
  183:b'\x00\x00\x00\x00<<~~\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xfe?\xfc\x1f\xf8\x0f\xf0\x07\xe0\x03\xc0\x01\x80\x00\x00',
  184:b'\x01\x80\x03\xc0\x07\xe0\x1f\xf8?\xfc\x7f\xfe?\xfc?\xfc?\xfc?\xfc<<<<<<<<\x00\x00\x00\x00',
  185:b'\xff\xff\xff\xff\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xd8\x1b\xfc\x1f\xfe\x0f\xff\x07\xff\x83\xff\xc3\xff\xe3\xff\xff\xff\xff',
  186:b'\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xf0\x0f\xf8\x1f\xff\xff\xff\xff\xff\xff\xff\xff',
  187:b'\x00\x00\x00\x00\x00\x00\x00\x00<<~~\xe7\xe7\xc3\xc3\xc3\xc3\xe7\xe7~~<<\x00\x00\x00\x00\x00\x00\x00\x00',
  188:b'\x00`\x00\xf0\x00\xf0\x00`\x00\x00\x07\x80\x0f\xc0\x0c\xc0\x00\xc0\x01\xc0\x01\x80\x03\x80\x03\x00\x030\x03\xf0\x01\xe0',
  189:b'\x0f\xfc\x0f\xfc\x01\xe0\x01\xe0\x03\xe0\x03\xc0\x07\xc0\x07\x80\x07\x80\x0f\x80\x0f\x00\x1f\x00\x1e\x00\x1e\x00\xff\xc0\xff\xc0',
  190:b'\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00?\xfc?\xfc\x00\x00\x00\x00',
  191:b'\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xf0\xff\xf0\x00\x00\x00\x00',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 16, 16
