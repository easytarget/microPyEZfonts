'''
    ezFBfont_open_iconic_all_2x_0xC0_0xFF_16 : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    This font definition can be used with the "ezFBfont" class provided there.
    It can also be used with the "writer" class from Peter Hinches micropython
      font-to-py tool: https://github.com/peterhinch/micropython-font-to-py

    Original open_iconic_all_2x.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

'''
# Code generated by bdf2dict.py
# Font: open_iconic_all_2x
# Cmd: ['bdf2dict.py'], ['Symbols-bdf-sources/open_iconic_all_2x.bdf', '_', './0xC0_0xFF-char.set']
# Date: 2024-07-31 15:36:12
'''
    Original Copyright, Comments and Notices from source:

    COMMENT "https://github.com/iconic/open-iconic, SIL OPEN FONT LICENSE"
'''
version = '0.33'
name = 'open_iconic_all_2x'
family = 'iconic'
weight = 'none'
size = None

def height():
    return 16

def baseline():
    return 16

def max_width():
    return 16

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return True

def min_ch():
    return 192

def max_ch():
    return 255

_g = {
  192:b'\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x0f\xff\x0f\xff\x00\x00\x00\x00',
  193:b'\x00x\x01\xfe\x01\xe6\x03\xc3\x03\xc3\x03\xe7\x07\xff\x0f\xfe\x1f\xfe\x1f\xf8?\xc0\x7f\xc0\xfc\x00\xfc\x00\xfc\x00\xfc\x00',
  194:b'\x00\x00\x00\x00?\xfc?\xfc0\x0c0\x0c0\x0c0\x0c0\x0c0\x0c\xfc?\xfc?\xff\xff\xff\xff\x00\x00\x00\x00',
  195:b'\xff\x00\xff\x00\xff\x00\xff\x00\xff0\xff0\xff0\xff0\x003\x003\x0f\xf3\x0f\xf3\x00\x03\x00\x03\x00\xff\x00\xff',
  196:b'\x00\xc0\x03\xc0\x0f\x00<00\xf0\x03\xc0\x0f\x00<00\xf0\x03\xc0\x0f\xc0\x0f\xc0\x00\x00\x00\x00\x07\x80\x07\x80',
  197:b'\x0c<\x0c~<\xe7<\xc3\x00\x03\x00\x07\x0c\x0e\x1c\x1c88p0\xe0\x00\xc0\x00\xc3<\xe7<~0<0',
  198:b'\x00<\x00~\x00g\x00\x03\x00\x03\x07\xc7\x0f\xce\x1c\x1c88s\xf0\xe3\xe0\xc0\x00\xc0\x00\xe6\x00~\x00<\x00',
  199:b'\xcf\xff\xcf\xff\x00\x00\x00\x00\xcf\xff\xcf\xff\x00\x00\x00\x00\xcf\xff\xcf\xff\x00\x00\x00\x00\xcf\xff\xcf\xff\x00\x00\x00\x00',
  200:b'\xfc\xff\xfc\xff\xfc\x00\xfc\x00\xfc\xfc\xfc\xfc\x00\x00\x00\x00\xfc\xff\xfc\xff\xfc\x00\xfc\x00\xfc\xfc\xfc\xfc\x00\x00\x00\x00',
  201:b'\x00\x00\x00\x06\x00\x1e\x00|\x01\xfc\x07\xf8\x1f\xf8\x7f\xf0?\xf0\x07\xe0\x03\xe0\x01\xc0\x01\xc0\x01\x80\x00\x80\x00\x00',
  202:b'\x03\xc0\x07\xe0\x0ep\x0c0\x0c0\x0c0?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc\x00\x00\x00\x00',
  203:b'\x03\xc0\x07\xe0\x0ep\x0c0\x000\x000\x000\x000?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc',
  204:b'\x00\x08\x00\x0c\x7f\xfe\xff\xfe\xc0\x0c\xc0\x08\x00\x00\x00\x00\x10\x030\x03\x7f\xff\x7f\xfe0\x00\x10\x00\x00\x00\x00\x00',
  205:b'\x00\x00\x00\x00\x03\x00\x0f\x00\x1c\x00\x18\x0c0\x1e0?\xfc\x0cx\x0c0\x18\x008\x00\xf0\x00\xc0\x00\x00\x00\x00',
  206:b'?\xfc?\xfc0\x0c0\x0c\x00\x0c\x00\x0c0?0\x1ex\x0c\xfc\x0c0\x000\x000\x0c0\x0c?\xfc?\xfc',
  207:b'\x0f\xc0\x1f\xe08p`\x18\xe0\x1c\xc0\x0c\xc0\x0c\xc0\x0c\xc0\x0c\xe0\x18`\x188|\x1f\xfe\x0f\xdf\x00\x0f\x00\x06',
  208:b'\xff\xff\xff\xff\xc0\x03\xc0\x03\xc7\x83\xcf\xc3\xcc\xc3\xcc\xc3\xcf\xc3\xc7\x83\xc3?\xc0?\xc0\x03\xc0\x03\xff\xff\xff\xff',
  209:b'\x03\xc0\x0f\xf0\x1c8\x18\x180\x0c0\x0c0\x0c0\x0c\x18\x18\x1c8\x0f\xf0\x0f\xf0\x07\xe0\x03\xc0\x01\x80\x00\x00',
  210:b'\x00\x00\x00\x00<<<<<<<<<<<<<<<<<<<<<<<<\x00\x00\x00\x00',
  211:b'\x00\x00\x00\x00 \x008\x00>\x00?\x80?\xe0?\xf8?\xf8?\xe0?\x80>\x008\x00 \x00\x00\x00\x00\x00',
  212:b'\x00\x00\x00\x00\x03\xc0\x0f\xf0\x1f\xf8\x1f\xf8?\xfc?\xfc?\xfc?\xfc\x1f\xf8\x1f\xf8\x0f\xf0\x03\xc0\x00\x00\x00\x00',
  213:b'\x00\x00\x00\x00\x01\x01\x03\x03\x07\x07\x1f\x1f??\x7f\x7f\x7f\x7f??\x1f\x1f\x07\x07\x03\x03\x01\x01\x00\x00\x00\x00',
  214:b'\x00\x00\x00\x00\x80\x80\xc0\xc0\xe0\xe0\xf8\xf8\xfc\xfc\xfe\xfe\xfe\xfe\xfc\xfc\xf8\xf8\xe0\xe0\xc0\xc0\x80\x80\x00\x00\x00\x00',
  215:b'\x00\x00\x00\x00\xf0\x04\xf0\x0c\xf0<\xf0\xfc\xf1\xfc\xf7\xfc\xf7\xfc\xf1\xfc\xf0\xfc\xf0<\xf0\x0c\xf0\x04\x00\x00\x00\x00',
  216:b'\x00\x00\x00\x00\x80<\xc0<\xf0<\xfc<\xfe<\xff\xbc\xff\xbc\xfe<\xfc<\xf0<\xc0<\x80<\x00\x00\x00\x00',
  217:b'\x00\x00\x00\x00?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc?\xfc\x00\x00\x00\x00',
  218:b'\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0',
  219:b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff',
  220:b'\x01\x80\x03\xc0\x03\xc0\x03\xc03\xcc3\xcc3\xcc1\x8c\x18\x18\x1c8\x0f\xf0\x03\xc0\x01\x80\x01\x80\x07\xe0\x0f\xf0',
  221:b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  222:b'\xff\xff\xff\xff\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xff\xff\xff\xff\x03\xc0\x03\xc0\x1f\xf8?\xfc',
  223:b'\x08\x00\x18\x008\x00x\x00x\x00\xfc\x00\xfc\x00\xfe\x00\xff\x00\xff\x80\x7f\xf2\x7f\xfe?\xfc\x1f\xf8\x0f\xf0\x01\x80',
  224:b'\x00\x00\x03\x00\x07\x80\x03\x00\x03\x00#\x10\x7f\xf8\x7f\xf8#\x10\x03\x00\x03\x00\x07\x80\x03\x00\x00\x00\x00\x00\x00\x00',
  225:b'\x00\x7f\x07\xff\x0f\xff\x0f\xff\x0f\x03\x0c\x03\x0c\x03\x0c\x03\x0c\x1f\x0c?|?\xfc?\xfc?\xfc\x1e\xfc\x00x\x00',
  226:b'\x00\xf0\x01\xf8\x03\x9c\x07\x0c\x0e\x0c\x1c\x1c88vp\xee\xe0\xcd\xc0\xcf\x80\xcf`\xe0\xe0q\xc0?\x80\x1f\x00',
  227:b'\x00\x00\x00\x18\x00\x1c\x00\x0e\x00\x06\x01\x80\x03\xc0\x07\xe0\x0f\xe0\x1f\xc0?\x80\x7f\x00\xfe\x00\xfc\x00\xf8\x00\xf0\x00',
  228:b'\x000\x00x\x0c|\x1e<?<?<?8?0\x1e\x00\x0c\x07\x00\x1f\xe1\xcf\xff\xcf\xff\xcf\xff\xc0\xff\xc0',
  229:b'\x03\xc0\x07\xe0\x07\xe0\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x07\xe0\x07\xe0\x03\xc00\x0c|>\xff\xff\xff\xff\xff\xff\xff\xff',
  230:b'?\xf0?\xf000000000000000000000?\xf0<\xf0<\xf0?\xf0',
  231:b'\x0f\x00\x1f\x00\x1f \x0f8\x07<c>q?\xf8?\xfc?\xfc\x7f\xf8\xffq\xffc\xfe\x07\xfc\x07\xf8\x03\xf0',
  232:b'?\xf0?\xf0\x0f\xc0\x0f\xc0\x0f\xc0\x0f\xc0\x7f\xf8\xff\xfc\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x00\x00',
  233:b'\x07\xe0\x1f\xf8?\xfc\x7f\xfe}\xfe\xfc\xff\xfc?\xfc\x1f\xfc\x1f\xfc?\xfc\xff}\xfe\x7f\xfe?\xfc\x1f\xf8\x07\xe0',
  234:b'\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\xff\xff\xff\xff\xff\xff\xff\xff\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0',
  235:b'\x03\x00\x03\x00\x03\x00\x13 30c\x18\xe3\x1c\xc3\x0c\xc0\x0c\xc0\x0c\xc0\x0c\xe0\x1c`\x188p\x1f\xe0\x0f\xc0',
  236:b'\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0\x00\x00\x00\x00\xff\xff\xff\xff\xc0\x03\xc0\x03\xcf\xf3\xcf\xf3\x0f\xf0\x0f\xf0\x0f\xf0\x0f\xf0',
  237:b'\xc0\x03\xc0\x03\xcf\x03\xcf\x03\xc0\x03\xc0\x03\xc3\xc3\xc3\xc3\xc0\x03\xc0\x03\xc0\xf3\xc0\xf3\xc0\x03\xc0\x03\x00\x00\x00\x00',
  238:b'\x00\x00\x02\x00\x02\x00\x07\x00\x07\x00\x070\x07\xb0\xfd\xff\xfd\xff=\xe0\x18\xc0\x18\xc0\x18\xc0\x00\x00\x00\x00\x00\x00',
  239:b'\x06\x00\x0f\x00\x0f\x00\x06\x00\xff\xf0\xff\xf0\xff\xf0\xff\xf0\xff\xf6\xff\xff\xff\xff\xff\xf6\xf9\xf0\xf0\xf0\xf0\xf0\xf9\xf0',
  240:b'\x03\xf0\x07\xf8\x0e\x1c\x0c\x0c\x00\x0c\x00\x0c\x00\x18\x008\x00p\x00\xe0\x00\xc0\x00\xc0\x00\x00\x00\x00\x00\xc0\x00\xc0',
  241:b'\x01\xe0\x07\xf8\x07\xf8\x0f\xfc?\xfc\x7f\xfc\xff\xfe\xff\xff\xf8\x7f\xf0?\x03\x07\x03\x0230303030',
  242:b'\x00\x08\x00\x0c\xe0>\xf0~8\xec\x1d\xc8\x0f\x80\x07\x00\x07\x80\x0f\x80\x1c\xc88\xec\xf0~\xe0>\x00\x0c\x00\x08',
  243:b'\x07\xe0\x1f\xfb<?p\x0f`\x1f\xe0?\xc0\x00\xc0\x00\xc0\x00\xc0\x00\xe0\x00`\x00p\x00<8\x1f\xf8\x07\xe0',
  244:b'\x00\x7f\x00?\x00\x1f\x00\x1f\x00?\x00s\x00\xe1\x01\xc0\x83\x80\x87\x00\xce\x00\xfc\x00\xf8\x00\xf8\x00\xfc\x00\xfe\x00',
  245:b'\x00\x00\x03\x00\x07\x80\x0f\xc0\x1f\xe0?\xf0\x03\x00\x03\x00\x03\x00\x03\x00?\xf0\x1f\xe0\x0f\xc0\x07\x80\x03\x00\x00\x00',
  246:b'\x00\x00\x00\x00\x04 \x0c0\x1c8<<\x7f\xfe\x7f\xfe<<\x1c8\x0c0\x04 \x00\x00\x00\x00\x00\x00\x00\x00',
  247:b'<\x00?\x00\x07\xc0\x00\xe08p>8\x07\x9c\x01\xcc0\xc6<f\x0eg\x063c3\xf33\xf0\x00`\x00',
  248:b'\xf0\x00\xfe\x00\xff\x80\xff\xc0\x1f\xe0\x03\xf0\xe1\xf8\xf8\xfc\xfe|\xff>?\x1e\x0f\x9e\xc7\x9f\xe7\xcf\xf3\xcf\xf3\xcf',
  249:b'\x07\xfe\x0f\xff\x0c\xff\x0c\xff\x0c\xff\x0c\xff\x0c\x00\x0c\x00\x0f\xfc\x0f\xfc\xcf\xfc\xcf\xfc\xcf\xfc\xcf\xfc\xff\xfc\x7f\xf8',
  250:b'\x00 \x000\x008\x00<\x03\xfe\x0f\xff?\xfe\x7f\xfcx8`0\xc0 \x80\x00\x00\x00\x00\x00\x00\x00\x00\x00',
  251:b'\xfc\x00\xfc\x08\xc0~\xc1\xff\xc3\xfe\xc7\xfc\xc4\x08\xc0\x00\xc0\x00\xc0\x00\xc00\xc00\xff\xf0\xff\xf0\x00\x00\x00\x00',
  252:b'\x01\x80\x0f\xf0>\xfc\xf8\xff\xc0\xff\xc0\xff\xc0\xff`\xfe`\xfe`\xfe0\xfc8\xfc\x1c\xf8\x0e\xf0\x07\xe0\x03\xc0',
  253:b'\x00\x0c\x00\x0c\x00\xcc\x00\xcc\x00\xcc\x00\xcc\x0c\xcc\x0c\xcc\x0c\xcc\x0c\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc',
  254:b'\x03\x00\x03\x00?\x00\x7f\x00\x7f\xf0?\xf8\x03\xf8\x03\xf0\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00\x03\x00',
  255:b'\x0c\xf0\x0c\xf0\x0c\x00\x0c\x00\x0c\xfc\x0c\xfc\x0c\x00\x0c\x00\x0c\xff\x0c\xff\x0c\x00\x0c\x00\x7f\x80?\x00\x1e\x00\x0c\x00',
}

def get_ch(ch):
    c = ord(ch)
    if c not in _g.keys():
        return None, 0, 0
    return memoryview(_g[c]), 16, 16
