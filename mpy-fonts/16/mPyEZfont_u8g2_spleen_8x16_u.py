'''
    mPyEZfont_u8g2_spleen_8x16_u.py : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    Original spleen-8x16.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    This font definition can be used with the "writer" class from Peter Hinches
      micropython font-to-py tool, and was generated using his tooling from
      https://github.com/peterhinch/micropython-font-to-py

    Original Copyright Notice from source:

    COPYRIGHT "Copyright (c) 2018-2022, Frederic Cambus"

    Original Comments from source (may include copyright info):

    COMMENT /*
    COMMENT  * Spleen 8x16 1.9.1
    COMMENT  * Copyright (c) 2018-2022, Frederic Cambus
    COMMENT  * https://www.cambus.net/
    COMMENT  *
    COMMENT  * Created:      2018-08-11
    COMMENT  * Last Updated: 2020-10-10
    COMMENT  *
    COMMENT  * Spleen is released under the BSD 2-Clause license.
    COMMENT  * See LICENSE file for details.
    COMMENT  *
    COMMENT  * SPDX-License-Identifier: BSD-2-Clause
    COMMENT  */
'''

# Code generated by font_to_py.py.
# Font: spleen-8x16.bdf
# Cmd: ../micropython-font-to-py/font_to_py.py -x -l 95 -e 32 ../u8g2/tools/font/bdf/spleen-8x16.bdf 0 tmp_mPyEZfont_u8g2_spleen_8x16_u.py
version = '0.33'

def height():
    return 16

def baseline():
    return 12

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 95

_font =\
b'\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\x18\x18\x18\x18\x18\x18\x18\x00'\
b'\x18\x18\x00\x00\x00\x00\x08\x00\x00\x66\x66\x66\x66\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x6c\x6c\xfe\x6c'\
b'\x6c\x6c\x6c\xfe\x6c\x6c\x00\x00\x00\x00\x08\x00\x00\x10\x7e\xd0'\
b'\xd0\xd0\x7c\x16\x16\x16\x16\xfc\x10\x00\x00\x00\x08\x00\x00\x00'\
b'\x06\x66\x6c\x0c\x18\x18\x30\x36\x66\x60\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\x38\x6c\x6c\x6c\x38\x70\xda\xcc\xcc\x7a\x00\x00\x00\x00'\
b'\x08\x00\x00\x18\x18\x18\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x08\x00\x00\x0e\x18\x30\x30\x60\x60\x60\x60\x30\x30\x18'\
b'\x0e\x00\x00\x00\x08\x00\x00\x70\x18\x0c\x0c\x06\x06\x06\x06\x0c'\
b'\x0c\x18\x70\x00\x00\x00\x08\x00\x00\x00\x00\x00\x66\x3c\x18\xff'\
b'\x18\x3c\x66\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x18'\
b'\x18\x7e\x18\x18\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x18\x18\x30\x00\x00\x00\x08\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x7e\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x18\x00\x00\x00\x00'\
b'\x08\x00\x00\x06\x06\x0c\x0c\x18\x18\x30\x30\x60\x60\xc0\xc0\x00'\
b'\x00\x00\x08\x00\x00\x00\x7c\xc6\xc6\xce\xde\xf6\xe6\xc6\xc6\x7c'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\x18\x38\x78\x58\x18\x18\x18\x18'\
b'\x18\x7e\x00\x00\x00\x00\x08\x00\x00\x00\x7c\xc6\x06\x06\x0c\x18'\
b'\x30\x60\xc6\xfe\x00\x00\x00\x00\x08\x00\x00\x00\x7c\xc6\x06\x06'\
b'\x3c\x06\x06\x06\xc6\x7c\x00\x00\x00\x00\x08\x00\x00\x00\xc0\xc0'\
b'\xcc\xcc\xcc\xcc\xfe\x0c\x0c\x0c\x00\x00\x00\x00\x08\x00\x00\x00'\
b'\xfe\xc6\xc0\xc0\xfc\x06\x06\x06\xc6\x7c\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\x7c\xc6\xc0\xc0\xfc\xc6\xc6\xc6\xc6\x7c\x00\x00\x00\x00'\
b'\x08\x00\x00\x00\xfe\xc6\x06\x06\x0c\x18\x30\x30\x30\x30\x00\x00'\
b'\x00\x00\x08\x00\x00\x00\x7c\xc6\xc6\xc6\x7c\xc6\xc6\xc6\xc6\x7c'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\x7c\xc6\xc6\xc6\xc6\x7e\x06\x06'\
b'\xc6\x7c\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x18\x18\x00'\
b'\x00\x00\x18\x18\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x18'\
b'\x18\x00\x00\x00\x18\x18\x30\x00\x00\x00\x08\x00\x00\x00\x06\x0c'\
b'\x18\x30\x60\x60\x30\x18\x0c\x06\x00\x00\x00\x00\x08\x00\x00\x00'\
b'\x00\x00\x00\x7e\x00\x00\x7e\x00\x00\x00\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\x60\x30\x18\x0c\x06\x06\x0c\x18\x30\x60\x00\x00\x00\x00'\
b'\x08\x00\x00\x00\x7c\xc6\x06\x0c\x18\x30\x30\x00\x30\x30\x00\x00'\
b'\x00\x00\x08\x00\x00\x00\x00\x7c\xc2\xda\xda\xda\xda\xde\xc0\x7c'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\x7c\xc6\xc6\xc6\xfe\xc6\xc6\xc6'\
b'\xc6\xc6\x00\x00\x00\x00\x08\x00\x00\x00\xfc\xc6\xc6\xc6\xfc\xc6'\
b'\xc6\xc6\xc6\xfc\x00\x00\x00\x00\x08\x00\x00\x00\x7e\xc0\xc0\xc0'\
b'\xc0\xc0\xc0\xc0\xc0\x7e\x00\x00\x00\x00\x08\x00\x00\x00\xfc\xc6'\
b'\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xfc\x00\x00\x00\x00\x08\x00\x00\x00'\
b'\x7e\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xc0\x7e\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\x7e\xc0\xc0\xc0\xf8\xc0\xc0\xc0\xc0\xc0\x00\x00\x00\x00'\
b'\x08\x00\x00\x00\x7e\xc0\xc0\xc0\xde\xc6\xc6\xc6\xc6\x7e\x00\x00'\
b'\x00\x00\x08\x00\x00\x00\xc6\xc6\xc6\xc6\xfe\xc6\xc6\xc6\xc6\xc6'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\x7e\x18\x18\x18\x18\x18\x18\x18'\
b'\x18\x7e\x00\x00\x00\x00\x08\x00\x00\x00\x7e\x18\x18\x18\x18\x18'\
b'\x18\x18\x18\xf0\x00\x00\x00\x00\x08\x00\x00\x00\xc6\xc6\xc6\xcc'\
b'\xf8\xcc\xc6\xc6\xc6\xc6\x00\x00\x00\x00\x08\x00\x00\x00\xc0\xc0'\
b'\xc0\xc0\xc0\xc0\xc0\xc0\xc0\x7e\x00\x00\x00\x00\x08\x00\x00\x00'\
b'\xc6\xee\xfe\xd6\xc6\xc6\xc6\xc6\xc6\xc6\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\xc6\xc6\xe6\xe6\xd6\xd6\xce\xce\xc6\xc6\x00\x00\x00\x00'\
b'\x08\x00\x00\x00\x7c\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6\x7c\x00\x00'\
b'\x00\x00\x08\x00\x00\x00\xfc\xc6\xc6\xc6\xfc\xc0\xc0\xc0\xc0\xc0'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\x7c\xc6\xc6\xc6\xc6\xc6\xc6\xd6'\
b'\xd6\x7c\x18\x0c\x00\x00\x08\x00\x00\x00\xfc\xc6\xc6\xc6\xfc\xc6'\
b'\xc6\xc6\xc6\xc6\x00\x00\x00\x00\x08\x00\x00\x00\x7e\xc0\xc0\xc0'\
b'\x7c\x06\x06\x06\x06\xfc\x00\x00\x00\x00\x08\x00\x00\x00\xff\x18'\
b'\x18\x18\x18\x18\x18\x18\x18\x18\x00\x00\x00\x00\x08\x00\x00\x00'\
b'\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6\xc6\x7e\x00\x00\x00\x00\x08\x00'\
b'\x00\x00\xc6\xc6\xc6\xc6\xc6\xc6\xc6\x6c\x38\x10\x00\x00\x00\x00'\
b'\x08\x00\x00\x00\xc6\xc6\xc6\xc6\xc6\xc6\xd6\xfe\xee\xc6\x00\x00'\
b'\x00\x00\x08\x00\x00\x00\xc6\xc6\xc6\x6c\x38\x6c\xc6\xc6\xc6\xc6'\
b'\x00\x00\x00\x00\x08\x00\x00\x00\xc6\xc6\xc6\xc6\x7e\x06\x06\x06'\
b'\x06\xfc\x00\x00\x00\x00\x08\x00\x00\x00\xfe\x06\x06\x0c\x18\x30'\
b'\x60\xc0\xc0\xfe\x00\x00\x00\x00\x08\x00\x00\x3e\x30\x30\x30\x30'\
b'\x30\x30\x30\x30\x30\x30\x3e\x00\x00\x00\x08\x00\x00\xc0\xc0\x60'\
b'\x60\x30\x30\x18\x18\x0c\x0c\x06\x06\x00\x00\x00\x08\x00\x00\x7c'\
b'\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x7c\x00\x00\x00\x08\x00'\
b'\x00\x10\x38\x6c\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\xfe\x00'

_index =\
b'\x00\x00\x12\x00\x24\x00\x36\x00\x48\x00\x5a\x00\x6c\x00\x7e\x00'\
b'\x90\x00\xa2\x00\xb4\x00\xc6\x00\xd8\x00\xea\x00\xfc\x00\x0e\x01'\
b'\x20\x01\x32\x01\x44\x01\x56\x01\x68\x01\x7a\x01\x8c\x01\x9e\x01'\
b'\xb0\x01\xc2\x01\xd4\x01\xe6\x01\xf8\x01\x0a\x02\x1c\x02\x2e\x02'\
b'\x40\x02\x52\x02\x64\x02\x76\x02\x88\x02\x9a\x02\xac\x02\xbe\x02'\
b'\xd0\x02\xe2\x02\xf4\x02\x06\x03\x18\x03\x2a\x03\x3c\x03\x4e\x03'\
b'\x60\x03\x72\x03\x84\x03\x96\x03\xa8\x03\xba\x03\xcc\x03\xde\x03'\
b'\xf0\x03\x02\x04\x14\x04\x26\x04\x38\x04\x4a\x04\x5c\x04\x6e\x04'\
b'\x80\x04\x92\x04'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 95 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 16
    return _mvfont[doff + 2:next_offs], 16, width
 
