'''
    mPyEZfont_u8g2_9x18_n.py : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    Original 9x18.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    This font definition can be used with the "writer" class from Peter Hinches
      micropython font-to-py tool, and was generated using his tooling from
      https://github.com/peterhinch/micropython-font-to-py

    Original Copyright Notice from source:

    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments from source (may include copyright info):

    None found:
'''

# Code generated by font_to_py.py.
# Font: 9x18.bdf Char set:  %*+,-./0123456789:Ã¸
# Cmd: micropython-font-to-py/font_to_py.py -x -k mpy-fonts/n-char.set u8g2/tools/font/bdf/9x18.bdf 0 tmp_mPyEZfont_u8g2_9x18_n.py
version = '0.33'

def height():
    return 18

def baseline():
    return 14

def max_width():
    return 9

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 248

_font =\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x22\x00\x41\x00'\
b'\x01\x00\x02\x00\x04\x00\x08\x00\x08\x00\x00\x00\x08\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x21\x00\x52\x00\x52\x00'\
b'\x24\x00\x08\x00\x08\x00\x12\x00\x25\x00\x25\x00\x42\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x08\x00\x49\x00\x2a\x00\x1c\x00\x2a\x00\x49\x00\x08\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00'\
b'\x08\x00\x08\x00\x7f\x00\x08\x00\x08\x00\x08\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x0c\x00\x0c\x00\x04\x00\x08\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x0c\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00\x02\x00'\
b'\x04\x00\x08\x00\x08\x00\x10\x00\x20\x00\x20\x00\x40\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x1c\x00\x22\x00\x41\x00\x41\x00\x41\x00\x41\x00\x41\x00'\
b'\x41\x00\x22\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x18\x00\x28\x00'\
b'\x48\x00\x08\x00\x08\x00\x08\x00\x08\x00\x08\x00\x7f\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x1c\x00\x22\x00\x41\x00\x01\x00\x02\x00\x04\x00\x08\x00'\
b'\x10\x00\x20\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x01\x00\x02\x00'\
b'\x04\x00\x0c\x00\x02\x00\x01\x00\x01\x00\x42\x00\x3c\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x02\x00\x06\x00\x0a\x00\x12\x00\x22\x00\x42\x00\x7f\x00'\
b'\x02\x00\x02\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x40\x00\x40\x00'\
b'\x40\x00\x7c\x00\x02\x00\x01\x00\x01\x00\x42\x00\x3c\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x1e\x00\x20\x00\x40\x00\x40\x00\x5c\x00\x62\x00\x41\x00'\
b'\x41\x00\x22\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x01\x00\x02\x00'\
b'\x02\x00\x04\x00\x04\x00\x08\x00\x08\x00\x08\x00\x08\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x1c\x00\x22\x00\x41\x00\x22\x00\x1c\x00\x22\x00\x41\x00'\
b'\x41\x00\x22\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x22\x00\x41\x00'\
b'\x41\x00\x23\x00\x1d\x00\x01\x00\x01\x00\x02\x00\x3c\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x0c\x00\x00\x00\x00\x00'\
b'\x00\x00\x0c\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x22\x00\x41\x00'\
b'\x01\x00\x02\x00\x04\x00\x08\x00\x08\x00\x00\x00\x08\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x01\x00\x3e\x00\x45\x00\x45\x00\x49\x00'\
b'\x51\x00\x51\x00\x3e\x00\x40\x00\x00\x00\x00\x00\x00\x00'

_sparse =\
b'\x20\x00\x05\x00\x25\x00\x0a\x00\x2a\x00\x0f\x00\x2b\x00\x14\x00'\
b'\x2c\x00\x19\x00\x2d\x00\x1e\x00\x2e\x00\x23\x00\x2f\x00\x28\x00'\
b'\x30\x00\x2d\x00\x31\x00\x32\x00\x32\x00\x37\x00\x33\x00\x3c\x00'\
b'\x34\x00\x41\x00\x35\x00\x46\x00\x36\x00\x4b\x00\x37\x00\x50\x00'\
b'\x38\x00\x55\x00\x39\x00\x5a\x00\x3a\x00\x5f\x00\x3f\x00\x64\x00'\
b'\xf8\x00\x69\x00'

_mvfont = memoryview(_font)
_mvsp = memoryview(_sparse)
ifb = lambda l : l[0] | (l[1] << 8)

def bs(lst, val):
    while True:
        m = (len(lst) & ~ 7) >> 1
        v = ifb(lst[m:])
        if v == val:
            return ifb(lst[m + 2:])
        if not m:
            return 0
        lst = lst[m:] if v < val else lst[:m]

def get_ch(ch):
    doff = bs(_mvsp, ord(ch)) << 3
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 18
    return _mvfont[doff + 2:next_offs], 18, width
 
