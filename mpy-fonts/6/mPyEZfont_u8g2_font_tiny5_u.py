'''
    mPyEZfont_u8g2_font_tiny5_u.py : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    Original font_tiny5.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    This font definition can be used with the "writer" class from Peter Hinches
      micropython font-to-py tool, and was generated using his tooling from
      https://github.com/peterhinch/micropython-font-to-py

    Original Copyright Notice from source:

    COPYRIGHT "(CC) Gissio 2022-2023 Creative Commons Zero v1.0 Universal"

    Original Comments from source (may include copyright info):

    COMMENT Exported by Fony v1.4.7
'''

# Code generated by font_to_py.py.
# Font: font_tiny5.bdf
# Cmd: ../micropython-font-to-py/font_to_py.py -x -l 95 -e 32 ../u8g2/tools/font/bdf/font_tiny5.bdf 0 tmp_mPyEZfont_u8g2_font_tiny5_u.py
version = '0.33'

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 95

_font =\
b'\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00'\
b'\x02\x00\x80\x80\x80\x00\x80\x00\x04\x00\xa0\xa0\x00\x00\x00\x00'\
b'\x06\x00\x50\xf8\x50\xf8\x50\x00\x04\x00\x40\x60\xc0\x20\xc0\x40'\
b'\x05\x00\x90\x20\x40\x90\x00\x00\x05\x00\x40\xa0\x40\xa0\x50\x00'\
b'\x02\x00\x80\x80\x00\x00\x00\x00\x03\x00\x40\x80\x80\x80\x40\x00'\
b'\x03\x00\x80\x40\x40\x40\x80\x00\x04\x00\x40\xe0\x40\xa0\x00\x00'\
b'\x04\x00\x00\x40\xe0\x40\x00\x00\x03\x00\x00\x00\x00\x00\x40\x80'\
b'\x04\x00\x00\x00\xe0\x00\x00\x00\x02\x00\x00\x00\x00\x00\x80\x00'\
b'\x03\x00\x40\x40\x80\x80\x80\x00\x04\x00\x40\xa0\xa0\xa0\x40\x00'\
b'\x04\x00\x40\xc0\x40\x40\x40\x00\x04\x00\xc0\x20\x40\x80\xe0\x00'\
b'\x04\x00\xc0\x20\x40\x20\xc0\x00\x04\x00\x20\x60\xa0\xe0\x20\x00'\
b'\x04\x00\xe0\x80\xc0\x20\xc0\x00\x04\x00\x60\x80\xc0\xa0\x40\x00'\
b'\x04\x00\xe0\x20\x40\x40\x40\x00\x04\x00\x40\xa0\x40\xa0\x40\x00'\
b'\x04\x00\x40\xa0\x60\x20\xc0\x00\x02\x00\x00\x80\x00\x00\x80\x00'\
b'\x03\x00\x00\x40\x00\x00\x40\x80\x04\x00\x20\x40\x80\x40\x20\x00'\
b'\x04\x00\x00\xe0\x00\xe0\x00\x00\x04\x00\x80\x40\x20\x40\x80\x00'\
b'\x04\x00\xc0\x20\x40\x00\x40\x00\x05\x00\x60\x90\xb0\x80\x60\x00'\
b'\x05\x00\x60\x90\xf0\x90\x90\x00\x05\x00\xe0\x90\xe0\x90\xe0\x00'\
b'\x05\x00\x60\x90\x80\x90\x60\x00\x05\x00\xe0\x90\x90\x90\xe0\x00'\
b'\x05\x00\xf0\x80\xe0\x80\xf0\x00\x05\x00\xf0\x80\xe0\x80\x80\x00'\
b'\x05\x00\x70\x80\xb0\x90\x70\x00\x05\x00\x90\x90\xf0\x90\x90\x00'\
b'\x02\x00\x80\x80\x80\x80\x80\x00\x04\x00\x20\x20\x20\xa0\x40\x00'\
b'\x05\x00\x90\xa0\xc0\xa0\x90\x00\x04\x00\x80\x80\x80\x80\xe0\x00'\
b'\x06\x00\x88\xd8\xa8\x88\x88\x00\x05\x00\x90\xd0\xb0\x90\x90\x00'\
b'\x05\x00\x60\x90\x90\x90\x60\x00\x05\x00\xe0\x90\xe0\x80\x80\x00'\
b'\x05\x00\x60\x90\x90\xa0\x50\x00\x05\x00\xe0\x90\xe0\x90\x90\x00'\
b'\x05\x00\x70\x80\x60\x10\xe0\x00\x04\x00\xe0\x40\x40\x40\x40\x00'\
b'\x05\x00\x90\x90\x90\x90\x60\x00\x04\x00\xa0\xa0\xa0\x40\x40\x00'\
b'\x06\x00\xa8\xa8\xa8\x50\x50\x00\x04\x00\xa0\xa0\x40\xa0\xa0\x00'\
b'\x04\x00\xa0\xa0\x40\x40\x40\x00\x04\x00\xe0\x20\x40\x80\xe0\x00'\
b'\x03\x00\xc0\x80\x80\x80\xc0\x00\x03\x00\x80\x80\x40\x40\x40\x00'\
b'\x03\x00\xc0\x40\x40\x40\xc0\x00\x04\x00\x40\xa0\x00\x00\x00\x00'\
b'\x04\x00\x00\x00\x00\x00\xe0\x00'

_index =\
b'\x00\x00\x08\x00\x10\x00\x18\x00\x20\x00\x28\x00\x30\x00\x38\x00'\
b'\x40\x00\x48\x00\x50\x00\x58\x00\x60\x00\x68\x00\x70\x00\x78\x00'\
b'\x80\x00\x88\x00\x90\x00\x98\x00\xa0\x00\xa8\x00\xb0\x00\xb8\x00'\
b'\xc0\x00\xc8\x00\xd0\x00\xd8\x00\xe0\x00\xe8\x00\xf0\x00\xf8\x00'\
b'\x00\x01\x08\x01\x10\x01\x18\x01\x20\x01\x28\x01\x30\x01\x38\x01'\
b'\x40\x01\x48\x01\x50\x01\x58\x01\x60\x01\x68\x01\x70\x01\x78\x01'\
b'\x80\x01\x88\x01\x90\x01\x98\x01\xa0\x01\xa8\x01\xb0\x01\xb8\x01'\
b'\xc0\x01\xc8\x01\xd0\x01\xd8\x01\xe0\x01\xe8\x01\xf0\x01\xf8\x01'\
b'\x00\x02\x08\x02'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 95 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 6
    return _mvfont[doff + 2:next_offs], 6, width
 
