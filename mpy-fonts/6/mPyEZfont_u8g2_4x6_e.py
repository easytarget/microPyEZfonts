'''
    mPyEZfont_u8g2_4x6_e.py : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    Original 4x6.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    This font definition can be used with the "writer" class from Peter Hinches
      micropython font-to-py tool, and was generated using his tooling from
      https://github.com/peterhinch/micropython-font-to-py

    Original Copyright Notice from source:

    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments from source (may include copyright info):

    None found:
'''

# Code generated by font_to_py.py.
# Font: 4x6.bdf
# Cmd: ../micropython-font-to-py/font_to_py.py -x -e 32 ../u8g2/tools/font/bdf/4x6.bdf 0 tmp_mPyEZfont_u8g2_4x6_e.py
version = '0.33'

def height():
    return 6

def baseline():
    return 5

def max_width():
    return 4

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 126

_font =\
b'\x04\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00'\
b'\x04\x00\x40\x40\x40\x00\x40\x00\x04\x00\xa0\xa0\x00\x00\x00\x00'\
b'\x04\x00\xa0\xf0\xa0\xf0\xa0\x00\x04\x00\x40\xe0\xc0\x20\xe0\x40'\
b'\x04\x00\x80\x20\x40\x80\x20\x00\x04\x00\x40\xa0\x40\xa0\x50\x00'\
b'\x04\x00\x40\x40\x00\x00\x00\x00\x04\x00\x20\x40\x40\x40\x40\x20'\
b'\x04\x00\x80\x40\x40\x40\x40\x80\x04\x00\xa0\x40\xe0\x40\xa0\x00'\
b'\x04\x00\x40\x40\xe0\x40\x40\x00\x04\x00\x00\x00\x00\x00\x40\x80'\
b'\x04\x00\x00\x00\xe0\x00\x00\x00\x04\x00\x00\x00\x00\x00\x40\x00'\
b'\x04\x00\x20\x20\x40\x80\x80\x00\x04\x00\x40\xa0\xe0\xa0\x40\x00'\
b'\x04\x00\x40\xc0\x40\x40\xe0\x00\x04\x00\x40\xa0\x20\x40\xe0\x00'\
b'\x04\x00\xe0\x20\x40\x20\xc0\x00\x04\x00\xa0\xa0\xe0\x20\x20\x00'\
b'\x04\x00\xe0\x80\xc0\x20\xc0\x00\x04\x00\x60\x80\xc0\xa0\x40\x00'\
b'\x04\x00\xe0\x20\x40\x80\x80\x00\x04\x00\x60\xa0\x40\xa0\xc0\x00'\
b'\x04\x00\x40\xa0\x60\x20\xc0\x00\x04\x00\x00\x40\x00\x00\x40\x00'\
b'\x04\x00\x00\x40\x00\x00\x40\x80\x04\x00\x20\x40\x80\x40\x20\x00'\
b'\x04\x00\x00\xe0\x00\xe0\x00\x00\x04\x00\x80\x40\x20\x40\x80\x00'\
b'\x04\x00\xc0\x20\x40\x00\x40\x00\x04\x00\x60\xa0\xa0\x80\x60\x00'\
b'\x04\x00\x40\xa0\xe0\xa0\xa0\x00\x04\x00\xc0\xa0\xc0\xa0\xc0\x00'\
b'\x04\x00\x40\xa0\x80\xa0\x40\x00\x04\x00\xc0\xa0\xa0\xa0\xc0\x00'\
b'\x04\x00\xe0\x80\xc0\x80\xe0\x00\x04\x00\xe0\x80\xc0\x80\x80\x00'\
b'\x04\x00\x60\x80\xa0\xa0\x60\x00\x04\x00\xa0\xa0\xe0\xa0\xa0\x00'\
b'\x04\x00\xe0\x40\x40\x40\xe0\x00\x04\x00\x20\x20\x20\xa0\x40\x00'\
b'\x04\x00\xa0\xa0\xc0\xa0\xa0\x00\x04\x00\x80\x80\x80\x80\xe0\x00'\
b'\x04\x00\xa0\xe0\xe0\xa0\xa0\x00\x04\x00\x20\xa0\xe0\xa0\x80\x00'\
b'\x04\x00\x40\xa0\xa0\xa0\x40\x00\x04\x00\xc0\xa0\xc0\x80\x80\x00'\
b'\x04\x00\x40\xa0\xa0\xa0\x40\x20\x04\x00\xc0\xa0\xc0\xa0\xa0\x00'\
b'\x04\x00\x60\x80\x40\x20\xc0\x00\x04\x00\xe0\x40\x40\x40\x40\x00'\
b'\x04\x00\xa0\xa0\xa0\xa0\xe0\x00\x04\x00\xa0\xa0\xa0\xe0\x40\x00'\
b'\x04\x00\xa0\xa0\xe0\xe0\xa0\x00\x04\x00\xa0\xa0\x40\xa0\xa0\x00'\
b'\x04\x00\xa0\xa0\x40\x40\x40\x00\x04\x00\xe0\x20\x40\x80\xe0\x00'\
b'\x04\x00\x60\x40\x40\x40\x60\x00\x04\x00\x80\x80\x40\x20\x20\x00'\
b'\x04\x00\xc0\x40\x40\x40\xc0\x00\x04\x00\x40\xa0\x00\x00\x00\x00'\
b'\x04\x00\x00\x00\x00\x00\x00\xe0\x04\x00\x40\x20\x00\x00\x00\x00'\
b'\x04\x00\x00\x60\xa0\xa0\x60\x00\x04\x00\x80\xc0\xa0\xa0\xc0\x00'\
b'\x04\x00\x00\x60\x80\x80\x60\x00\x04\x00\x20\x60\xa0\xa0\x60\x00'\
b'\x04\x00\x00\x40\xa0\xc0\x60\x00\x04\x00\x20\x40\xe0\x40\x40\x00'\
b'\x04\x00\x00\x60\xa0\x60\x20\xc0\x04\x00\x80\xc0\xa0\xa0\xa0\x00'\
b'\x04\x00\x40\x00\xc0\x40\xe0\x00\x04\x00\x20\x00\x20\x20\x20\xc0'\
b'\x04\x00\x80\xa0\xc0\xa0\xa0\x00\x04\x00\xc0\x40\x40\x40\xe0\x00'\
b'\x04\x00\x00\xa0\xe0\xa0\xa0\x00\x04\x00\x00\xc0\xa0\xa0\xa0\x00'\
b'\x04\x00\x00\x40\xa0\xa0\x40\x00\x04\x00\x00\xc0\xa0\xc0\x80\x80'\
b'\x04\x00\x00\x60\xa0\xa0\x60\x20\x04\x00\x00\xa0\xc0\x80\x80\x00'\
b'\x04\x00\x00\x60\xc0\x20\xc0\x00\x04\x00\x40\xe0\x40\x40\x20\x00'\
b'\x04\x00\x00\xa0\xa0\xa0\x60\x00\x04\x00\x00\xa0\xa0\xa0\x40\x00'\
b'\x04\x00\x00\xa0\xa0\xe0\xa0\x00\x04\x00\x00\xa0\x40\x40\xa0\x00'\
b'\x04\x00\x00\xa0\xa0\x60\x20\xc0\x04\x00\x00\xe0\x20\x40\xe0\x00'\
b'\x04\x00\x20\x40\xc0\x40\x40\x20\x04\x00\x40\x40\x40\x40\x40\x00'\
b'\x04\x00\x80\x40\x60\x40\x40\x80\x04\x00\x50\xa0\x00\x00\x00\x00'\

_index =\
b'\x00\x00\x08\x00\x10\x00\x18\x00\x20\x00\x28\x00\x30\x00\x38\x00'\
b'\x40\x00\x48\x00\x50\x00\x58\x00\x60\x00\x68\x00\x70\x00\x78\x00'\
b'\x80\x00\x88\x00\x90\x00\x98\x00\xa0\x00\xa8\x00\xb0\x00\xb8\x00'\
b'\xc0\x00\xc8\x00\xd0\x00\xd8\x00\xe0\x00\xe8\x00\xf0\x00\xf8\x00'\
b'\x00\x01\x08\x01\x10\x01\x18\x01\x20\x01\x28\x01\x30\x01\x38\x01'\
b'\x40\x01\x48\x01\x50\x01\x58\x01\x60\x01\x68\x01\x70\x01\x78\x01'\
b'\x80\x01\x88\x01\x90\x01\x98\x01\xa0\x01\xa8\x01\xb0\x01\xb8\x01'\
b'\xc0\x01\xc8\x01\xd0\x01\xd8\x01\xe0\x01\xe8\x01\xf0\x01\xf8\x01'\
b'\x00\x02\x08\x02\x10\x02\x18\x02\x20\x02\x28\x02\x30\x02\x38\x02'\
b'\x40\x02\x48\x02\x50\x02\x58\x02\x60\x02\x68\x02\x70\x02\x78\x02'\
b'\x80\x02\x88\x02\x90\x02\x98\x02\xa0\x02\xa8\x02\xb0\x02\xb8\x02'\
b'\xc0\x02\xc8\x02\xd0\x02\xd8\x02\xe0\x02\xe8\x02\xf0\x02\xf8\x02'\
b'\x00\x03'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 126 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 6
    return _mvfont[doff + 2:next_offs], 6, width
 
