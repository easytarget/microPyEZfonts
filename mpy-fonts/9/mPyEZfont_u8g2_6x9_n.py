'''
    mPyEZfont_u8g2_6x9_n.py : generated as part of the microPyEZfonts repository
      https://github.com/easytarget/microPyEZfonts

    Original 6x9.bdf font file was sourced from the U8G2 project:
      https://github.com/olikraus/u8g2

    This font definition can be used with the "writer" class from Peter Hinches
      micropython font-to-py tool, and was generated using his tooling from
      https://github.com/peterhinch/micropython-font-to-py

    Original Copyright Notice from source:

    COPYRIGHT "Public domain font.  Share and enjoy."

    Original Comments from source (may include copyright info):

    None found:
'''

# Code generated by font_to_py.py.
# Font: 6x9.bdf Char set:  *+,-./0123456789:
# Cmd: micropython-font-to-py/font_to_py.py -x -k mpy-fonts/n-char.set u8g2/tools/font/bdf/6x9.bdf 0 tmp_mPyEZfont_u8g2_6x9_n.py
version = '0.33'

def height():
    return 9

def baseline():
    return 7

def max_width():
    return 6

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 63

_font =\
b'\x06\x00\x30\x48\x08\x30\x20\x00\x20\x00\x00\x06\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x88\x50\xf8\x50\x88\x00'\
b'\x00\x06\x00\x00\x00\x20\x20\xf8\x20\x20\x00\x00\x06\x00\x00\x00'\
b'\x00\x00\x00\x30\x10\x10\x20\x06\x00\x00\x00\x00\x00\xf8\x00\x00'\
b'\x00\x00\x06\x00\x00\x00\x00\x00\x00\x30\x30\x00\x00\x06\x00\x00'\
b'\x08\x08\x10\x20\x40\x40\x00\x00\x06\x00\x00\x30\x48\x48\x48\x48'\
b'\x30\x00\x00\x06\x00\x00\x20\x60\x20\x20\x20\x70\x00\x00\x06\x00'\
b'\x00\x30\x48\x08\x10\x20\x78\x00\x00\x06\x00\x00\x78\x10\x30\x08'\
b'\x08\x70\x00\x00\x06\x00\x00\x10\x30\x50\x90\xf8\x10\x00\x00\x06'\
b'\x00\x00\x78\x40\x70\x08\x08\x70\x00\x00\x06\x00\x00\x30\x40\x70'\
b'\x48\x48\x30\x00\x00\x06\x00\x00\x78\x08\x08\x10\x20\x20\x00\x00'\
b'\x06\x00\x00\x30\x48\x30\x48\x48\x30\x00\x00\x06\x00\x00\x30\x48'\
b'\x48\x38\x08\x30\x00\x00\x06\x00\x00\x00\x30\x30\x00\x30\x30\x00'\
b'\x00'

_index =\
b'\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x16\x00\x21\x00\x2c\x00\x37\x00\x42\x00'\
b'\x4d\x00\x58\x00\x63\x00\x6e\x00\x79\x00\x84\x00\x8f\x00\x9a\x00'\
b'\xa5\x00\xb0\x00\xbb\x00\xc6\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\xd1\x00'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 63 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 9
    return _mvfont[doff + 2:next_offs], 9, width
 
